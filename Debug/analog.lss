
analog.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000126  00800100  00001a08  00001a9c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a08  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000016a  00800226  00800226  00001bc2  2**0
                  ALLOC
  3 .stab         00002964  00000000  00000000  00001bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001b62  00000000  00000000  00004528  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	37 c0       	rjmp	.+110    	; 0x70 <__dtors_end>
       2:	00 00       	nop
       4:	5d c0       	rjmp	.+186    	; 0xc0 <__bad_interrupt>
       6:	00 00       	nop
       8:	5b c0       	rjmp	.+182    	; 0xc0 <__bad_interrupt>
       a:	00 00       	nop
       c:	59 c0       	rjmp	.+178    	; 0xc0 <__bad_interrupt>
       e:	00 00       	nop
      10:	57 c0       	rjmp	.+174    	; 0xc0 <__bad_interrupt>
      12:	00 00       	nop
      14:	55 c0       	rjmp	.+170    	; 0xc0 <__bad_interrupt>
      16:	00 00       	nop
      18:	53 c0       	rjmp	.+166    	; 0xc0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	51 c0       	rjmp	.+162    	; 0xc0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	4f c0       	rjmp	.+158    	; 0xc0 <__bad_interrupt>
      22:	00 00       	nop
      24:	4d c0       	rjmp	.+154    	; 0xc0 <__bad_interrupt>
      26:	00 00       	nop
      28:	4b c0       	rjmp	.+150    	; 0xc0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	49 c0       	rjmp	.+146    	; 0xc0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	47 c0       	rjmp	.+142    	; 0xc0 <__bad_interrupt>
      32:	00 00       	nop
      34:	45 c0       	rjmp	.+138    	; 0xc0 <__bad_interrupt>
      36:	00 00       	nop
      38:	43 c0       	rjmp	.+134    	; 0xc0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	41 c0       	rjmp	.+130    	; 0xc0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	3f c0       	rjmp	.+126    	; 0xc0 <__bad_interrupt>
      42:	00 00       	nop
      44:	3d c0       	rjmp	.+122    	; 0xc0 <__bad_interrupt>
      46:	00 00       	nop
      48:	0c 94 a6 08 	jmp	0x114c	; 0x114c <__vector_18>
      4c:	0c 94 cf 08 	jmp	0x119e	; 0x119e <__vector_19>
      50:	37 c0       	rjmp	.+110    	; 0xc0 <__bad_interrupt>
      52:	00 00       	nop
      54:	88 c6       	rjmp	.+3344   	; 0xd66 <__vector_21>
      56:	00 00       	nop
      58:	33 c0       	rjmp	.+102    	; 0xc0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	31 c0       	rjmp	.+98     	; 0xc0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	2f c0       	rjmp	.+94     	; 0xc0 <__bad_interrupt>
      62:	00 00       	nop
      64:	2d c0       	rjmp	.+90     	; 0xc0 <__bad_interrupt>
	...

00000068 <__ctors_start>:
      68:	16 08       	sbc	r1, r6
      6a:	29 0a       	sbc	r2, r25

0000006c <__ctors_end>:
      6c:	22 08       	sbc	r2, r2
      6e:	35 0a       	sbc	r3, r21

00000070 <__dtors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d8 e0       	ldi	r29, 0x08	; 8
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	12 e0       	ldi	r17, 0x02	; 2
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e8 e0       	ldi	r30, 0x08	; 8
      84:	fa e1       	ldi	r31, 0x1A	; 26
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a6 32       	cpi	r26, 0x26	; 38
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	13 e0       	ldi	r17, 0x03	; 3
      94:	a6 e2       	ldi	r26, 0x26	; 38
      96:	b2 e0       	ldi	r27, 0x02	; 2
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a0 39       	cpi	r26, 0x90	; 144
      9e:	b1 07       	cpc	r27, r17
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>

000000a2 <__do_global_ctors>:
      a2:	10 e0       	ldi	r17, 0x00	; 0
      a4:	cc e6       	ldi	r28, 0x6C	; 108
      a6:	d0 e0       	ldi	r29, 0x00	; 0
      a8:	04 c0       	rjmp	.+8      	; 0xb2 <__do_global_ctors+0x10>
      aa:	22 97       	sbiw	r28, 0x02	; 2
      ac:	fe 01       	movw	r30, r28
      ae:	0e 94 45 0b 	call	0x168a	; 0x168a <__tablejump__>
      b2:	c8 36       	cpi	r28, 0x68	; 104
      b4:	d1 07       	cpc	r29, r17
      b6:	c9 f7       	brne	.-14     	; 0xaa <__do_global_ctors+0x8>
      b8:	0e 94 41 0a 	call	0x1482	; 0x1482 <main>
      bc:	0c 94 f8 0c 	jmp	0x19f0	; 0x19f0 <__do_global_dtors>

000000c0 <__bad_interrupt>:
      c0:	9f cf       	rjmp	.-194    	; 0x0 <__vectors>

000000c2 <__fixunssfsi>:
      c2:	ef 92       	push	r14
      c4:	ff 92       	push	r15
      c6:	0f 93       	push	r16
      c8:	1f 93       	push	r17
      ca:	7b 01       	movw	r14, r22
      cc:	8c 01       	movw	r16, r24
      ce:	20 e0       	ldi	r18, 0x00	; 0
      d0:	30 e0       	ldi	r19, 0x00	; 0
      d2:	40 e0       	ldi	r20, 0x00	; 0
      d4:	5f e4       	ldi	r21, 0x4F	; 79
      d6:	df d2       	rcall	.+1470   	; 0x696 <__gesf2>
      d8:	87 fd       	sbrc	r24, 7
      da:	0f c0       	rjmp	.+30     	; 0xfa <__fixunssfsi+0x38>
      dc:	c8 01       	movw	r24, r16
      de:	b7 01       	movw	r22, r14
      e0:	20 e0       	ldi	r18, 0x00	; 0
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	40 e0       	ldi	r20, 0x00	; 0
      e6:	5f e4       	ldi	r21, 0x4F	; 79
      e8:	87 d1       	rcall	.+782    	; 0x3f8 <__subsf3>
      ea:	2b d3       	rcall	.+1622   	; 0x742 <__fixsfsi>
      ec:	9b 01       	movw	r18, r22
      ee:	ac 01       	movw	r20, r24
      f0:	20 50       	subi	r18, 0x00	; 0
      f2:	30 40       	sbci	r19, 0x00	; 0
      f4:	40 40       	sbci	r20, 0x00	; 0
      f6:	50 48       	sbci	r21, 0x80	; 128
      f8:	05 c0       	rjmp	.+10     	; 0x104 <__fixunssfsi+0x42>
      fa:	c8 01       	movw	r24, r16
      fc:	b7 01       	movw	r22, r14
      fe:	21 d3       	rcall	.+1602   	; 0x742 <__fixsfsi>
     100:	9b 01       	movw	r18, r22
     102:	ac 01       	movw	r20, r24
     104:	b9 01       	movw	r22, r18
     106:	ca 01       	movw	r24, r20
     108:	1f 91       	pop	r17
     10a:	0f 91       	pop	r16
     10c:	ff 90       	pop	r15
     10e:	ef 90       	pop	r14
     110:	08 95       	ret

00000112 <_fpadd_parts>:
     112:	a0 e0       	ldi	r26, 0x00	; 0
     114:	b0 e0       	ldi	r27, 0x00	; 0
     116:	ef e8       	ldi	r30, 0x8F	; 143
     118:	f0 e0       	ldi	r31, 0x00	; 0
     11a:	0c 94 10 0b 	jmp	0x1620	; 0x1620 <__prologue_saves__+0x8>
     11e:	fc 01       	movw	r30, r24
     120:	ea 01       	movw	r28, r20
     122:	80 81       	ld	r24, Z
     124:	82 30       	cpi	r24, 0x02	; 2
     126:	08 f4       	brcc	.+2      	; 0x12a <_fpadd_parts+0x18>
     128:	38 c1       	rjmp	.+624    	; 0x39a <_fpadd_parts+0x288>
     12a:	db 01       	movw	r26, r22
     12c:	9c 91       	ld	r25, X
     12e:	92 30       	cpi	r25, 0x02	; 2
     130:	08 f4       	brcc	.+2      	; 0x134 <_fpadd_parts+0x22>
     132:	30 c1       	rjmp	.+608    	; 0x394 <_fpadd_parts+0x282>
     134:	84 30       	cpi	r24, 0x04	; 4
     136:	59 f4       	brne	.+22     	; 0x14e <_fpadd_parts+0x3c>
     138:	94 30       	cpi	r25, 0x04	; 4
     13a:	09 f0       	breq	.+2      	; 0x13e <_fpadd_parts+0x2c>
     13c:	2e c1       	rjmp	.+604    	; 0x39a <_fpadd_parts+0x288>
     13e:	91 81       	ldd	r25, Z+1	; 0x01
     140:	11 96       	adiw	r26, 0x01	; 1
     142:	8c 91       	ld	r24, X
     144:	11 97       	sbiw	r26, 0x01	; 1
     146:	98 17       	cp	r25, r24
     148:	09 f0       	breq	.+2      	; 0x14c <_fpadd_parts+0x3a>
     14a:	21 c1       	rjmp	.+578    	; 0x38e <_fpadd_parts+0x27c>
     14c:	26 c1       	rjmp	.+588    	; 0x39a <_fpadd_parts+0x288>
     14e:	94 30       	cpi	r25, 0x04	; 4
     150:	09 f4       	brne	.+2      	; 0x154 <_fpadd_parts+0x42>
     152:	20 c1       	rjmp	.+576    	; 0x394 <_fpadd_parts+0x282>
     154:	92 30       	cpi	r25, 0x02	; 2
     156:	b1 f4       	brne	.+44     	; 0x184 <_fpadd_parts+0x72>
     158:	82 30       	cpi	r24, 0x02	; 2
     15a:	09 f0       	breq	.+2      	; 0x15e <_fpadd_parts+0x4c>
     15c:	1e c1       	rjmp	.+572    	; 0x39a <_fpadd_parts+0x288>
     15e:	ca 01       	movw	r24, r20
     160:	af 01       	movw	r20, r30
     162:	28 e0       	ldi	r18, 0x08	; 8
     164:	da 01       	movw	r26, r20
     166:	0d 90       	ld	r0, X+
     168:	ad 01       	movw	r20, r26
     16a:	dc 01       	movw	r26, r24
     16c:	0d 92       	st	X+, r0
     16e:	cd 01       	movw	r24, r26
     170:	21 50       	subi	r18, 0x01	; 1
     172:	c1 f7       	brne	.-16     	; 0x164 <_fpadd_parts+0x52>
     174:	db 01       	movw	r26, r22
     176:	11 96       	adiw	r26, 0x01	; 1
     178:	8c 91       	ld	r24, X
     17a:	11 97       	sbiw	r26, 0x01	; 1
     17c:	91 81       	ldd	r25, Z+1	; 0x01
     17e:	89 23       	and	r24, r25
     180:	89 83       	std	Y+1, r24	; 0x01
     182:	0a c1       	rjmp	.+532    	; 0x398 <_fpadd_parts+0x286>
     184:	82 30       	cpi	r24, 0x02	; 2
     186:	09 f4       	brne	.+2      	; 0x18a <_fpadd_parts+0x78>
     188:	05 c1       	rjmp	.+522    	; 0x394 <_fpadd_parts+0x282>
     18a:	c2 80       	ldd	r12, Z+2	; 0x02
     18c:	d3 80       	ldd	r13, Z+3	; 0x03
     18e:	db 01       	movw	r26, r22
     190:	12 96       	adiw	r26, 0x02	; 2
     192:	6d 90       	ld	r6, X+
     194:	7c 90       	ld	r7, X
     196:	13 97       	sbiw	r26, 0x03	; 3
     198:	24 81       	ldd	r18, Z+4	; 0x04
     19a:	35 81       	ldd	r19, Z+5	; 0x05
     19c:	46 81       	ldd	r20, Z+6	; 0x06
     19e:	57 81       	ldd	r21, Z+7	; 0x07
     1a0:	14 96       	adiw	r26, 0x04	; 4
     1a2:	ed 90       	ld	r14, X+
     1a4:	fd 90       	ld	r15, X+
     1a6:	0d 91       	ld	r16, X+
     1a8:	1c 91       	ld	r17, X
     1aa:	17 97       	sbiw	r26, 0x07	; 7
     1ac:	c6 01       	movw	r24, r12
     1ae:	86 19       	sub	r24, r6
     1b0:	97 09       	sbc	r25, r7
     1b2:	5c 01       	movw	r10, r24
     1b4:	97 ff       	sbrs	r25, 7
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xae>
     1b8:	aa 24       	eor	r10, r10
     1ba:	bb 24       	eor	r11, r11
     1bc:	a8 1a       	sub	r10, r24
     1be:	b9 0a       	sbc	r11, r25
     1c0:	b0 e2       	ldi	r27, 0x20	; 32
     1c2:	ab 16       	cp	r10, r27
     1c4:	b1 04       	cpc	r11, r1
     1c6:	0c f0       	brlt	.+2      	; 0x1ca <_fpadd_parts+0xb8>
     1c8:	61 c0       	rjmp	.+194    	; 0x28c <_fpadd_parts+0x17a>
     1ca:	18 16       	cp	r1, r24
     1cc:	19 06       	cpc	r1, r25
     1ce:	6c f5       	brge	.+90     	; 0x22a <_fpadd_parts+0x118>
     1d0:	37 01       	movw	r6, r14
     1d2:	48 01       	movw	r8, r16
     1d4:	0a 2c       	mov	r0, r10
     1d6:	04 c0       	rjmp	.+8      	; 0x1e0 <_fpadd_parts+0xce>
     1d8:	96 94       	lsr	r9
     1da:	87 94       	ror	r8
     1dc:	77 94       	ror	r7
     1de:	67 94       	ror	r6
     1e0:	0a 94       	dec	r0
     1e2:	d2 f7       	brpl	.-12     	; 0x1d8 <_fpadd_parts+0xc6>
     1e4:	81 e0       	ldi	r24, 0x01	; 1
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	a0 e0       	ldi	r26, 0x00	; 0
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	0a 2c       	mov	r0, r10
     1ee:	04 c0       	rjmp	.+8      	; 0x1f8 <_fpadd_parts+0xe6>
     1f0:	88 0f       	add	r24, r24
     1f2:	99 1f       	adc	r25, r25
     1f4:	aa 1f       	adc	r26, r26
     1f6:	bb 1f       	adc	r27, r27
     1f8:	0a 94       	dec	r0
     1fa:	d2 f7       	brpl	.-12     	; 0x1f0 <_fpadd_parts+0xde>
     1fc:	01 97       	sbiw	r24, 0x01	; 1
     1fe:	a1 09       	sbc	r26, r1
     200:	b1 09       	sbc	r27, r1
     202:	8e 21       	and	r24, r14
     204:	9f 21       	and	r25, r15
     206:	a0 23       	and	r26, r16
     208:	b1 23       	and	r27, r17
     20a:	ee 24       	eor	r14, r14
     20c:	ff 24       	eor	r15, r15
     20e:	87 01       	movw	r16, r14
     210:	e3 94       	inc	r14
     212:	00 97       	sbiw	r24, 0x00	; 0
     214:	a1 05       	cpc	r26, r1
     216:	b1 05       	cpc	r27, r1
     218:	19 f4       	brne	.+6      	; 0x220 <_fpadd_parts+0x10e>
     21a:	ee 24       	eor	r14, r14
     21c:	ff 24       	eor	r15, r15
     21e:	87 01       	movw	r16, r14
     220:	e6 28       	or	r14, r6
     222:	f7 28       	or	r15, r7
     224:	08 29       	or	r16, r8
     226:	19 29       	or	r17, r9
     228:	3c c0       	rjmp	.+120    	; 0x2a2 <_fpadd_parts+0x190>
     22a:	00 97       	sbiw	r24, 0x00	; 0
     22c:	d1 f1       	breq	.+116    	; 0x2a2 <_fpadd_parts+0x190>
     22e:	ca 0c       	add	r12, r10
     230:	db 1c       	adc	r13, r11
     232:	39 01       	movw	r6, r18
     234:	4a 01       	movw	r8, r20
     236:	0a 2c       	mov	r0, r10
     238:	04 c0       	rjmp	.+8      	; 0x242 <_fpadd_parts+0x130>
     23a:	96 94       	lsr	r9
     23c:	87 94       	ror	r8
     23e:	77 94       	ror	r7
     240:	67 94       	ror	r6
     242:	0a 94       	dec	r0
     244:	d2 f7       	brpl	.-12     	; 0x23a <_fpadd_parts+0x128>
     246:	81 e0       	ldi	r24, 0x01	; 1
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	a0 e0       	ldi	r26, 0x00	; 0
     24c:	b0 e0       	ldi	r27, 0x00	; 0
     24e:	0a 2c       	mov	r0, r10
     250:	04 c0       	rjmp	.+8      	; 0x25a <_fpadd_parts+0x148>
     252:	88 0f       	add	r24, r24
     254:	99 1f       	adc	r25, r25
     256:	aa 1f       	adc	r26, r26
     258:	bb 1f       	adc	r27, r27
     25a:	0a 94       	dec	r0
     25c:	d2 f7       	brpl	.-12     	; 0x252 <_fpadd_parts+0x140>
     25e:	01 97       	sbiw	r24, 0x01	; 1
     260:	a1 09       	sbc	r26, r1
     262:	b1 09       	sbc	r27, r1
     264:	82 23       	and	r24, r18
     266:	93 23       	and	r25, r19
     268:	a4 23       	and	r26, r20
     26a:	b5 23       	and	r27, r21
     26c:	21 e0       	ldi	r18, 0x01	; 1
     26e:	30 e0       	ldi	r19, 0x00	; 0
     270:	40 e0       	ldi	r20, 0x00	; 0
     272:	50 e0       	ldi	r21, 0x00	; 0
     274:	00 97       	sbiw	r24, 0x00	; 0
     276:	a1 05       	cpc	r26, r1
     278:	b1 05       	cpc	r27, r1
     27a:	19 f4       	brne	.+6      	; 0x282 <_fpadd_parts+0x170>
     27c:	20 e0       	ldi	r18, 0x00	; 0
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	a9 01       	movw	r20, r18
     282:	26 29       	or	r18, r6
     284:	37 29       	or	r19, r7
     286:	48 29       	or	r20, r8
     288:	59 29       	or	r21, r9
     28a:	0b c0       	rjmp	.+22     	; 0x2a2 <_fpadd_parts+0x190>
     28c:	6c 14       	cp	r6, r12
     28e:	7d 04       	cpc	r7, r13
     290:	24 f4       	brge	.+8      	; 0x29a <_fpadd_parts+0x188>
     292:	ee 24       	eor	r14, r14
     294:	ff 24       	eor	r15, r15
     296:	87 01       	movw	r16, r14
     298:	04 c0       	rjmp	.+8      	; 0x2a2 <_fpadd_parts+0x190>
     29a:	63 01       	movw	r12, r6
     29c:	20 e0       	ldi	r18, 0x00	; 0
     29e:	30 e0       	ldi	r19, 0x00	; 0
     2a0:	a9 01       	movw	r20, r18
     2a2:	81 81       	ldd	r24, Z+1	; 0x01
     2a4:	fb 01       	movw	r30, r22
     2a6:	91 81       	ldd	r25, Z+1	; 0x01
     2a8:	89 17       	cp	r24, r25
     2aa:	09 f4       	brne	.+2      	; 0x2ae <_fpadd_parts+0x19c>
     2ac:	45 c0       	rjmp	.+138    	; 0x338 <_fpadd_parts+0x226>
     2ae:	88 23       	and	r24, r24
     2b0:	49 f0       	breq	.+18     	; 0x2c4 <_fpadd_parts+0x1b2>
     2b2:	d8 01       	movw	r26, r16
     2b4:	c7 01       	movw	r24, r14
     2b6:	82 1b       	sub	r24, r18
     2b8:	93 0b       	sbc	r25, r19
     2ba:	a4 0b       	sbc	r26, r20
     2bc:	b5 0b       	sbc	r27, r21
     2be:	9c 01       	movw	r18, r24
     2c0:	ad 01       	movw	r20, r26
     2c2:	04 c0       	rjmp	.+8      	; 0x2cc <_fpadd_parts+0x1ba>
     2c4:	2e 19       	sub	r18, r14
     2c6:	3f 09       	sbc	r19, r15
     2c8:	40 0b       	sbc	r20, r16
     2ca:	51 0b       	sbc	r21, r17
     2cc:	57 fd       	sbrc	r21, 7
     2ce:	04 c0       	rjmp	.+8      	; 0x2d8 <_fpadd_parts+0x1c6>
     2d0:	19 82       	std	Y+1, r1	; 0x01
     2d2:	db 82       	std	Y+3, r13	; 0x03
     2d4:	ca 82       	std	Y+2, r12	; 0x02
     2d6:	0b c0       	rjmp	.+22     	; 0x2ee <_fpadd_parts+0x1dc>
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	89 83       	std	Y+1, r24	; 0x01
     2dc:	db 82       	std	Y+3, r13	; 0x03
     2de:	ca 82       	std	Y+2, r12	; 0x02
     2e0:	50 95       	com	r21
     2e2:	40 95       	com	r20
     2e4:	30 95       	com	r19
     2e6:	21 95       	neg	r18
     2e8:	3f 4f       	sbci	r19, 0xFF	; 255
     2ea:	4f 4f       	sbci	r20, 0xFF	; 255
     2ec:	5f 4f       	sbci	r21, 0xFF	; 255
     2ee:	2c 83       	std	Y+4, r18	; 0x04
     2f0:	3d 83       	std	Y+5, r19	; 0x05
     2f2:	4e 83       	std	Y+6, r20	; 0x06
     2f4:	5f 83       	std	Y+7, r21	; 0x07
     2f6:	0d c0       	rjmp	.+26     	; 0x312 <_fpadd_parts+0x200>
     2f8:	88 0f       	add	r24, r24
     2fa:	99 1f       	adc	r25, r25
     2fc:	aa 1f       	adc	r26, r26
     2fe:	bb 1f       	adc	r27, r27
     300:	8c 83       	std	Y+4, r24	; 0x04
     302:	9d 83       	std	Y+5, r25	; 0x05
     304:	ae 83       	std	Y+6, r26	; 0x06
     306:	bf 83       	std	Y+7, r27	; 0x07
     308:	8a 81       	ldd	r24, Y+2	; 0x02
     30a:	9b 81       	ldd	r25, Y+3	; 0x03
     30c:	01 97       	sbiw	r24, 0x01	; 1
     30e:	9b 83       	std	Y+3, r25	; 0x03
     310:	8a 83       	std	Y+2, r24	; 0x02
     312:	8c 81       	ldd	r24, Y+4	; 0x04
     314:	9d 81       	ldd	r25, Y+5	; 0x05
     316:	ae 81       	ldd	r26, Y+6	; 0x06
     318:	bf 81       	ldd	r27, Y+7	; 0x07
     31a:	9c 01       	movw	r18, r24
     31c:	ad 01       	movw	r20, r26
     31e:	21 50       	subi	r18, 0x01	; 1
     320:	30 40       	sbci	r19, 0x00	; 0
     322:	40 40       	sbci	r20, 0x00	; 0
     324:	50 40       	sbci	r21, 0x00	; 0
     326:	2f 3f       	cpi	r18, 0xFF	; 255
     328:	ef ef       	ldi	r30, 0xFF	; 255
     32a:	3e 07       	cpc	r19, r30
     32c:	ef ef       	ldi	r30, 0xFF	; 255
     32e:	4e 07       	cpc	r20, r30
     330:	ef e3       	ldi	r30, 0x3F	; 63
     332:	5e 07       	cpc	r21, r30
     334:	08 f3       	brcs	.-62     	; 0x2f8 <_fpadd_parts+0x1e6>
     336:	0b c0       	rjmp	.+22     	; 0x34e <_fpadd_parts+0x23c>
     338:	89 83       	std	Y+1, r24	; 0x01
     33a:	db 82       	std	Y+3, r13	; 0x03
     33c:	ca 82       	std	Y+2, r12	; 0x02
     33e:	2e 0d       	add	r18, r14
     340:	3f 1d       	adc	r19, r15
     342:	40 1f       	adc	r20, r16
     344:	51 1f       	adc	r21, r17
     346:	2c 83       	std	Y+4, r18	; 0x04
     348:	3d 83       	std	Y+5, r19	; 0x05
     34a:	4e 83       	std	Y+6, r20	; 0x06
     34c:	5f 83       	std	Y+7, r21	; 0x07
     34e:	83 e0       	ldi	r24, 0x03	; 3
     350:	88 83       	st	Y, r24
     352:	2c 81       	ldd	r18, Y+4	; 0x04
     354:	3d 81       	ldd	r19, Y+5	; 0x05
     356:	4e 81       	ldd	r20, Y+6	; 0x06
     358:	5f 81       	ldd	r21, Y+7	; 0x07
     35a:	57 ff       	sbrs	r21, 7
     35c:	1d c0       	rjmp	.+58     	; 0x398 <_fpadd_parts+0x286>
     35e:	da 01       	movw	r26, r20
     360:	c9 01       	movw	r24, r18
     362:	81 70       	andi	r24, 0x01	; 1
     364:	90 70       	andi	r25, 0x00	; 0
     366:	a0 70       	andi	r26, 0x00	; 0
     368:	b0 70       	andi	r27, 0x00	; 0
     36a:	56 95       	lsr	r21
     36c:	47 95       	ror	r20
     36e:	37 95       	ror	r19
     370:	27 95       	ror	r18
     372:	82 2b       	or	r24, r18
     374:	93 2b       	or	r25, r19
     376:	a4 2b       	or	r26, r20
     378:	b5 2b       	or	r27, r21
     37a:	8c 83       	std	Y+4, r24	; 0x04
     37c:	9d 83       	std	Y+5, r25	; 0x05
     37e:	ae 83       	std	Y+6, r26	; 0x06
     380:	bf 83       	std	Y+7, r27	; 0x07
     382:	8a 81       	ldd	r24, Y+2	; 0x02
     384:	9b 81       	ldd	r25, Y+3	; 0x03
     386:	01 96       	adiw	r24, 0x01	; 1
     388:	9b 83       	std	Y+3, r25	; 0x03
     38a:	8a 83       	std	Y+2, r24	; 0x02
     38c:	05 c0       	rjmp	.+10     	; 0x398 <_fpadd_parts+0x286>
     38e:	e0 e0       	ldi	r30, 0x00	; 0
     390:	f1 e0       	ldi	r31, 0x01	; 1
     392:	03 c0       	rjmp	.+6      	; 0x39a <_fpadd_parts+0x288>
     394:	fb 01       	movw	r30, r22
     396:	01 c0       	rjmp	.+2      	; 0x39a <_fpadd_parts+0x288>
     398:	fe 01       	movw	r30, r28
     39a:	cf 01       	movw	r24, r30
     39c:	cd b7       	in	r28, 0x3d	; 61
     39e:	de b7       	in	r29, 0x3e	; 62
     3a0:	ee e0       	ldi	r30, 0x0E	; 14
     3a2:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__epilogue_restores__+0x8>

000003a6 <__addsf3>:
     3a6:	a0 e2       	ldi	r26, 0x20	; 32
     3a8:	b0 e0       	ldi	r27, 0x00	; 0
     3aa:	e9 ed       	ldi	r30, 0xD9	; 217
     3ac:	f1 e0       	ldi	r31, 0x01	; 1
     3ae:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <__prologue_saves__+0x18>
     3b2:	69 83       	std	Y+1, r22	; 0x01
     3b4:	7a 83       	std	Y+2, r23	; 0x02
     3b6:	8b 83       	std	Y+3, r24	; 0x03
     3b8:	9c 83       	std	Y+4, r25	; 0x04
     3ba:	2d 83       	std	Y+5, r18	; 0x05
     3bc:	3e 83       	std	Y+6, r19	; 0x06
     3be:	4f 83       	std	Y+7, r20	; 0x07
     3c0:	58 87       	std	Y+8, r21	; 0x08
     3c2:	89 e0       	ldi	r24, 0x09	; 9
     3c4:	e8 2e       	mov	r14, r24
     3c6:	f1 2c       	mov	r15, r1
     3c8:	ec 0e       	add	r14, r28
     3ca:	fd 1e       	adc	r15, r29
     3cc:	ce 01       	movw	r24, r28
     3ce:	01 96       	adiw	r24, 0x01	; 1
     3d0:	b7 01       	movw	r22, r14
     3d2:	a1 d3       	rcall	.+1858   	; 0xb16 <__unpack_f>
     3d4:	8e 01       	movw	r16, r28
     3d6:	0f 5e       	subi	r16, 0xEF	; 239
     3d8:	1f 4f       	sbci	r17, 0xFF	; 255
     3da:	ce 01       	movw	r24, r28
     3dc:	05 96       	adiw	r24, 0x05	; 5
     3de:	b8 01       	movw	r22, r16
     3e0:	9a d3       	rcall	.+1844   	; 0xb16 <__unpack_f>
     3e2:	c7 01       	movw	r24, r14
     3e4:	b8 01       	movw	r22, r16
     3e6:	ae 01       	movw	r20, r28
     3e8:	47 5e       	subi	r20, 0xE7	; 231
     3ea:	5f 4f       	sbci	r21, 0xFF	; 255
     3ec:	92 de       	rcall	.-732    	; 0x112 <_fpadd_parts>
     3ee:	c6 d2       	rcall	.+1420   	; 0x97c <__pack_f>
     3f0:	a0 96       	adiw	r28, 0x20	; 32
     3f2:	e6 e0       	ldi	r30, 0x06	; 6
     3f4:	0c 94 34 0b 	jmp	0x1668	; 0x1668 <__epilogue_restores__+0x18>

000003f8 <__subsf3>:
     3f8:	a0 e2       	ldi	r26, 0x20	; 32
     3fa:	b0 e0       	ldi	r27, 0x00	; 0
     3fc:	e2 e0       	ldi	r30, 0x02	; 2
     3fe:	f2 e0       	ldi	r31, 0x02	; 2
     400:	0c 94 18 0b 	jmp	0x1630	; 0x1630 <__prologue_saves__+0x18>
     404:	69 83       	std	Y+1, r22	; 0x01
     406:	7a 83       	std	Y+2, r23	; 0x02
     408:	8b 83       	std	Y+3, r24	; 0x03
     40a:	9c 83       	std	Y+4, r25	; 0x04
     40c:	2d 83       	std	Y+5, r18	; 0x05
     40e:	3e 83       	std	Y+6, r19	; 0x06
     410:	4f 83       	std	Y+7, r20	; 0x07
     412:	58 87       	std	Y+8, r21	; 0x08
     414:	8e 01       	movw	r16, r28
     416:	07 5f       	subi	r16, 0xF7	; 247
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	01 96       	adiw	r24, 0x01	; 1
     41e:	b8 01       	movw	r22, r16
     420:	7a d3       	rcall	.+1780   	; 0xb16 <__unpack_f>
     422:	91 e1       	ldi	r25, 0x11	; 17
     424:	e9 2e       	mov	r14, r25
     426:	f1 2c       	mov	r15, r1
     428:	ec 0e       	add	r14, r28
     42a:	fd 1e       	adc	r15, r29
     42c:	ce 01       	movw	r24, r28
     42e:	05 96       	adiw	r24, 0x05	; 5
     430:	b7 01       	movw	r22, r14
     432:	71 d3       	rcall	.+1762   	; 0xb16 <__unpack_f>
     434:	8a 89       	ldd	r24, Y+18	; 0x12
     436:	91 e0       	ldi	r25, 0x01	; 1
     438:	89 27       	eor	r24, r25
     43a:	8a 8b       	std	Y+18, r24	; 0x12
     43c:	c8 01       	movw	r24, r16
     43e:	b7 01       	movw	r22, r14
     440:	ae 01       	movw	r20, r28
     442:	47 5e       	subi	r20, 0xE7	; 231
     444:	5f 4f       	sbci	r21, 0xFF	; 255
     446:	65 de       	rcall	.-822    	; 0x112 <_fpadd_parts>
     448:	99 d2       	rcall	.+1330   	; 0x97c <__pack_f>
     44a:	a0 96       	adiw	r28, 0x20	; 32
     44c:	e6 e0       	ldi	r30, 0x06	; 6
     44e:	0c 94 34 0b 	jmp	0x1668	; 0x1668 <__epilogue_restores__+0x18>

00000452 <__mulsf3>:
     452:	a0 e2       	ldi	r26, 0x20	; 32
     454:	b0 e0       	ldi	r27, 0x00	; 0
     456:	ef e2       	ldi	r30, 0x2F	; 47
     458:	f2 e0       	ldi	r31, 0x02	; 2
     45a:	0c 94 0c 0b 	jmp	0x1618	; 0x1618 <__prologue_saves__>
     45e:	69 83       	std	Y+1, r22	; 0x01
     460:	7a 83       	std	Y+2, r23	; 0x02
     462:	8b 83       	std	Y+3, r24	; 0x03
     464:	9c 83       	std	Y+4, r25	; 0x04
     466:	2d 83       	std	Y+5, r18	; 0x05
     468:	3e 83       	std	Y+6, r19	; 0x06
     46a:	4f 83       	std	Y+7, r20	; 0x07
     46c:	58 87       	std	Y+8, r21	; 0x08
     46e:	ce 01       	movw	r24, r28
     470:	01 96       	adiw	r24, 0x01	; 1
     472:	be 01       	movw	r22, r28
     474:	67 5f       	subi	r22, 0xF7	; 247
     476:	7f 4f       	sbci	r23, 0xFF	; 255
     478:	4e d3       	rcall	.+1692   	; 0xb16 <__unpack_f>
     47a:	ce 01       	movw	r24, r28
     47c:	05 96       	adiw	r24, 0x05	; 5
     47e:	be 01       	movw	r22, r28
     480:	6f 5e       	subi	r22, 0xEF	; 239
     482:	7f 4f       	sbci	r23, 0xFF	; 255
     484:	48 d3       	rcall	.+1680   	; 0xb16 <__unpack_f>
     486:	99 85       	ldd	r25, Y+9	; 0x09
     488:	92 30       	cpi	r25, 0x02	; 2
     48a:	78 f0       	brcs	.+30     	; 0x4aa <__mulsf3+0x58>
     48c:	89 89       	ldd	r24, Y+17	; 0x11
     48e:	82 30       	cpi	r24, 0x02	; 2
     490:	c0 f0       	brcs	.+48     	; 0x4c2 <__mulsf3+0x70>
     492:	94 30       	cpi	r25, 0x04	; 4
     494:	19 f4       	brne	.+6      	; 0x49c <__mulsf3+0x4a>
     496:	82 30       	cpi	r24, 0x02	; 2
     498:	41 f4       	brne	.+16     	; 0x4aa <__mulsf3+0x58>
     49a:	cb c0       	rjmp	.+406    	; 0x632 <__mulsf3+0x1e0>
     49c:	84 30       	cpi	r24, 0x04	; 4
     49e:	19 f4       	brne	.+6      	; 0x4a6 <__mulsf3+0x54>
     4a0:	92 30       	cpi	r25, 0x02	; 2
     4a2:	79 f4       	brne	.+30     	; 0x4c2 <__mulsf3+0x70>
     4a4:	c6 c0       	rjmp	.+396    	; 0x632 <__mulsf3+0x1e0>
     4a6:	92 30       	cpi	r25, 0x02	; 2
     4a8:	51 f4       	brne	.+20     	; 0x4be <__mulsf3+0x6c>
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	2a 85       	ldd	r18, Y+10	; 0x0a
     4ae:	9a 89       	ldd	r25, Y+18	; 0x12
     4b0:	29 17       	cp	r18, r25
     4b2:	09 f4       	brne	.+2      	; 0x4b6 <__mulsf3+0x64>
     4b4:	80 e0       	ldi	r24, 0x00	; 0
     4b6:	8a 87       	std	Y+10, r24	; 0x0a
     4b8:	ce 01       	movw	r24, r28
     4ba:	09 96       	adiw	r24, 0x09	; 9
     4bc:	bc c0       	rjmp	.+376    	; 0x636 <__mulsf3+0x1e4>
     4be:	82 30       	cpi	r24, 0x02	; 2
     4c0:	51 f4       	brne	.+20     	; 0x4d6 <__mulsf3+0x84>
     4c2:	81 e0       	ldi	r24, 0x01	; 1
     4c4:	2a 85       	ldd	r18, Y+10	; 0x0a
     4c6:	9a 89       	ldd	r25, Y+18	; 0x12
     4c8:	29 17       	cp	r18, r25
     4ca:	09 f4       	brne	.+2      	; 0x4ce <__mulsf3+0x7c>
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	8a 8b       	std	Y+18, r24	; 0x12
     4d0:	ce 01       	movw	r24, r28
     4d2:	41 96       	adiw	r24, 0x11	; 17
     4d4:	b0 c0       	rjmp	.+352    	; 0x636 <__mulsf3+0x1e4>
     4d6:	6d 84       	ldd	r6, Y+13	; 0x0d
     4d8:	7e 84       	ldd	r7, Y+14	; 0x0e
     4da:	8f 84       	ldd	r8, Y+15	; 0x0f
     4dc:	98 88       	ldd	r9, Y+16	; 0x10
     4de:	ed 88       	ldd	r14, Y+21	; 0x15
     4e0:	fe 88       	ldd	r15, Y+22	; 0x16
     4e2:	0f 89       	ldd	r16, Y+23	; 0x17
     4e4:	18 8d       	ldd	r17, Y+24	; 0x18
     4e6:	e0 e2       	ldi	r30, 0x20	; 32
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	80 e0       	ldi	r24, 0x00	; 0
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	dc 01       	movw	r26, r24
     4f0:	aa 24       	eor	r10, r10
     4f2:	bb 24       	eor	r11, r11
     4f4:	65 01       	movw	r12, r10
     4f6:	20 e0       	ldi	r18, 0x00	; 0
     4f8:	30 e0       	ldi	r19, 0x00	; 0
     4fa:	a9 01       	movw	r20, r18
     4fc:	b3 01       	movw	r22, r6
     4fe:	61 70       	andi	r22, 0x01	; 1
     500:	70 70       	andi	r23, 0x00	; 0
     502:	61 15       	cp	r22, r1
     504:	71 05       	cpc	r23, r1
     506:	d1 f0       	breq	.+52     	; 0x53c <__mulsf3+0xea>
     508:	2e 0d       	add	r18, r14
     50a:	3f 1d       	adc	r19, r15
     50c:	40 1f       	adc	r20, r16
     50e:	51 1f       	adc	r21, r17
     510:	15 01       	movw	r2, r10
     512:	26 01       	movw	r4, r12
     514:	28 0e       	add	r2, r24
     516:	39 1e       	adc	r3, r25
     518:	4a 1e       	adc	r4, r26
     51a:	5b 1e       	adc	r5, r27
     51c:	81 e0       	ldi	r24, 0x01	; 1
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	a0 e0       	ldi	r26, 0x00	; 0
     522:	b0 e0       	ldi	r27, 0x00	; 0
     524:	2e 15       	cp	r18, r14
     526:	3f 05       	cpc	r19, r15
     528:	40 07       	cpc	r20, r16
     52a:	51 07       	cpc	r21, r17
     52c:	18 f0       	brcs	.+6      	; 0x534 <__mulsf3+0xe2>
     52e:	80 e0       	ldi	r24, 0x00	; 0
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	dc 01       	movw	r26, r24
     534:	82 0d       	add	r24, r2
     536:	93 1d       	adc	r25, r3
     538:	a4 1d       	adc	r26, r4
     53a:	b5 1d       	adc	r27, r5
     53c:	aa 0c       	add	r10, r10
     53e:	bb 1c       	adc	r11, r11
     540:	cc 1c       	adc	r12, r12
     542:	dd 1c       	adc	r13, r13
     544:	17 ff       	sbrs	r17, 7
     546:	09 c0       	rjmp	.+18     	; 0x55a <__mulsf3+0x108>
     548:	61 e0       	ldi	r22, 0x01	; 1
     54a:	26 2e       	mov	r2, r22
     54c:	31 2c       	mov	r3, r1
     54e:	41 2c       	mov	r4, r1
     550:	51 2c       	mov	r5, r1
     552:	a2 28       	or	r10, r2
     554:	b3 28       	or	r11, r3
     556:	c4 28       	or	r12, r4
     558:	d5 28       	or	r13, r5
     55a:	31 97       	sbiw	r30, 0x01	; 1
     55c:	49 f0       	breq	.+18     	; 0x570 <__mulsf3+0x11e>
     55e:	ee 0c       	add	r14, r14
     560:	ff 1c       	adc	r15, r15
     562:	00 1f       	adc	r16, r16
     564:	11 1f       	adc	r17, r17
     566:	96 94       	lsr	r9
     568:	87 94       	ror	r8
     56a:	77 94       	ror	r7
     56c:	67 94       	ror	r6
     56e:	c6 cf       	rjmp	.-116    	; 0x4fc <__mulsf3+0xaa>
     570:	6b 89       	ldd	r22, Y+19	; 0x13
     572:	7c 89       	ldd	r23, Y+20	; 0x14
     574:	eb 85       	ldd	r30, Y+11	; 0x0b
     576:	fc 85       	ldd	r31, Y+12	; 0x0c
     578:	6e 0f       	add	r22, r30
     57a:	7f 1f       	adc	r23, r31
     57c:	6e 5f       	subi	r22, 0xFE	; 254
     57e:	7f 4f       	sbci	r23, 0xFF	; 255
     580:	7c 8f       	std	Y+28, r23	; 0x1c
     582:	6b 8f       	std	Y+27, r22	; 0x1b
     584:	61 e0       	ldi	r22, 0x01	; 1
     586:	ea 85       	ldd	r30, Y+10	; 0x0a
     588:	7a 89       	ldd	r23, Y+18	; 0x12
     58a:	e7 17       	cp	r30, r23
     58c:	09 f4       	brne	.+2      	; 0x590 <__mulsf3+0x13e>
     58e:	60 e0       	ldi	r22, 0x00	; 0
     590:	6a 8f       	std	Y+26, r22	; 0x1a
     592:	6b 8d       	ldd	r22, Y+27	; 0x1b
     594:	7c 8d       	ldd	r23, Y+28	; 0x1c
     596:	10 c0       	rjmp	.+32     	; 0x5b8 <__mulsf3+0x166>
     598:	fc 01       	movw	r30, r24
     59a:	e1 70       	andi	r30, 0x01	; 1
     59c:	f0 70       	andi	r31, 0x00	; 0
     59e:	30 97       	sbiw	r30, 0x00	; 0
     5a0:	29 f0       	breq	.+10     	; 0x5ac <__mulsf3+0x15a>
     5a2:	56 95       	lsr	r21
     5a4:	47 95       	ror	r20
     5a6:	37 95       	ror	r19
     5a8:	27 95       	ror	r18
     5aa:	50 68       	ori	r21, 0x80	; 128
     5ac:	b6 95       	lsr	r27
     5ae:	a7 95       	ror	r26
     5b0:	97 95       	ror	r25
     5b2:	87 95       	ror	r24
     5b4:	6f 5f       	subi	r22, 0xFF	; 255
     5b6:	7f 4f       	sbci	r23, 0xFF	; 255
     5b8:	b7 fd       	sbrc	r27, 7
     5ba:	ee cf       	rjmp	.-36     	; 0x598 <__mulsf3+0x146>
     5bc:	0c c0       	rjmp	.+24     	; 0x5d6 <__mulsf3+0x184>
     5be:	88 0f       	add	r24, r24
     5c0:	99 1f       	adc	r25, r25
     5c2:	aa 1f       	adc	r26, r26
     5c4:	bb 1f       	adc	r27, r27
     5c6:	57 fd       	sbrc	r21, 7
     5c8:	81 60       	ori	r24, 0x01	; 1
     5ca:	22 0f       	add	r18, r18
     5cc:	33 1f       	adc	r19, r19
     5ce:	44 1f       	adc	r20, r20
     5d0:	55 1f       	adc	r21, r21
     5d2:	61 50       	subi	r22, 0x01	; 1
     5d4:	70 40       	sbci	r23, 0x00	; 0
     5d6:	80 30       	cpi	r24, 0x00	; 0
     5d8:	e0 e0       	ldi	r30, 0x00	; 0
     5da:	9e 07       	cpc	r25, r30
     5dc:	e0 e0       	ldi	r30, 0x00	; 0
     5de:	ae 07       	cpc	r26, r30
     5e0:	e0 e4       	ldi	r30, 0x40	; 64
     5e2:	be 07       	cpc	r27, r30
     5e4:	60 f3       	brcs	.-40     	; 0x5be <__mulsf3+0x16c>
     5e6:	6b 8f       	std	Y+27, r22	; 0x1b
     5e8:	7c 8f       	std	Y+28, r23	; 0x1c
     5ea:	6f e7       	ldi	r22, 0x7F	; 127
     5ec:	e6 2e       	mov	r14, r22
     5ee:	f1 2c       	mov	r15, r1
     5f0:	01 2d       	mov	r16, r1
     5f2:	11 2d       	mov	r17, r1
     5f4:	e8 22       	and	r14, r24
     5f6:	f9 22       	and	r15, r25
     5f8:	0a 23       	and	r16, r26
     5fa:	1b 23       	and	r17, r27
     5fc:	60 e4       	ldi	r22, 0x40	; 64
     5fe:	e6 16       	cp	r14, r22
     600:	f1 04       	cpc	r15, r1
     602:	01 05       	cpc	r16, r1
     604:	11 05       	cpc	r17, r1
     606:	61 f4       	brne	.+24     	; 0x620 <__mulsf3+0x1ce>
     608:	87 fd       	sbrc	r24, 7
     60a:	0a c0       	rjmp	.+20     	; 0x620 <__mulsf3+0x1ce>
     60c:	21 15       	cp	r18, r1
     60e:	31 05       	cpc	r19, r1
     610:	41 05       	cpc	r20, r1
     612:	51 05       	cpc	r21, r1
     614:	29 f0       	breq	.+10     	; 0x620 <__mulsf3+0x1ce>
     616:	80 5c       	subi	r24, 0xC0	; 192
     618:	9f 4f       	sbci	r25, 0xFF	; 255
     61a:	af 4f       	sbci	r26, 0xFF	; 255
     61c:	bf 4f       	sbci	r27, 0xFF	; 255
     61e:	80 78       	andi	r24, 0x80	; 128
     620:	8d 8f       	std	Y+29, r24	; 0x1d
     622:	9e 8f       	std	Y+30, r25	; 0x1e
     624:	af 8f       	std	Y+31, r26	; 0x1f
     626:	b8 a3       	std	Y+32, r27	; 0x20
     628:	83 e0       	ldi	r24, 0x03	; 3
     62a:	89 8f       	std	Y+25, r24	; 0x19
     62c:	ce 01       	movw	r24, r28
     62e:	49 96       	adiw	r24, 0x19	; 25
     630:	02 c0       	rjmp	.+4      	; 0x636 <__mulsf3+0x1e4>
     632:	80 e0       	ldi	r24, 0x00	; 0
     634:	91 e0       	ldi	r25, 0x01	; 1
     636:	a2 d1       	rcall	.+836    	; 0x97c <__pack_f>
     638:	a0 96       	adiw	r28, 0x20	; 32
     63a:	e2 e1       	ldi	r30, 0x12	; 18
     63c:	0c 94 28 0b 	jmp	0x1650	; 0x1650 <__epilogue_restores__>

00000640 <__gtsf2>:
     640:	a8 e1       	ldi	r26, 0x18	; 24
     642:	b0 e0       	ldi	r27, 0x00	; 0
     644:	e5 e2       	ldi	r30, 0x25	; 37
     646:	f3 e0       	ldi	r31, 0x03	; 3
     648:	f3 c7       	rjmp	.+4070   	; 0x1630 <__prologue_saves__+0x18>
     64a:	69 83       	std	Y+1, r22	; 0x01
     64c:	7a 83       	std	Y+2, r23	; 0x02
     64e:	8b 83       	std	Y+3, r24	; 0x03
     650:	9c 83       	std	Y+4, r25	; 0x04
     652:	2d 83       	std	Y+5, r18	; 0x05
     654:	3e 83       	std	Y+6, r19	; 0x06
     656:	4f 83       	std	Y+7, r20	; 0x07
     658:	58 87       	std	Y+8, r21	; 0x08
     65a:	8e 01       	movw	r16, r28
     65c:	07 5f       	subi	r16, 0xF7	; 247
     65e:	1f 4f       	sbci	r17, 0xFF	; 255
     660:	ce 01       	movw	r24, r28
     662:	01 96       	adiw	r24, 0x01	; 1
     664:	b8 01       	movw	r22, r16
     666:	57 d2       	rcall	.+1198   	; 0xb16 <__unpack_f>
     668:	81 e1       	ldi	r24, 0x11	; 17
     66a:	e8 2e       	mov	r14, r24
     66c:	f1 2c       	mov	r15, r1
     66e:	ec 0e       	add	r14, r28
     670:	fd 1e       	adc	r15, r29
     672:	ce 01       	movw	r24, r28
     674:	05 96       	adiw	r24, 0x05	; 5
     676:	b7 01       	movw	r22, r14
     678:	4e d2       	rcall	.+1180   	; 0xb16 <__unpack_f>
     67a:	89 85       	ldd	r24, Y+9	; 0x09
     67c:	82 30       	cpi	r24, 0x02	; 2
     67e:	38 f0       	brcs	.+14     	; 0x68e <__gtsf2+0x4e>
     680:	89 89       	ldd	r24, Y+17	; 0x11
     682:	82 30       	cpi	r24, 0x02	; 2
     684:	20 f0       	brcs	.+8      	; 0x68e <__gtsf2+0x4e>
     686:	c8 01       	movw	r24, r16
     688:	b7 01       	movw	r22, r14
     68a:	ae d2       	rcall	.+1372   	; 0xbe8 <__fpcmp_parts_f>
     68c:	01 c0       	rjmp	.+2      	; 0x690 <__gtsf2+0x50>
     68e:	8f ef       	ldi	r24, 0xFF	; 255
     690:	68 96       	adiw	r28, 0x18	; 24
     692:	e6 e0       	ldi	r30, 0x06	; 6
     694:	e9 c7       	rjmp	.+4050   	; 0x1668 <__epilogue_restores__+0x18>

00000696 <__gesf2>:
     696:	a8 e1       	ldi	r26, 0x18	; 24
     698:	b0 e0       	ldi	r27, 0x00	; 0
     69a:	e0 e5       	ldi	r30, 0x50	; 80
     69c:	f3 e0       	ldi	r31, 0x03	; 3
     69e:	c8 c7       	rjmp	.+3984   	; 0x1630 <__prologue_saves__+0x18>
     6a0:	69 83       	std	Y+1, r22	; 0x01
     6a2:	7a 83       	std	Y+2, r23	; 0x02
     6a4:	8b 83       	std	Y+3, r24	; 0x03
     6a6:	9c 83       	std	Y+4, r25	; 0x04
     6a8:	2d 83       	std	Y+5, r18	; 0x05
     6aa:	3e 83       	std	Y+6, r19	; 0x06
     6ac:	4f 83       	std	Y+7, r20	; 0x07
     6ae:	58 87       	std	Y+8, r21	; 0x08
     6b0:	8e 01       	movw	r16, r28
     6b2:	07 5f       	subi	r16, 0xF7	; 247
     6b4:	1f 4f       	sbci	r17, 0xFF	; 255
     6b6:	ce 01       	movw	r24, r28
     6b8:	01 96       	adiw	r24, 0x01	; 1
     6ba:	b8 01       	movw	r22, r16
     6bc:	2c d2       	rcall	.+1112   	; 0xb16 <__unpack_f>
     6be:	81 e1       	ldi	r24, 0x11	; 17
     6c0:	e8 2e       	mov	r14, r24
     6c2:	f1 2c       	mov	r15, r1
     6c4:	ec 0e       	add	r14, r28
     6c6:	fd 1e       	adc	r15, r29
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b7 01       	movw	r22, r14
     6ce:	23 d2       	rcall	.+1094   	; 0xb16 <__unpack_f>
     6d0:	89 85       	ldd	r24, Y+9	; 0x09
     6d2:	82 30       	cpi	r24, 0x02	; 2
     6d4:	38 f0       	brcs	.+14     	; 0x6e4 <__gesf2+0x4e>
     6d6:	89 89       	ldd	r24, Y+17	; 0x11
     6d8:	82 30       	cpi	r24, 0x02	; 2
     6da:	20 f0       	brcs	.+8      	; 0x6e4 <__gesf2+0x4e>
     6dc:	c8 01       	movw	r24, r16
     6de:	b7 01       	movw	r22, r14
     6e0:	83 d2       	rcall	.+1286   	; 0xbe8 <__fpcmp_parts_f>
     6e2:	01 c0       	rjmp	.+2      	; 0x6e6 <__gesf2+0x50>
     6e4:	8f ef       	ldi	r24, 0xFF	; 255
     6e6:	68 96       	adiw	r28, 0x18	; 24
     6e8:	e6 e0       	ldi	r30, 0x06	; 6
     6ea:	be c7       	rjmp	.+3964   	; 0x1668 <__epilogue_restores__+0x18>

000006ec <__ltsf2>:
     6ec:	a8 e1       	ldi	r26, 0x18	; 24
     6ee:	b0 e0       	ldi	r27, 0x00	; 0
     6f0:	eb e7       	ldi	r30, 0x7B	; 123
     6f2:	f3 e0       	ldi	r31, 0x03	; 3
     6f4:	9d c7       	rjmp	.+3898   	; 0x1630 <__prologue_saves__+0x18>
     6f6:	69 83       	std	Y+1, r22	; 0x01
     6f8:	7a 83       	std	Y+2, r23	; 0x02
     6fa:	8b 83       	std	Y+3, r24	; 0x03
     6fc:	9c 83       	std	Y+4, r25	; 0x04
     6fe:	2d 83       	std	Y+5, r18	; 0x05
     700:	3e 83       	std	Y+6, r19	; 0x06
     702:	4f 83       	std	Y+7, r20	; 0x07
     704:	58 87       	std	Y+8, r21	; 0x08
     706:	8e 01       	movw	r16, r28
     708:	07 5f       	subi	r16, 0xF7	; 247
     70a:	1f 4f       	sbci	r17, 0xFF	; 255
     70c:	ce 01       	movw	r24, r28
     70e:	01 96       	adiw	r24, 0x01	; 1
     710:	b8 01       	movw	r22, r16
     712:	01 d2       	rcall	.+1026   	; 0xb16 <__unpack_f>
     714:	81 e1       	ldi	r24, 0x11	; 17
     716:	e8 2e       	mov	r14, r24
     718:	f1 2c       	mov	r15, r1
     71a:	ec 0e       	add	r14, r28
     71c:	fd 1e       	adc	r15, r29
     71e:	ce 01       	movw	r24, r28
     720:	05 96       	adiw	r24, 0x05	; 5
     722:	b7 01       	movw	r22, r14
     724:	f8 d1       	rcall	.+1008   	; 0xb16 <__unpack_f>
     726:	89 85       	ldd	r24, Y+9	; 0x09
     728:	82 30       	cpi	r24, 0x02	; 2
     72a:	38 f0       	brcs	.+14     	; 0x73a <__ltsf2+0x4e>
     72c:	89 89       	ldd	r24, Y+17	; 0x11
     72e:	82 30       	cpi	r24, 0x02	; 2
     730:	20 f0       	brcs	.+8      	; 0x73a <__ltsf2+0x4e>
     732:	c8 01       	movw	r24, r16
     734:	b7 01       	movw	r22, r14
     736:	58 d2       	rcall	.+1200   	; 0xbe8 <__fpcmp_parts_f>
     738:	01 c0       	rjmp	.+2      	; 0x73c <__ltsf2+0x50>
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	68 96       	adiw	r28, 0x18	; 24
     73e:	e6 e0       	ldi	r30, 0x06	; 6
     740:	93 c7       	rjmp	.+3878   	; 0x1668 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e6 ea       	ldi	r30, 0xA6	; 166
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	76 c7       	rjmp	.+3820   	; 0x1638 <__prologue_saves__+0x20>
     74c:	69 83       	std	Y+1, r22	; 0x01
     74e:	7a 83       	std	Y+2, r23	; 0x02
     750:	8b 83       	std	Y+3, r24	; 0x03
     752:	9c 83       	std	Y+4, r25	; 0x04
     754:	ce 01       	movw	r24, r28
     756:	01 96       	adiw	r24, 0x01	; 1
     758:	be 01       	movw	r22, r28
     75a:	6b 5f       	subi	r22, 0xFB	; 251
     75c:	7f 4f       	sbci	r23, 0xFF	; 255
     75e:	db d1       	rcall	.+950    	; 0xb16 <__unpack_f>
     760:	8d 81       	ldd	r24, Y+5	; 0x05
     762:	82 30       	cpi	r24, 0x02	; 2
     764:	81 f1       	breq	.+96     	; 0x7c6 <__fixsfsi+0x84>
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	70 f1       	brcs	.+92     	; 0x7c6 <__fixsfsi+0x84>
     76a:	84 30       	cpi	r24, 0x04	; 4
     76c:	21 f4       	brne	.+8      	; 0x776 <__fixsfsi+0x34>
     76e:	8e 81       	ldd	r24, Y+6	; 0x06
     770:	88 23       	and	r24, r24
     772:	69 f1       	breq	.+90     	; 0x7ce <__fixsfsi+0x8c>
     774:	0a c0       	rjmp	.+20     	; 0x78a <__fixsfsi+0x48>
     776:	2f 81       	ldd	r18, Y+7	; 0x07
     778:	38 85       	ldd	r19, Y+8	; 0x08
     77a:	37 fd       	sbrc	r19, 7
     77c:	24 c0       	rjmp	.+72     	; 0x7c6 <__fixsfsi+0x84>
     77e:	6e 81       	ldd	r22, Y+6	; 0x06
     780:	2f 31       	cpi	r18, 0x1F	; 31
     782:	31 05       	cpc	r19, r1
     784:	3c f0       	brlt	.+14     	; 0x794 <__fixsfsi+0x52>
     786:	66 23       	and	r22, r22
     788:	11 f1       	breq	.+68     	; 0x7ce <__fixsfsi+0x8c>
     78a:	20 e0       	ldi	r18, 0x00	; 0
     78c:	30 e0       	ldi	r19, 0x00	; 0
     78e:	40 e0       	ldi	r20, 0x00	; 0
     790:	50 e8       	ldi	r21, 0x80	; 128
     792:	21 c0       	rjmp	.+66     	; 0x7d6 <__fixsfsi+0x94>
     794:	8e e1       	ldi	r24, 0x1E	; 30
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	82 1b       	sub	r24, r18
     79a:	93 0b       	sbc	r25, r19
     79c:	29 85       	ldd	r18, Y+9	; 0x09
     79e:	3a 85       	ldd	r19, Y+10	; 0x0a
     7a0:	4b 85       	ldd	r20, Y+11	; 0x0b
     7a2:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a4:	04 c0       	rjmp	.+8      	; 0x7ae <__fixsfsi+0x6c>
     7a6:	56 95       	lsr	r21
     7a8:	47 95       	ror	r20
     7aa:	37 95       	ror	r19
     7ac:	27 95       	ror	r18
     7ae:	8a 95       	dec	r24
     7b0:	d2 f7       	brpl	.-12     	; 0x7a6 <__fixsfsi+0x64>
     7b2:	66 23       	and	r22, r22
     7b4:	81 f0       	breq	.+32     	; 0x7d6 <__fixsfsi+0x94>
     7b6:	50 95       	com	r21
     7b8:	40 95       	com	r20
     7ba:	30 95       	com	r19
     7bc:	21 95       	neg	r18
     7be:	3f 4f       	sbci	r19, 0xFF	; 255
     7c0:	4f 4f       	sbci	r20, 0xFF	; 255
     7c2:	5f 4f       	sbci	r21, 0xFF	; 255
     7c4:	08 c0       	rjmp	.+16     	; 0x7d6 <__fixsfsi+0x94>
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	30 e0       	ldi	r19, 0x00	; 0
     7ca:	a9 01       	movw	r20, r18
     7cc:	04 c0       	rjmp	.+8      	; 0x7d6 <__fixsfsi+0x94>
     7ce:	2f ef       	ldi	r18, 0xFF	; 255
     7d0:	3f ef       	ldi	r19, 0xFF	; 255
     7d2:	4f ef       	ldi	r20, 0xFF	; 255
     7d4:	5f e7       	ldi	r21, 0x7F	; 127
     7d6:	b9 01       	movw	r22, r18
     7d8:	ca 01       	movw	r24, r20
     7da:	2c 96       	adiw	r28, 0x0c	; 12
     7dc:	e2 e0       	ldi	r30, 0x02	; 2
     7de:	48 c7       	rjmp	.+3728   	; 0x1670 <__epilogue_restores__+0x20>

000007e0 <__floatunsisf>:
     7e0:	a8 e0       	ldi	r26, 0x08	; 8
     7e2:	b0 e0       	ldi	r27, 0x00	; 0
     7e4:	e5 ef       	ldi	r30, 0xF5	; 245
     7e6:	f3 e0       	ldi	r31, 0x03	; 3
     7e8:	21 c7       	rjmp	.+3650   	; 0x162c <__prologue_saves__+0x14>
     7ea:	7b 01       	movw	r14, r22
     7ec:	8c 01       	movw	r16, r24
     7ee:	1a 82       	std	Y+2, r1	; 0x02
     7f0:	61 15       	cp	r22, r1
     7f2:	71 05       	cpc	r23, r1
     7f4:	81 05       	cpc	r24, r1
     7f6:	91 05       	cpc	r25, r1
     7f8:	19 f4       	brne	.+6      	; 0x800 <__floatunsisf+0x20>
     7fa:	82 e0       	ldi	r24, 0x02	; 2
     7fc:	89 83       	std	Y+1, r24	; 0x01
     7fe:	5e c0       	rjmp	.+188    	; 0x8bc <__floatunsisf+0xdc>
     800:	83 e0       	ldi	r24, 0x03	; 3
     802:	89 83       	std	Y+1, r24	; 0x01
     804:	8e e1       	ldi	r24, 0x1E	; 30
     806:	c8 2e       	mov	r12, r24
     808:	d1 2c       	mov	r13, r1
     80a:	dc 82       	std	Y+4, r13	; 0x04
     80c:	cb 82       	std	Y+3, r12	; 0x03
     80e:	ed 82       	std	Y+5, r14	; 0x05
     810:	fe 82       	std	Y+6, r15	; 0x06
     812:	0f 83       	std	Y+7, r16	; 0x07
     814:	18 87       	std	Y+8, r17	; 0x08
     816:	c8 01       	movw	r24, r16
     818:	b7 01       	movw	r22, r14
     81a:	56 d0       	rcall	.+172    	; 0x8c8 <__clzsi2>
     81c:	fc 01       	movw	r30, r24
     81e:	31 97       	sbiw	r30, 0x01	; 1
     820:	f7 ff       	sbrs	r31, 7
     822:	3a c0       	rjmp	.+116    	; 0x898 <__floatunsisf+0xb8>
     824:	aa 27       	eor	r26, r26
     826:	bb 27       	eor	r27, r27
     828:	ae 1b       	sub	r26, r30
     82a:	bf 0b       	sbc	r27, r31
     82c:	21 e0       	ldi	r18, 0x01	; 1
     82e:	30 e0       	ldi	r19, 0x00	; 0
     830:	40 e0       	ldi	r20, 0x00	; 0
     832:	50 e0       	ldi	r21, 0x00	; 0
     834:	0a 2e       	mov	r0, r26
     836:	04 c0       	rjmp	.+8      	; 0x840 <__floatunsisf+0x60>
     838:	22 0f       	add	r18, r18
     83a:	33 1f       	adc	r19, r19
     83c:	44 1f       	adc	r20, r20
     83e:	55 1f       	adc	r21, r21
     840:	0a 94       	dec	r0
     842:	d2 f7       	brpl	.-12     	; 0x838 <__floatunsisf+0x58>
     844:	21 50       	subi	r18, 0x01	; 1
     846:	30 40       	sbci	r19, 0x00	; 0
     848:	40 40       	sbci	r20, 0x00	; 0
     84a:	50 40       	sbci	r21, 0x00	; 0
     84c:	2e 21       	and	r18, r14
     84e:	3f 21       	and	r19, r15
     850:	40 23       	and	r20, r16
     852:	51 23       	and	r21, r17
     854:	61 e0       	ldi	r22, 0x01	; 1
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	80 e0       	ldi	r24, 0x00	; 0
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	21 15       	cp	r18, r1
     85e:	31 05       	cpc	r19, r1
     860:	41 05       	cpc	r20, r1
     862:	51 05       	cpc	r21, r1
     864:	19 f4       	brne	.+6      	; 0x86c <__floatunsisf+0x8c>
     866:	60 e0       	ldi	r22, 0x00	; 0
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	cb 01       	movw	r24, r22
     86c:	04 c0       	rjmp	.+8      	; 0x876 <__floatunsisf+0x96>
     86e:	16 95       	lsr	r17
     870:	07 95       	ror	r16
     872:	f7 94       	ror	r15
     874:	e7 94       	ror	r14
     876:	aa 95       	dec	r26
     878:	d2 f7       	brpl	.-12     	; 0x86e <__floatunsisf+0x8e>
     87a:	e6 2a       	or	r14, r22
     87c:	f7 2a       	or	r15, r23
     87e:	08 2b       	or	r16, r24
     880:	19 2b       	or	r17, r25
     882:	ed 82       	std	Y+5, r14	; 0x05
     884:	fe 82       	std	Y+6, r15	; 0x06
     886:	0f 83       	std	Y+7, r16	; 0x07
     888:	18 87       	std	Y+8, r17	; 0x08
     88a:	8e e1       	ldi	r24, 0x1E	; 30
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	8e 1b       	sub	r24, r30
     890:	9f 0b       	sbc	r25, r31
     892:	9c 83       	std	Y+4, r25	; 0x04
     894:	8b 83       	std	Y+3, r24	; 0x03
     896:	12 c0       	rjmp	.+36     	; 0x8bc <__floatunsisf+0xdc>
     898:	30 97       	sbiw	r30, 0x00	; 0
     89a:	81 f0       	breq	.+32     	; 0x8bc <__floatunsisf+0xdc>
     89c:	0e 2e       	mov	r0, r30
     89e:	04 c0       	rjmp	.+8      	; 0x8a8 <__floatunsisf+0xc8>
     8a0:	ee 0c       	add	r14, r14
     8a2:	ff 1c       	adc	r15, r15
     8a4:	00 1f       	adc	r16, r16
     8a6:	11 1f       	adc	r17, r17
     8a8:	0a 94       	dec	r0
     8aa:	d2 f7       	brpl	.-12     	; 0x8a0 <__floatunsisf+0xc0>
     8ac:	ed 82       	std	Y+5, r14	; 0x05
     8ae:	fe 82       	std	Y+6, r15	; 0x06
     8b0:	0f 83       	std	Y+7, r16	; 0x07
     8b2:	18 87       	std	Y+8, r17	; 0x08
     8b4:	ce 1a       	sub	r12, r30
     8b6:	df 0a       	sbc	r13, r31
     8b8:	dc 82       	std	Y+4, r13	; 0x04
     8ba:	cb 82       	std	Y+3, r12	; 0x03
     8bc:	ce 01       	movw	r24, r28
     8be:	01 96       	adiw	r24, 0x01	; 1
     8c0:	5d d0       	rcall	.+186    	; 0x97c <__pack_f>
     8c2:	28 96       	adiw	r28, 0x08	; 8
     8c4:	e8 e0       	ldi	r30, 0x08	; 8
     8c6:	ce c6       	rjmp	.+3484   	; 0x1664 <__epilogue_restores__+0x14>

000008c8 <__clzsi2>:
     8c8:	af 92       	push	r10
     8ca:	bf 92       	push	r11
     8cc:	cf 92       	push	r12
     8ce:	df 92       	push	r13
     8d0:	ef 92       	push	r14
     8d2:	ff 92       	push	r15
     8d4:	0f 93       	push	r16
     8d6:	1f 93       	push	r17
     8d8:	7b 01       	movw	r14, r22
     8da:	8c 01       	movw	r16, r24
     8dc:	80 e0       	ldi	r24, 0x00	; 0
     8de:	e8 16       	cp	r14, r24
     8e0:	80 e0       	ldi	r24, 0x00	; 0
     8e2:	f8 06       	cpc	r15, r24
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	08 07       	cpc	r16, r24
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	18 07       	cpc	r17, r24
     8ec:	58 f4       	brcc	.+22     	; 0x904 <__stack+0x5>
     8ee:	ef ef       	ldi	r30, 0xFF	; 255
     8f0:	ee 16       	cp	r14, r30
     8f2:	f1 04       	cpc	r15, r1
     8f4:	01 05       	cpc	r16, r1
     8f6:	11 05       	cpc	r17, r1
     8f8:	09 f0       	breq	.+2      	; 0x8fc <__clzsi2+0x34>
     8fa:	90 f4       	brcc	.+36     	; 0x920 <__stack+0x21>
     8fc:	80 e0       	ldi	r24, 0x00	; 0
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	dc 01       	movw	r26, r24
     902:	17 c0       	rjmp	.+46     	; 0x932 <__stack+0x33>
     904:	f0 e0       	ldi	r31, 0x00	; 0
     906:	ef 16       	cp	r14, r31
     908:	f0 e0       	ldi	r31, 0x00	; 0
     90a:	ff 06       	cpc	r15, r31
     90c:	f0 e0       	ldi	r31, 0x00	; 0
     90e:	0f 07       	cpc	r16, r31
     910:	f1 e0       	ldi	r31, 0x01	; 1
     912:	1f 07       	cpc	r17, r31
     914:	50 f4       	brcc	.+20     	; 0x92a <__stack+0x2b>
     916:	80 e1       	ldi	r24, 0x10	; 16
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	a0 e0       	ldi	r26, 0x00	; 0
     91c:	b0 e0       	ldi	r27, 0x00	; 0
     91e:	09 c0       	rjmp	.+18     	; 0x932 <__stack+0x33>
     920:	88 e0       	ldi	r24, 0x08	; 8
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	a0 e0       	ldi	r26, 0x00	; 0
     926:	b0 e0       	ldi	r27, 0x00	; 0
     928:	04 c0       	rjmp	.+8      	; 0x932 <__stack+0x33>
     92a:	88 e1       	ldi	r24, 0x18	; 24
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	a0 e0       	ldi	r26, 0x00	; 0
     930:	b0 e0       	ldi	r27, 0x00	; 0
     932:	20 e2       	ldi	r18, 0x20	; 32
     934:	30 e0       	ldi	r19, 0x00	; 0
     936:	40 e0       	ldi	r20, 0x00	; 0
     938:	50 e0       	ldi	r21, 0x00	; 0
     93a:	28 1b       	sub	r18, r24
     93c:	39 0b       	sbc	r19, r25
     93e:	4a 0b       	sbc	r20, r26
     940:	5b 0b       	sbc	r21, r27
     942:	57 01       	movw	r10, r14
     944:	68 01       	movw	r12, r16
     946:	04 c0       	rjmp	.+8      	; 0x950 <__stack+0x51>
     948:	d6 94       	lsr	r13
     94a:	c7 94       	ror	r12
     94c:	b7 94       	ror	r11
     94e:	a7 94       	ror	r10
     950:	8a 95       	dec	r24
     952:	d2 f7       	brpl	.-12     	; 0x948 <__stack+0x49>
     954:	d6 01       	movw	r26, r12
     956:	c5 01       	movw	r24, r10
     958:	88 5f       	subi	r24, 0xF8	; 248
     95a:	9e 4f       	sbci	r25, 0xFE	; 254
     95c:	fc 01       	movw	r30, r24
     95e:	80 81       	ld	r24, Z
     960:	28 1b       	sub	r18, r24
     962:	31 09       	sbc	r19, r1
     964:	41 09       	sbc	r20, r1
     966:	51 09       	sbc	r21, r1
     968:	c9 01       	movw	r24, r18
     96a:	1f 91       	pop	r17
     96c:	0f 91       	pop	r16
     96e:	ff 90       	pop	r15
     970:	ef 90       	pop	r14
     972:	df 90       	pop	r13
     974:	cf 90       	pop	r12
     976:	bf 90       	pop	r11
     978:	af 90       	pop	r10
     97a:	08 95       	ret

0000097c <__pack_f>:
     97c:	ef 92       	push	r14
     97e:	ff 92       	push	r15
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	cf 93       	push	r28
     986:	df 93       	push	r29
     988:	fc 01       	movw	r30, r24
     98a:	24 81       	ldd	r18, Z+4	; 0x04
     98c:	35 81       	ldd	r19, Z+5	; 0x05
     98e:	46 81       	ldd	r20, Z+6	; 0x06
     990:	57 81       	ldd	r21, Z+7	; 0x07
     992:	61 81       	ldd	r22, Z+1	; 0x01
     994:	80 81       	ld	r24, Z
     996:	82 30       	cpi	r24, 0x02	; 2
     998:	20 f4       	brcc	.+8      	; 0x9a2 <__pack_f+0x26>
     99a:	40 61       	ori	r20, 0x10	; 16
     99c:	ef ef       	ldi	r30, 0xFF	; 255
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	a3 c0       	rjmp	.+326    	; 0xae8 <__pack_f+0x16c>
     9a2:	84 30       	cpi	r24, 0x04	; 4
     9a4:	09 f4       	brne	.+2      	; 0x9a8 <__pack_f+0x2c>
     9a6:	9b c0       	rjmp	.+310    	; 0xade <__pack_f+0x162>
     9a8:	82 30       	cpi	r24, 0x02	; 2
     9aa:	09 f4       	brne	.+2      	; 0x9ae <__pack_f+0x32>
     9ac:	92 c0       	rjmp	.+292    	; 0xad2 <__pack_f+0x156>
     9ae:	21 15       	cp	r18, r1
     9b0:	31 05       	cpc	r19, r1
     9b2:	41 05       	cpc	r20, r1
     9b4:	51 05       	cpc	r21, r1
     9b6:	09 f4       	brne	.+2      	; 0x9ba <__pack_f+0x3e>
     9b8:	8f c0       	rjmp	.+286    	; 0xad8 <__pack_f+0x15c>
     9ba:	02 80       	ldd	r0, Z+2	; 0x02
     9bc:	f3 81       	ldd	r31, Z+3	; 0x03
     9be:	e0 2d       	mov	r30, r0
     9c0:	8f ef       	ldi	r24, 0xFF	; 255
     9c2:	e2 38       	cpi	r30, 0x82	; 130
     9c4:	f8 07       	cpc	r31, r24
     9c6:	0c f0       	brlt	.+2      	; 0x9ca <__pack_f+0x4e>
     9c8:	5a c0       	rjmp	.+180    	; 0xa7e <__pack_f+0x102>
     9ca:	c2 e8       	ldi	r28, 0x82	; 130
     9cc:	df ef       	ldi	r29, 0xFF	; 255
     9ce:	ce 1b       	sub	r28, r30
     9d0:	df 0b       	sbc	r29, r31
     9d2:	ca 31       	cpi	r28, 0x1A	; 26
     9d4:	d1 05       	cpc	r29, r1
     9d6:	6c f5       	brge	.+90     	; 0xa32 <__pack_f+0xb6>
     9d8:	79 01       	movw	r14, r18
     9da:	8a 01       	movw	r16, r20
     9dc:	0c 2e       	mov	r0, r28
     9de:	04 c0       	rjmp	.+8      	; 0x9e8 <__pack_f+0x6c>
     9e0:	16 95       	lsr	r17
     9e2:	07 95       	ror	r16
     9e4:	f7 94       	ror	r15
     9e6:	e7 94       	ror	r14
     9e8:	0a 94       	dec	r0
     9ea:	d2 f7       	brpl	.-12     	; 0x9e0 <__pack_f+0x64>
     9ec:	81 e0       	ldi	r24, 0x01	; 1
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	a0 e0       	ldi	r26, 0x00	; 0
     9f2:	b0 e0       	ldi	r27, 0x00	; 0
     9f4:	0c 2e       	mov	r0, r28
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__pack_f+0x84>
     9f8:	88 0f       	add	r24, r24
     9fa:	99 1f       	adc	r25, r25
     9fc:	aa 1f       	adc	r26, r26
     9fe:	bb 1f       	adc	r27, r27
     a00:	0a 94       	dec	r0
     a02:	d2 f7       	brpl	.-12     	; 0x9f8 <__pack_f+0x7c>
     a04:	01 97       	sbiw	r24, 0x01	; 1
     a06:	a1 09       	sbc	r26, r1
     a08:	b1 09       	sbc	r27, r1
     a0a:	82 23       	and	r24, r18
     a0c:	93 23       	and	r25, r19
     a0e:	a4 23       	and	r26, r20
     a10:	b5 23       	and	r27, r21
     a12:	21 e0       	ldi	r18, 0x01	; 1
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	40 e0       	ldi	r20, 0x00	; 0
     a18:	50 e0       	ldi	r21, 0x00	; 0
     a1a:	00 97       	sbiw	r24, 0x00	; 0
     a1c:	a1 05       	cpc	r26, r1
     a1e:	b1 05       	cpc	r27, r1
     a20:	19 f4       	brne	.+6      	; 0xa28 <__pack_f+0xac>
     a22:	20 e0       	ldi	r18, 0x00	; 0
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	a9 01       	movw	r20, r18
     a28:	2e 29       	or	r18, r14
     a2a:	3f 29       	or	r19, r15
     a2c:	40 2b       	or	r20, r16
     a2e:	51 2b       	or	r21, r17
     a30:	03 c0       	rjmp	.+6      	; 0xa38 <__pack_f+0xbc>
     a32:	20 e0       	ldi	r18, 0x00	; 0
     a34:	30 e0       	ldi	r19, 0x00	; 0
     a36:	a9 01       	movw	r20, r18
     a38:	da 01       	movw	r26, r20
     a3a:	c9 01       	movw	r24, r18
     a3c:	8f 77       	andi	r24, 0x7F	; 127
     a3e:	90 70       	andi	r25, 0x00	; 0
     a40:	a0 70       	andi	r26, 0x00	; 0
     a42:	b0 70       	andi	r27, 0x00	; 0
     a44:	80 34       	cpi	r24, 0x40	; 64
     a46:	91 05       	cpc	r25, r1
     a48:	a1 05       	cpc	r26, r1
     a4a:	b1 05       	cpc	r27, r1
     a4c:	39 f4       	brne	.+14     	; 0xa5c <__pack_f+0xe0>
     a4e:	27 ff       	sbrs	r18, 7
     a50:	09 c0       	rjmp	.+18     	; 0xa64 <__pack_f+0xe8>
     a52:	20 5c       	subi	r18, 0xC0	; 192
     a54:	3f 4f       	sbci	r19, 0xFF	; 255
     a56:	4f 4f       	sbci	r20, 0xFF	; 255
     a58:	5f 4f       	sbci	r21, 0xFF	; 255
     a5a:	04 c0       	rjmp	.+8      	; 0xa64 <__pack_f+0xe8>
     a5c:	21 5c       	subi	r18, 0xC1	; 193
     a5e:	3f 4f       	sbci	r19, 0xFF	; 255
     a60:	4f 4f       	sbci	r20, 0xFF	; 255
     a62:	5f 4f       	sbci	r21, 0xFF	; 255
     a64:	e1 e0       	ldi	r30, 0x01	; 1
     a66:	f0 e0       	ldi	r31, 0x00	; 0
     a68:	20 30       	cpi	r18, 0x00	; 0
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	38 07       	cpc	r19, r24
     a6e:	80 e0       	ldi	r24, 0x00	; 0
     a70:	48 07       	cpc	r20, r24
     a72:	80 e4       	ldi	r24, 0x40	; 64
     a74:	58 07       	cpc	r21, r24
     a76:	28 f5       	brcc	.+74     	; 0xac2 <__pack_f+0x146>
     a78:	e0 e0       	ldi	r30, 0x00	; 0
     a7a:	f0 e0       	ldi	r31, 0x00	; 0
     a7c:	22 c0       	rjmp	.+68     	; 0xac2 <__pack_f+0x146>
     a7e:	e0 38       	cpi	r30, 0x80	; 128
     a80:	f1 05       	cpc	r31, r1
     a82:	6c f5       	brge	.+90     	; 0xade <__pack_f+0x162>
     a84:	e1 58       	subi	r30, 0x81	; 129
     a86:	ff 4f       	sbci	r31, 0xFF	; 255
     a88:	da 01       	movw	r26, r20
     a8a:	c9 01       	movw	r24, r18
     a8c:	8f 77       	andi	r24, 0x7F	; 127
     a8e:	90 70       	andi	r25, 0x00	; 0
     a90:	a0 70       	andi	r26, 0x00	; 0
     a92:	b0 70       	andi	r27, 0x00	; 0
     a94:	80 34       	cpi	r24, 0x40	; 64
     a96:	91 05       	cpc	r25, r1
     a98:	a1 05       	cpc	r26, r1
     a9a:	b1 05       	cpc	r27, r1
     a9c:	39 f4       	brne	.+14     	; 0xaac <__pack_f+0x130>
     a9e:	27 ff       	sbrs	r18, 7
     aa0:	09 c0       	rjmp	.+18     	; 0xab4 <__pack_f+0x138>
     aa2:	20 5c       	subi	r18, 0xC0	; 192
     aa4:	3f 4f       	sbci	r19, 0xFF	; 255
     aa6:	4f 4f       	sbci	r20, 0xFF	; 255
     aa8:	5f 4f       	sbci	r21, 0xFF	; 255
     aaa:	04 c0       	rjmp	.+8      	; 0xab4 <__pack_f+0x138>
     aac:	21 5c       	subi	r18, 0xC1	; 193
     aae:	3f 4f       	sbci	r19, 0xFF	; 255
     ab0:	4f 4f       	sbci	r20, 0xFF	; 255
     ab2:	5f 4f       	sbci	r21, 0xFF	; 255
     ab4:	57 ff       	sbrs	r21, 7
     ab6:	05 c0       	rjmp	.+10     	; 0xac2 <__pack_f+0x146>
     ab8:	56 95       	lsr	r21
     aba:	47 95       	ror	r20
     abc:	37 95       	ror	r19
     abe:	27 95       	ror	r18
     ac0:	31 96       	adiw	r30, 0x01	; 1
     ac2:	87 e0       	ldi	r24, 0x07	; 7
     ac4:	56 95       	lsr	r21
     ac6:	47 95       	ror	r20
     ac8:	37 95       	ror	r19
     aca:	27 95       	ror	r18
     acc:	8a 95       	dec	r24
     ace:	d1 f7       	brne	.-12     	; 0xac4 <__pack_f+0x148>
     ad0:	0b c0       	rjmp	.+22     	; 0xae8 <__pack_f+0x16c>
     ad2:	e0 e0       	ldi	r30, 0x00	; 0
     ad4:	f0 e0       	ldi	r31, 0x00	; 0
     ad6:	05 c0       	rjmp	.+10     	; 0xae2 <__pack_f+0x166>
     ad8:	e0 e0       	ldi	r30, 0x00	; 0
     ada:	f0 e0       	ldi	r31, 0x00	; 0
     adc:	05 c0       	rjmp	.+10     	; 0xae8 <__pack_f+0x16c>
     ade:	ef ef       	ldi	r30, 0xFF	; 255
     ae0:	f0 e0       	ldi	r31, 0x00	; 0
     ae2:	20 e0       	ldi	r18, 0x00	; 0
     ae4:	30 e0       	ldi	r19, 0x00	; 0
     ae6:	a9 01       	movw	r20, r18
     ae8:	8e 2f       	mov	r24, r30
     aea:	87 95       	ror	r24
     aec:	88 27       	eor	r24, r24
     aee:	87 95       	ror	r24
     af0:	94 2f       	mov	r25, r20
     af2:	9f 77       	andi	r25, 0x7F	; 127
     af4:	67 95       	ror	r22
     af6:	66 27       	eor	r22, r22
     af8:	67 95       	ror	r22
     afa:	e6 95       	lsr	r30
     afc:	e2 2e       	mov	r14, r18
     afe:	a9 2f       	mov	r26, r25
     b00:	a8 2b       	or	r26, r24
     b02:	fe 2f       	mov	r31, r30
     b04:	f6 2b       	or	r31, r22
     b06:	62 2f       	mov	r22, r18
     b08:	73 2f       	mov	r23, r19
     b0a:	8a 2f       	mov	r24, r26
     b0c:	9f 2f       	mov	r25, r31
     b0e:	cd b7       	in	r28, 0x3d	; 61
     b10:	de b7       	in	r29, 0x3e	; 62
     b12:	e6 e0       	ldi	r30, 0x06	; 6
     b14:	a9 c5       	rjmp	.+2898   	; 0x1668 <__epilogue_restores__+0x18>

00000b16 <__unpack_f>:
     b16:	dc 01       	movw	r26, r24
     b18:	fb 01       	movw	r30, r22
     b1a:	2c 91       	ld	r18, X
     b1c:	11 96       	adiw	r26, 0x01	; 1
     b1e:	3c 91       	ld	r19, X
     b20:	11 97       	sbiw	r26, 0x01	; 1
     b22:	12 96       	adiw	r26, 0x02	; 2
     b24:	8c 91       	ld	r24, X
     b26:	12 97       	sbiw	r26, 0x02	; 2
     b28:	48 2f       	mov	r20, r24
     b2a:	4f 77       	andi	r20, 0x7F	; 127
     b2c:	50 e0       	ldi	r21, 0x00	; 0
     b2e:	98 2f       	mov	r25, r24
     b30:	99 1f       	adc	r25, r25
     b32:	99 27       	eor	r25, r25
     b34:	99 1f       	adc	r25, r25
     b36:	13 96       	adiw	r26, 0x03	; 3
     b38:	6c 91       	ld	r22, X
     b3a:	13 97       	sbiw	r26, 0x03	; 3
     b3c:	86 2f       	mov	r24, r22
     b3e:	88 0f       	add	r24, r24
     b40:	89 2b       	or	r24, r25
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	66 1f       	adc	r22, r22
     b46:	66 27       	eor	r22, r22
     b48:	66 1f       	adc	r22, r22
     b4a:	61 83       	std	Z+1, r22	; 0x01
     b4c:	00 97       	sbiw	r24, 0x00	; 0
     b4e:	39 f5       	brne	.+78     	; 0xb9e <__unpack_f+0x88>
     b50:	21 15       	cp	r18, r1
     b52:	31 05       	cpc	r19, r1
     b54:	41 05       	cpc	r20, r1
     b56:	51 05       	cpc	r21, r1
     b58:	11 f4       	brne	.+4      	; 0xb5e <__unpack_f+0x48>
     b5a:	82 e0       	ldi	r24, 0x02	; 2
     b5c:	29 c0       	rjmp	.+82     	; 0xbb0 <__unpack_f+0x9a>
     b5e:	82 e8       	ldi	r24, 0x82	; 130
     b60:	9f ef       	ldi	r25, 0xFF	; 255
     b62:	93 83       	std	Z+3, r25	; 0x03
     b64:	82 83       	std	Z+2, r24	; 0x02
     b66:	67 e0       	ldi	r22, 0x07	; 7
     b68:	22 0f       	add	r18, r18
     b6a:	33 1f       	adc	r19, r19
     b6c:	44 1f       	adc	r20, r20
     b6e:	55 1f       	adc	r21, r21
     b70:	6a 95       	dec	r22
     b72:	d1 f7       	brne	.-12     	; 0xb68 <__unpack_f+0x52>
     b74:	83 e0       	ldi	r24, 0x03	; 3
     b76:	80 83       	st	Z, r24
     b78:	09 c0       	rjmp	.+18     	; 0xb8c <__unpack_f+0x76>
     b7a:	22 0f       	add	r18, r18
     b7c:	33 1f       	adc	r19, r19
     b7e:	44 1f       	adc	r20, r20
     b80:	55 1f       	adc	r21, r21
     b82:	82 81       	ldd	r24, Z+2	; 0x02
     b84:	93 81       	ldd	r25, Z+3	; 0x03
     b86:	01 97       	sbiw	r24, 0x01	; 1
     b88:	93 83       	std	Z+3, r25	; 0x03
     b8a:	82 83       	std	Z+2, r24	; 0x02
     b8c:	20 30       	cpi	r18, 0x00	; 0
     b8e:	80 e0       	ldi	r24, 0x00	; 0
     b90:	38 07       	cpc	r19, r24
     b92:	80 e0       	ldi	r24, 0x00	; 0
     b94:	48 07       	cpc	r20, r24
     b96:	80 e4       	ldi	r24, 0x40	; 64
     b98:	58 07       	cpc	r21, r24
     b9a:	78 f3       	brcs	.-34     	; 0xb7a <__unpack_f+0x64>
     b9c:	20 c0       	rjmp	.+64     	; 0xbde <__unpack_f+0xc8>
     b9e:	8f 3f       	cpi	r24, 0xFF	; 255
     ba0:	91 05       	cpc	r25, r1
     ba2:	79 f4       	brne	.+30     	; 0xbc2 <__unpack_f+0xac>
     ba4:	21 15       	cp	r18, r1
     ba6:	31 05       	cpc	r19, r1
     ba8:	41 05       	cpc	r20, r1
     baa:	51 05       	cpc	r21, r1
     bac:	19 f4       	brne	.+6      	; 0xbb4 <__unpack_f+0x9e>
     bae:	84 e0       	ldi	r24, 0x04	; 4
     bb0:	80 83       	st	Z, r24
     bb2:	08 95       	ret
     bb4:	44 ff       	sbrs	r20, 4
     bb6:	03 c0       	rjmp	.+6      	; 0xbbe <__unpack_f+0xa8>
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	80 83       	st	Z, r24
     bbc:	10 c0       	rjmp	.+32     	; 0xbde <__unpack_f+0xc8>
     bbe:	10 82       	st	Z, r1
     bc0:	0e c0       	rjmp	.+28     	; 0xbde <__unpack_f+0xc8>
     bc2:	8f 57       	subi	r24, 0x7F	; 127
     bc4:	90 40       	sbci	r25, 0x00	; 0
     bc6:	93 83       	std	Z+3, r25	; 0x03
     bc8:	82 83       	std	Z+2, r24	; 0x02
     bca:	83 e0       	ldi	r24, 0x03	; 3
     bcc:	80 83       	st	Z, r24
     bce:	87 e0       	ldi	r24, 0x07	; 7
     bd0:	22 0f       	add	r18, r18
     bd2:	33 1f       	adc	r19, r19
     bd4:	44 1f       	adc	r20, r20
     bd6:	55 1f       	adc	r21, r21
     bd8:	8a 95       	dec	r24
     bda:	d1 f7       	brne	.-12     	; 0xbd0 <__unpack_f+0xba>
     bdc:	50 64       	ori	r21, 0x40	; 64
     bde:	24 83       	std	Z+4, r18	; 0x04
     be0:	35 83       	std	Z+5, r19	; 0x05
     be2:	46 83       	std	Z+6, r20	; 0x06
     be4:	57 83       	std	Z+7, r21	; 0x07
     be6:	08 95       	ret

00000be8 <__fpcmp_parts_f>:
     be8:	fc 01       	movw	r30, r24
     bea:	db 01       	movw	r26, r22
     bec:	90 81       	ld	r25, Z
     bee:	92 30       	cpi	r25, 0x02	; 2
     bf0:	08 f4       	brcc	.+2      	; 0xbf4 <__fpcmp_parts_f+0xc>
     bf2:	49 c0       	rjmp	.+146    	; 0xc86 <__fpcmp_parts_f+0x9e>
     bf4:	8c 91       	ld	r24, X
     bf6:	82 30       	cpi	r24, 0x02	; 2
     bf8:	08 f4       	brcc	.+2      	; 0xbfc <__fpcmp_parts_f+0x14>
     bfa:	45 c0       	rjmp	.+138    	; 0xc86 <__fpcmp_parts_f+0x9e>
     bfc:	94 30       	cpi	r25, 0x04	; 4
     bfe:	51 f4       	brne	.+20     	; 0xc14 <__fpcmp_parts_f+0x2c>
     c00:	61 81       	ldd	r22, Z+1	; 0x01
     c02:	84 30       	cpi	r24, 0x04	; 4
     c04:	b1 f5       	brne	.+108    	; 0xc72 <__fpcmp_parts_f+0x8a>
     c06:	11 96       	adiw	r26, 0x01	; 1
     c08:	2c 91       	ld	r18, X
     c0a:	11 97       	sbiw	r26, 0x01	; 1
     c0c:	30 e0       	ldi	r19, 0x00	; 0
     c0e:	26 1b       	sub	r18, r22
     c10:	31 09       	sbc	r19, r1
     c12:	41 c0       	rjmp	.+130    	; 0xc96 <__fpcmp_parts_f+0xae>
     c14:	84 30       	cpi	r24, 0x04	; 4
     c16:	21 f0       	breq	.+8      	; 0xc20 <__fpcmp_parts_f+0x38>
     c18:	92 30       	cpi	r25, 0x02	; 2
     c1a:	41 f4       	brne	.+16     	; 0xc2c <__fpcmp_parts_f+0x44>
     c1c:	82 30       	cpi	r24, 0x02	; 2
     c1e:	b1 f1       	breq	.+108    	; 0xc8c <__fpcmp_parts_f+0xa4>
     c20:	11 96       	adiw	r26, 0x01	; 1
     c22:	8c 91       	ld	r24, X
     c24:	11 97       	sbiw	r26, 0x01	; 1
     c26:	88 23       	and	r24, r24
     c28:	a1 f1       	breq	.+104    	; 0xc92 <__fpcmp_parts_f+0xaa>
     c2a:	2d c0       	rjmp	.+90     	; 0xc86 <__fpcmp_parts_f+0x9e>
     c2c:	61 81       	ldd	r22, Z+1	; 0x01
     c2e:	82 30       	cpi	r24, 0x02	; 2
     c30:	01 f1       	breq	.+64     	; 0xc72 <__fpcmp_parts_f+0x8a>
     c32:	11 96       	adiw	r26, 0x01	; 1
     c34:	8c 91       	ld	r24, X
     c36:	11 97       	sbiw	r26, 0x01	; 1
     c38:	68 17       	cp	r22, r24
     c3a:	d9 f4       	brne	.+54     	; 0xc72 <__fpcmp_parts_f+0x8a>
     c3c:	22 81       	ldd	r18, Z+2	; 0x02
     c3e:	33 81       	ldd	r19, Z+3	; 0x03
     c40:	12 96       	adiw	r26, 0x02	; 2
     c42:	8d 91       	ld	r24, X+
     c44:	9c 91       	ld	r25, X
     c46:	13 97       	sbiw	r26, 0x03	; 3
     c48:	82 17       	cp	r24, r18
     c4a:	93 07       	cpc	r25, r19
     c4c:	94 f0       	brlt	.+36     	; 0xc72 <__fpcmp_parts_f+0x8a>
     c4e:	28 17       	cp	r18, r24
     c50:	39 07       	cpc	r19, r25
     c52:	bc f0       	brlt	.+46     	; 0xc82 <__fpcmp_parts_f+0x9a>
     c54:	24 81       	ldd	r18, Z+4	; 0x04
     c56:	35 81       	ldd	r19, Z+5	; 0x05
     c58:	46 81       	ldd	r20, Z+6	; 0x06
     c5a:	57 81       	ldd	r21, Z+7	; 0x07
     c5c:	14 96       	adiw	r26, 0x04	; 4
     c5e:	8d 91       	ld	r24, X+
     c60:	9d 91       	ld	r25, X+
     c62:	0d 90       	ld	r0, X+
     c64:	bc 91       	ld	r27, X
     c66:	a0 2d       	mov	r26, r0
     c68:	82 17       	cp	r24, r18
     c6a:	93 07       	cpc	r25, r19
     c6c:	a4 07       	cpc	r26, r20
     c6e:	b5 07       	cpc	r27, r21
     c70:	18 f4       	brcc	.+6      	; 0xc78 <__fpcmp_parts_f+0x90>
     c72:	66 23       	and	r22, r22
     c74:	41 f0       	breq	.+16     	; 0xc86 <__fpcmp_parts_f+0x9e>
     c76:	0d c0       	rjmp	.+26     	; 0xc92 <__fpcmp_parts_f+0xaa>
     c78:	28 17       	cp	r18, r24
     c7a:	39 07       	cpc	r19, r25
     c7c:	4a 07       	cpc	r20, r26
     c7e:	5b 07       	cpc	r21, r27
     c80:	28 f4       	brcc	.+10     	; 0xc8c <__fpcmp_parts_f+0xa4>
     c82:	66 23       	and	r22, r22
     c84:	31 f0       	breq	.+12     	; 0xc92 <__fpcmp_parts_f+0xaa>
     c86:	21 e0       	ldi	r18, 0x01	; 1
     c88:	30 e0       	ldi	r19, 0x00	; 0
     c8a:	05 c0       	rjmp	.+10     	; 0xc96 <__fpcmp_parts_f+0xae>
     c8c:	20 e0       	ldi	r18, 0x00	; 0
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <__fpcmp_parts_f+0xae>
     c92:	2f ef       	ldi	r18, 0xFF	; 255
     c94:	3f ef       	ldi	r19, 0xFF	; 255
     c96:	c9 01       	movw	r24, r18
     c98:	08 95       	ret

00000c9a <_ZdlPv>:
#include "stdlib.h"
#include "Uart.h"

Analog_Digital Analog_Digital::adc;

void operator delete(void * p) {
     c9a:	df 93       	push	r29
     c9c:	cf 93       	push	r28
     c9e:	00 d0       	rcall	.+0      	; 0xca0 <_ZdlPv+0x6>
     ca0:	cd b7       	in	r28, 0x3d	; 61
     ca2:	de b7       	in	r29, 0x3e	; 62
     ca4:	9a 83       	std	Y+2, r25	; 0x02
     ca6:	89 83       	std	Y+1, r24	; 0x01
	free(p);
     ca8:	89 81       	ldd	r24, Y+1	; 0x01
     caa:	9a 81       	ldd	r25, Y+2	; 0x02
     cac:	08 d6       	rcall	.+3088   	; 0x18be <free>
     cae:	0f 90       	pop	r0
}
     cb0:	0f 90       	pop	r0
     cb2:	cf 91       	pop	r28
     cb4:	df 91       	pop	r29
     cb6:	08 95       	ret

00000cb8 <_ZN14Analog_DigitalC1Ev>:

Analog_Digital::Analog_Digital() {
     cb8:	df 93       	push	r29
     cba:	cf 93       	push	r28
     cbc:	00 d0       	rcall	.+0      	; 0xcbe <_ZN14Analog_DigitalC1Ev+0x6>
     cbe:	cd b7       	in	r28, 0x3d	; 61
     cc0:	de b7       	in	r29, 0x3e	; 62
     cc2:	9a 83       	std	Y+2, r25	; 0x02
     cc4:	89 83       	std	Y+1, r24	; 0x01
     cc6:	89 81       	ldd	r24, Y+1	; 0x01
     cc8:	9a 81       	ldd	r25, Y+2	; 0x02
     cca:	22 e1       	ldi	r18, 0x12	; 18
     ccc:	32 e0       	ldi	r19, 0x02	; 2
     cce:	fc 01       	movw	r30, r24
     cd0:	31 83       	std	Z+1, r19	; 0x01
     cd2:	20 83       	st	Z, r18
     cd4:	89 81       	ldd	r24, Y+1	; 0x01
     cd6:	9a 81       	ldd	r25, Y+2	; 0x02
     cd8:	02 96       	adiw	r24, 0x02	; 2
     cda:	f8 d0       	rcall	.+496    	; 0xecc <_ZN15Circular_BufferILi23EEC1Ev>
     cdc:	84 e6       	ldi	r24, 0x64	; 100
	// TODO Auto-generated constructor stub
    //DIDR0 -> default
    PRR &= ~(1<<PRADC);     //ADC turned on
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	24 e6       	ldi	r18, 0x64	; 100
     ce2:	30 e0       	ldi	r19, 0x00	; 0
     ce4:	f9 01       	movw	r30, r18
     ce6:	20 81       	ld	r18, Z
     ce8:	2e 7f       	andi	r18, 0xFE	; 254
     cea:	fc 01       	movw	r30, r24
     cec:	20 83       	st	Z, r18
     cee:	8a e7       	ldi	r24, 0x7A	; 122
    //ADMUX -> default
    ADCSRA = 0xAB;          //ADC Enabled, no auto trigger, Interrupt enabled, 128 prescaller
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	2b ea       	ldi	r18, 0xAB	; 171
     cf4:	fc 01       	movw	r30, r24
     cf6:	20 83       	st	Z, r18
     cf8:	0f 90       	pop	r0
    //ADCSRB -> default in free running mode
}
     cfa:	0f 90       	pop	r0
     cfc:	cf 91       	pop	r28
     cfe:	df 91       	pop	r29
     d00:	08 95       	ret

00000d02 <_ZN14Analog_DigitalD1Ev>:

Analog_Digital::~Analog_Digital() {
     d02:	df 93       	push	r29
     d04:	cf 93       	push	r28
     d06:	00 d0       	rcall	.+0      	; 0xd08 <_ZN14Analog_DigitalD1Ev+0x6>
     d08:	cd b7       	in	r28, 0x3d	; 61
     d0a:	de b7       	in	r29, 0x3e	; 62
     d0c:	9a 83       	std	Y+2, r25	; 0x02
     d0e:	89 83       	std	Y+1, r24	; 0x01
     d10:	89 81       	ldd	r24, Y+1	; 0x01
     d12:	9a 81       	ldd	r25, Y+2	; 0x02
     d14:	22 e1       	ldi	r18, 0x12	; 18
     d16:	32 e0       	ldi	r19, 0x02	; 2
     d18:	fc 01       	movw	r30, r24
     d1a:	31 83       	std	Z+1, r19	; 0x01
     d1c:	20 83       	st	Z, r18
     d1e:	89 81       	ldd	r24, Y+1	; 0x01
     d20:	9a 81       	ldd	r25, Y+2	; 0x02
     d22:	02 96       	adiw	r24, 0x02	; 2
     d24:	f0 d0       	rcall	.+480    	; 0xf06 <_ZN15Circular_BufferILi23EED1Ev>
     d26:	80 e0       	ldi	r24, 0x00	; 0
	// TODO Auto-generated destructor stub
}
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	81 70       	andi	r24, 0x01	; 1
     d2c:	90 70       	andi	r25, 0x00	; 0
     d2e:	88 23       	and	r24, r24
     d30:	19 f0       	breq	.+6      	; 0xd38 <_ZN14Analog_DigitalD1Ev+0x36>
     d32:	89 81       	ldd	r24, Y+1	; 0x01
     d34:	9a 81       	ldd	r25, Y+2	; 0x02
     d36:	b1 df       	rcall	.-158    	; 0xc9a <_ZdlPv>
     d38:	0f 90       	pop	r0
     d3a:	0f 90       	pop	r0
     d3c:	cf 91       	pop	r28
     d3e:	df 91       	pop	r29
     d40:	08 95       	ret

00000d42 <_ZN14Analog_DigitalD0Ev>:
    //ADMUX -> default
    ADCSRA = 0xAB;          //ADC Enabled, no auto trigger, Interrupt enabled, 128 prescaller
    //ADCSRB -> default in free running mode
}

Analog_Digital::~Analog_Digital() {
     d42:	df 93       	push	r29
     d44:	cf 93       	push	r28
     d46:	00 d0       	rcall	.+0      	; 0xd48 <_ZN14Analog_DigitalD0Ev+0x6>
     d48:	cd b7       	in	r28, 0x3d	; 61
     d4a:	de b7       	in	r29, 0x3e	; 62
     d4c:	9a 83       	std	Y+2, r25	; 0x02
     d4e:	89 83       	std	Y+1, r24	; 0x01
	// TODO Auto-generated destructor stub
}
     d50:	89 81       	ldd	r24, Y+1	; 0x01
     d52:	9a 81       	ldd	r25, Y+2	; 0x02
     d54:	d6 df       	rcall	.-84     	; 0xd02 <_ZN14Analog_DigitalD1Ev>
     d56:	89 81       	ldd	r24, Y+1	; 0x01
     d58:	9a 81       	ldd	r25, Y+2	; 0x02
     d5a:	9f df       	rcall	.-194    	; 0xc9a <_ZdlPv>
     d5c:	0f 90       	pop	r0
     d5e:	0f 90       	pop	r0
     d60:	cf 91       	pop	r28
     d62:	df 91       	pop	r29
     d64:	08 95       	ret

00000d66 <__vector_21>:
	}else{
		return -1;
	}
}

ISR(ADC_vect){
     d66:	1f 92       	push	r1
     d68:	0f 92       	push	r0
     d6a:	0f b6       	in	r0, 0x3f	; 63
     d6c:	0f 92       	push	r0
     d6e:	11 24       	eor	r1, r1
     d70:	2f 93       	push	r18
     d72:	3f 93       	push	r19
     d74:	4f 93       	push	r20
     d76:	5f 93       	push	r21
     d78:	6f 93       	push	r22
     d7a:	7f 93       	push	r23
     d7c:	8f 93       	push	r24
     d7e:	9f 93       	push	r25
     d80:	af 93       	push	r26
     d82:	bf 93       	push	r27
     d84:	ef 93       	push	r30
     d86:	ff 93       	push	r31
     d88:	df 93       	push	r29
     d8a:	cf 93       	push	r28
     d8c:	cd b7       	in	r28, 0x3d	; 61
     d8e:	de b7       	in	r29, 0x3e	; 62
	Analog_Digital::interrupt_adc();
     d90:	13 d0       	rcall	.+38     	; 0xdb8 <_ZN14Analog_Digital13interrupt_adcEv>
     d92:	cf 91       	pop	r28
}
     d94:	df 91       	pop	r29
     d96:	ff 91       	pop	r31
     d98:	ef 91       	pop	r30
     d9a:	bf 91       	pop	r27
     d9c:	af 91       	pop	r26
     d9e:	9f 91       	pop	r25
     da0:	8f 91       	pop	r24
     da2:	7f 91       	pop	r23
     da4:	6f 91       	pop	r22
     da6:	5f 91       	pop	r21
     da8:	4f 91       	pop	r20
     daa:	3f 91       	pop	r19
     dac:	2f 91       	pop	r18
     dae:	0f 90       	pop	r0
     db0:	0f be       	out	0x3f, r0	; 63
     db2:	0f 90       	pop	r0
     db4:	1f 90       	pop	r1
     db6:	18 95       	reti

00000db8 <_ZN14Analog_Digital13interrupt_adcEv>:

void Analog_Digital::interrupt_adc(){
     db8:	df 93       	push	r29
     dba:	cf 93       	push	r28
     dbc:	00 d0       	rcall	.+0      	; 0xdbe <_ZN14Analog_Digital13interrupt_adcEv+0x6>
     dbe:	cd b7       	in	r28, 0x3d	; 61
     dc0:	de b7       	in	r29, 0x3e	; 62
    int adc_val;
    adc_val = ADC;
     dc2:	88 e7       	ldi	r24, 0x78	; 120
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	fc 01       	movw	r30, r24
     dc8:	80 81       	ld	r24, Z
     dca:	91 81       	ldd	r25, Z+1	; 0x01
     dcc:	9a 83       	std	Y+2, r25	; 0x02
     dce:	89 83       	std	Y+1, r24	; 0x01
    adc.buffer.push(adc_val);
     dd0:	29 81       	ldd	r18, Y+1	; 0x01
     dd2:	3a 81       	ldd	r19, Y+2	; 0x02
     dd4:	88 e2       	ldi	r24, 0x28	; 40
     dd6:	92 e0       	ldi	r25, 0x02	; 2
     dd8:	b9 01       	movw	r22, r18
     dda:	c3 d0       	rcall	.+390    	; 0xf62 <_ZN15Circular_BufferILi23EE4pushEj>
     ddc:	8a e7       	ldi	r24, 0x7A	; 122
    ADCSRA |= 1<<ADSC;
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	2a e7       	ldi	r18, 0x7A	; 122
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	f9 01       	movw	r30, r18
     de6:	20 81       	ld	r18, Z
     de8:	20 64       	ori	r18, 0x40	; 64
     dea:	fc 01       	movw	r30, r24
     dec:	20 83       	st	Z, r18
     dee:	0f 90       	pop	r0
}
     df0:	0f 90       	pop	r0
     df2:	cf 91       	pop	r28
     df4:	df 91       	pop	r29
     df6:	08 95       	ret

00000df8 <_ZN14Analog_Digital3rmsEi>:

unsigned long int Analog_Digital::rms(int repeat){
     df8:	df 93       	push	r29
     dfa:	cf 93       	push	r28
     dfc:	cd b7       	in	r28, 0x3d	; 61
     dfe:	de b7       	in	r29, 0x3e	; 62
     e00:	2c 97       	sbiw	r28, 0x0c	; 12
     e02:	0f b6       	in	r0, 0x3f	; 63
     e04:	f8 94       	cli
     e06:	de bf       	out	0x3e, r29	; 62
     e08:	0f be       	out	0x3f, r0	; 63
     e0a:	cd bf       	out	0x3d, r28	; 61
     e0c:	9a 87       	std	Y+10, r25	; 0x0a
     e0e:	89 87       	std	Y+9, r24	; 0x09
     e10:	7c 87       	std	Y+12, r23	; 0x0c
     e12:	6b 87       	std	Y+11, r22	; 0x0b
	int aux = 0;
     e14:	1a 82       	std	Y+2, r1	; 0x02
     e16:	19 82       	std	Y+1, r1	; 0x01
	unsigned long accumulated = 0;
     e18:	1b 82       	std	Y+3, r1	; 0x03
     e1a:	1c 82       	std	Y+4, r1	; 0x04
     e1c:	1d 82       	std	Y+5, r1	; 0x05
     e1e:	1e 82       	std	Y+6, r1	; 0x06
	while(aux < repeat){
     e20:	20 c0       	rjmp	.+64     	; 0xe62 <_ZN14Analog_Digital3rmsEi+0x6a>
		int digital_value = OCR0A;
     e22:	87 e4       	ldi	r24, 0x47	; 71
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	fc 01       	movw	r30, r24
     e28:	80 81       	ld	r24, Z
     e2a:	88 2f       	mov	r24, r24
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	98 87       	std	Y+8, r25	; 0x08
     e30:	8f 83       	std	Y+7, r24	; 0x07
		accumulated = digital_value * digital_value;
     e32:	4f 81       	ldd	r20, Y+7	; 0x07
     e34:	58 85       	ldd	r21, Y+8	; 0x08
     e36:	2f 81       	ldd	r18, Y+7	; 0x07
     e38:	38 85       	ldd	r19, Y+8	; 0x08
     e3a:	42 9f       	mul	r20, r18
     e3c:	c0 01       	movw	r24, r0
     e3e:	43 9f       	mul	r20, r19
     e40:	90 0d       	add	r25, r0
     e42:	52 9f       	mul	r21, r18
     e44:	90 0d       	add	r25, r0
     e46:	11 24       	eor	r1, r1
     e48:	aa 27       	eor	r26, r26
     e4a:	97 fd       	sbrc	r25, 7
     e4c:	a0 95       	com	r26
     e4e:	ba 2f       	mov	r27, r26
     e50:	8b 83       	std	Y+3, r24	; 0x03
     e52:	9c 83       	std	Y+4, r25	; 0x04
     e54:	ad 83       	std	Y+5, r26	; 0x05
     e56:	be 83       	std	Y+6, r27	; 0x06
		aux++;
     e58:	89 81       	ldd	r24, Y+1	; 0x01
     e5a:	9a 81       	ldd	r25, Y+2	; 0x02
     e5c:	01 96       	adiw	r24, 0x01	; 1
     e5e:	9a 83       	std	Y+2, r25	; 0x02
     e60:	89 83       	std	Y+1, r24	; 0x01
}

unsigned long int Analog_Digital::rms(int repeat){
	int aux = 0;
	unsigned long accumulated = 0;
	while(aux < repeat){
     e62:	41 e0       	ldi	r20, 0x01	; 1
     e64:	29 81       	ldd	r18, Y+1	; 0x01
     e66:	3a 81       	ldd	r19, Y+2	; 0x02
     e68:	8b 85       	ldd	r24, Y+11	; 0x0b
     e6a:	9c 85       	ldd	r25, Y+12	; 0x0c
     e6c:	28 17       	cp	r18, r24
     e6e:	39 07       	cpc	r19, r25
     e70:	0c f0       	brlt	.+2      	; 0xe74 <_ZN14Analog_Digital3rmsEi+0x7c>
     e72:	40 e0       	ldi	r20, 0x00	; 0
     e74:	44 23       	and	r20, r20
     e76:	a9 f6       	brne	.-86     	; 0xe22 <_ZN14Analog_Digital3rmsEi+0x2a>
		int digital_value = OCR0A;
		accumulated = digital_value * digital_value;
		aux++;
	}

	return sqrt(accumulated/repeat);
     e78:	8b 85       	ldd	r24, Y+11	; 0x0b
     e7a:	9c 85       	ldd	r25, Y+12	; 0x0c
     e7c:	9c 01       	movw	r18, r24
     e7e:	44 27       	eor	r20, r20
     e80:	37 fd       	sbrc	r19, 7
     e82:	40 95       	com	r20
     e84:	54 2f       	mov	r21, r20
     e86:	8b 81       	ldd	r24, Y+3	; 0x03
     e88:	9c 81       	ldd	r25, Y+4	; 0x04
     e8a:	ad 81       	ldd	r26, Y+5	; 0x05
     e8c:	be 81       	ldd	r27, Y+6	; 0x06
     e8e:	bc 01       	movw	r22, r24
     e90:	cd 01       	movw	r24, r26
     e92:	a0 d3       	rcall	.+1856   	; 0x15d4 <__udivmodsi4>
     e94:	da 01       	movw	r26, r20
     e96:	c9 01       	movw	r24, r18
     e98:	bc 01       	movw	r22, r24
     e9a:	cd 01       	movw	r24, r26
     e9c:	a1 dc       	rcall	.-1726   	; 0x7e0 <__floatunsisf>
     e9e:	dc 01       	movw	r26, r24
     ea0:	cb 01       	movw	r24, r22
     ea2:	bc 01       	movw	r22, r24
     ea4:	cd 01       	movw	r24, r26
     ea6:	f9 d3       	rcall	.+2034   	; 0x169a <sqrt>
     ea8:	dc 01       	movw	r26, r24
     eaa:	cb 01       	movw	r24, r22
     eac:	bc 01       	movw	r22, r24
     eae:	cd 01       	movw	r24, r26
     eb0:	08 d9       	rcall	.-3568   	; 0xc2 <__fixunssfsi>
     eb2:	dc 01       	movw	r26, r24
     eb4:	cb 01       	movw	r24, r22
     eb6:	bc 01       	movw	r22, r24
     eb8:	cd 01       	movw	r24, r26
     eba:	2c 96       	adiw	r28, 0x0c	; 12
     ebc:	0f b6       	in	r0, 0x3f	; 63
}
     ebe:	f8 94       	cli
     ec0:	de bf       	out	0x3e, r29	; 62
     ec2:	0f be       	out	0x3f, r0	; 63
     ec4:	cd bf       	out	0x3d, r28	; 61
     ec6:	cf 91       	pop	r28
     ec8:	df 91       	pop	r29
     eca:	08 95       	ret

00000ecc <_ZN15Circular_BufferILi23EEC1Ev>:
#include <avr/io.h>

template <int SIZE>
class Circular_Buffer {
public:
    Circular_Buffer() : head(0), tail(0) {};
     ecc:	df 93       	push	r29
     ece:	cf 93       	push	r28
     ed0:	00 d0       	rcall	.+0      	; 0xed2 <_ZN15Circular_BufferILi23EEC1Ev+0x6>
     ed2:	cd b7       	in	r28, 0x3d	; 61
     ed4:	de b7       	in	r29, 0x3e	; 62
     ed6:	9a 83       	std	Y+2, r25	; 0x02
     ed8:	89 83       	std	Y+1, r24	; 0x01
     eda:	89 81       	ldd	r24, Y+1	; 0x01
     edc:	9a 81       	ldd	r25, Y+2	; 0x02
     ede:	2a e1       	ldi	r18, 0x1A	; 26
     ee0:	32 e0       	ldi	r19, 0x02	; 2
     ee2:	fc 01       	movw	r30, r24
     ee4:	31 83       	std	Z+1, r19	; 0x01
     ee6:	20 83       	st	Z, r18
     ee8:	89 81       	ldd	r24, Y+1	; 0x01
     eea:	9a 81       	ldd	r25, Y+2	; 0x02
     eec:	fc 01       	movw	r30, r24
     eee:	11 aa       	std	Z+49, r1	; 0x31
     ef0:	10 aa       	std	Z+48, r1	; 0x30
     ef2:	89 81       	ldd	r24, Y+1	; 0x01
     ef4:	9a 81       	ldd	r25, Y+2	; 0x02
     ef6:	fc 01       	movw	r30, r24
     ef8:	13 aa       	std	Z+51, r1	; 0x33
     efa:	12 aa       	std	Z+50, r1	; 0x32
     efc:	0f 90       	pop	r0
     efe:	0f 90       	pop	r0
     f00:	cf 91       	pop	r28
     f02:	df 91       	pop	r29
     f04:	08 95       	ret

00000f06 <_ZN15Circular_BufferILi23EED1Ev>:
	virtual ~Circular_Buffer() {}
     f06:	df 93       	push	r29
     f08:	cf 93       	push	r28
     f0a:	00 d0       	rcall	.+0      	; 0xf0c <_ZN15Circular_BufferILi23EED1Ev+0x6>
     f0c:	cd b7       	in	r28, 0x3d	; 61
     f0e:	de b7       	in	r29, 0x3e	; 62
     f10:	9a 83       	std	Y+2, r25	; 0x02
     f12:	89 83       	std	Y+1, r24	; 0x01
     f14:	89 81       	ldd	r24, Y+1	; 0x01
     f16:	9a 81       	ldd	r25, Y+2	; 0x02
     f18:	2a e1       	ldi	r18, 0x1A	; 26
     f1a:	32 e0       	ldi	r19, 0x02	; 2
     f1c:	fc 01       	movw	r30, r24
     f1e:	31 83       	std	Z+1, r19	; 0x01
     f20:	20 83       	st	Z, r18
     f22:	82 e0       	ldi	r24, 0x02	; 2
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	81 70       	andi	r24, 0x01	; 1
     f28:	90 70       	andi	r25, 0x00	; 0
     f2a:	88 23       	and	r24, r24
     f2c:	19 f0       	breq	.+6      	; 0xf34 <_ZN15Circular_BufferILi23EED1Ev+0x2e>
     f2e:	89 81       	ldd	r24, Y+1	; 0x01
     f30:	9a 81       	ldd	r25, Y+2	; 0x02
     f32:	b3 de       	rcall	.-666    	; 0xc9a <_ZdlPv>
     f34:	0f 90       	pop	r0
     f36:	0f 90       	pop	r0
     f38:	cf 91       	pop	r28
     f3a:	df 91       	pop	r29
     f3c:	08 95       	ret

00000f3e <_ZN15Circular_BufferILi23EED0Ev>:
     f3e:	df 93       	push	r29
     f40:	cf 93       	push	r28
     f42:	00 d0       	rcall	.+0      	; 0xf44 <_ZN15Circular_BufferILi23EED0Ev+0x6>
     f44:	cd b7       	in	r28, 0x3d	; 61
     f46:	de b7       	in	r29, 0x3e	; 62
     f48:	9a 83       	std	Y+2, r25	; 0x02
     f4a:	89 83       	std	Y+1, r24	; 0x01
     f4c:	89 81       	ldd	r24, Y+1	; 0x01
     f4e:	9a 81       	ldd	r25, Y+2	; 0x02
     f50:	da df       	rcall	.-76     	; 0xf06 <_ZN15Circular_BufferILi23EED1Ev>
     f52:	89 81       	ldd	r24, Y+1	; 0x01
     f54:	9a 81       	ldd	r25, Y+2	; 0x02
     f56:	a1 de       	rcall	.-702    	; 0xc9a <_ZdlPv>
     f58:	0f 90       	pop	r0
     f5a:	0f 90       	pop	r0
     f5c:	cf 91       	pop	r28
     f5e:	df 91       	pop	r29
     f60:	08 95       	ret

00000f62 <_ZN15Circular_BufferILi23EE4pushEj>:

	void push(uint16_t data) {
     f62:	df 93       	push	r29
     f64:	cf 93       	push	r28
     f66:	00 d0       	rcall	.+0      	; 0xf68 <_ZN15Circular_BufferILi23EE4pushEj+0x6>
     f68:	00 d0       	rcall	.+0      	; 0xf6a <_ZN15Circular_BufferILi23EE4pushEj+0x8>
     f6a:	cd b7       	in	r28, 0x3d	; 61
     f6c:	de b7       	in	r29, 0x3e	; 62
     f6e:	9a 83       	std	Y+2, r25	; 0x02
     f70:	89 83       	std	Y+1, r24	; 0x01
     f72:	7c 83       	std	Y+4, r23	; 0x04
     f74:	6b 83       	std	Y+3, r22	; 0x03
	    buffer[head++] = data;
     f76:	89 81       	ldd	r24, Y+1	; 0x01
     f78:	9a 81       	ldd	r25, Y+2	; 0x02
     f7a:	fc 01       	movw	r30, r24
     f7c:	80 a9       	ldd	r24, Z+48	; 0x30
     f7e:	91 a9       	ldd	r25, Z+49	; 0x31
     f80:	49 81       	ldd	r20, Y+1	; 0x01
     f82:	5a 81       	ldd	r21, Y+2	; 0x02
     f84:	9c 01       	movw	r18, r24
     f86:	2f 5f       	subi	r18, 0xFF	; 255
     f88:	3f 4f       	sbci	r19, 0xFF	; 255
     f8a:	22 0f       	add	r18, r18
     f8c:	33 1f       	adc	r19, r19
     f8e:	24 0f       	add	r18, r20
     f90:	35 1f       	adc	r19, r21
     f92:	4b 81       	ldd	r20, Y+3	; 0x03
     f94:	5c 81       	ldd	r21, Y+4	; 0x04
     f96:	f9 01       	movw	r30, r18
     f98:	51 83       	std	Z+1, r21	; 0x01
     f9a:	40 83       	st	Z, r20
     f9c:	9c 01       	movw	r18, r24
     f9e:	2f 5f       	subi	r18, 0xFF	; 255
     fa0:	3f 4f       	sbci	r19, 0xFF	; 255
     fa2:	89 81       	ldd	r24, Y+1	; 0x01
     fa4:	9a 81       	ldd	r25, Y+2	; 0x02
     fa6:	fc 01       	movw	r30, r24
     fa8:	31 ab       	std	Z+49, r19	; 0x31
     faa:	20 ab       	std	Z+48, r18	; 0x30
	    if(head == SIZE) head = 0;
     fac:	89 81       	ldd	r24, Y+1	; 0x01
     fae:	9a 81       	ldd	r25, Y+2	; 0x02
     fb0:	fc 01       	movw	r30, r24
     fb2:	80 a9       	ldd	r24, Z+48	; 0x30
     fb4:	91 a9       	ldd	r25, Z+49	; 0x31
     fb6:	87 31       	cpi	r24, 0x17	; 23
     fb8:	91 05       	cpc	r25, r1
     fba:	29 f4       	brne	.+10     	; 0xfc6 <_ZN15Circular_BufferILi23EE4pushEj+0x64>
     fbc:	89 81       	ldd	r24, Y+1	; 0x01
     fbe:	9a 81       	ldd	r25, Y+2	; 0x02
     fc0:	fc 01       	movw	r30, r24
     fc2:	11 aa       	std	Z+49, r1	; 0x31
     fc4:	10 aa       	std	Z+48, r1	; 0x30
	}
     fc6:	0f 90       	pop	r0
     fc8:	0f 90       	pop	r0
     fca:	0f 90       	pop	r0
     fcc:	0f 90       	pop	r0
     fce:	cf 91       	pop	r28
     fd0:	df 91       	pop	r29
     fd2:	08 95       	ret

00000fd4 <_Z41__static_initialization_and_destruction_0ii>:
     fd4:	df 93       	push	r29
     fd6:	cf 93       	push	r28
     fd8:	00 d0       	rcall	.+0      	; 0xfda <_Z41__static_initialization_and_destruction_0ii+0x6>
     fda:	00 d0       	rcall	.+0      	; 0xfdc <_Z41__static_initialization_and_destruction_0ii+0x8>
     fdc:	cd b7       	in	r28, 0x3d	; 61
     fde:	de b7       	in	r29, 0x3e	; 62
     fe0:	9a 83       	std	Y+2, r25	; 0x02
     fe2:	89 83       	std	Y+1, r24	; 0x01
     fe4:	7c 83       	std	Y+4, r23	; 0x04
     fe6:	6b 83       	std	Y+3, r22	; 0x03
     fe8:	89 81       	ldd	r24, Y+1	; 0x01
     fea:	9a 81       	ldd	r25, Y+2	; 0x02
     fec:	81 30       	cpi	r24, 0x01	; 1
     fee:	91 05       	cpc	r25, r1
     ff0:	49 f4       	brne	.+18     	; 0x1004 <_Z41__static_initialization_and_destruction_0ii+0x30>
     ff2:	8b 81       	ldd	r24, Y+3	; 0x03
     ff4:	9c 81       	ldd	r25, Y+4	; 0x04
     ff6:	2f ef       	ldi	r18, 0xFF	; 255
     ff8:	8f 3f       	cpi	r24, 0xFF	; 255
     ffa:	92 07       	cpc	r25, r18
     ffc:	19 f4       	brne	.+6      	; 0x1004 <_Z41__static_initialization_and_destruction_0ii+0x30>
#include "avr/interrupt.h"
#include "math.h"
#include "stdlib.h"
#include "Uart.h"

Analog_Digital Analog_Digital::adc;
     ffe:	86 e2       	ldi	r24, 0x26	; 38
    1000:	92 e0       	ldi	r25, 0x02	; 2
    1002:	5a de       	rcall	.-844    	; 0xcb8 <_ZN14Analog_DigitalC1Ev>
    1004:	89 81       	ldd	r24, Y+1	; 0x01
    1006:	9a 81       	ldd	r25, Y+2	; 0x02
    1008:	00 97       	sbiw	r24, 0x00	; 0
    100a:	49 f4       	brne	.+18     	; 0x101e <_Z41__static_initialization_and_destruction_0ii+0x4a>
    100c:	8b 81       	ldd	r24, Y+3	; 0x03
    100e:	9c 81       	ldd	r25, Y+4	; 0x04
    1010:	2f ef       	ldi	r18, 0xFF	; 255
    1012:	8f 3f       	cpi	r24, 0xFF	; 255
    1014:	92 07       	cpc	r25, r18
    1016:	19 f4       	brne	.+6      	; 0x101e <_Z41__static_initialization_and_destruction_0ii+0x4a>
    1018:	86 e2       	ldi	r24, 0x26	; 38
    101a:	92 e0       	ldi	r25, 0x02	; 2
    101c:	72 de       	rcall	.-796    	; 0xd02 <_ZN14Analog_DigitalD1Ev>
    101e:	0f 90       	pop	r0
    1020:	0f 90       	pop	r0
		accumulated = digital_value * digital_value;
		aux++;
	}

	return sqrt(accumulated/repeat);
}
    1022:	0f 90       	pop	r0
    1024:	0f 90       	pop	r0
    1026:	cf 91       	pop	r28
    1028:	df 91       	pop	r29
    102a:	08 95       	ret

0000102c <_GLOBAL__I__ZN14Analog_Digital3adcE>:
    102c:	df 93       	push	r29
    102e:	cf 93       	push	r28
    1030:	cd b7       	in	r28, 0x3d	; 61
    1032:	de b7       	in	r29, 0x3e	; 62
    1034:	81 e0       	ldi	r24, 0x01	; 1
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	6f ef       	ldi	r22, 0xFF	; 255
    103a:	7f ef       	ldi	r23, 0xFF	; 255
    103c:	cb df       	rcall	.-106    	; 0xfd4 <_Z41__static_initialization_and_destruction_0ii>
    103e:	cf 91       	pop	r28
    1040:	df 91       	pop	r29
    1042:	08 95       	ret

00001044 <_GLOBAL__D__ZN14Analog_Digital3adcE>:
    1044:	df 93       	push	r29
    1046:	cf 93       	push	r28
    1048:	cd b7       	in	r28, 0x3d	; 61
    104a:	de b7       	in	r29, 0x3e	; 62
    104c:	80 e0       	ldi	r24, 0x00	; 0
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	6f ef       	ldi	r22, 0xFF	; 255
    1052:	7f ef       	ldi	r23, 0xFF	; 255
    1054:	bf df       	rcall	.-130    	; 0xfd4 <_Z41__static_initialization_and_destruction_0ii>
    1056:	cf 91       	pop	r28
    1058:	df 91       	pop	r29
    105a:	08 95       	ret

0000105c <_ZN4UartC1Ev>:
#define F_CPU 16000000UL
#define BAUD 9600
#include "util/setbaud.h"
Uart Uart::uart;

Uart::Uart(){
    105c:	df 93       	push	r29
    105e:	cf 93       	push	r28
    1060:	00 d0       	rcall	.+0      	; 0x1062 <_ZN4UartC1Ev+0x6>
    1062:	cd b7       	in	r28, 0x3d	; 61
    1064:	de b7       	in	r29, 0x3e	; 62
    1066:	9a 83       	std	Y+2, r25	; 0x02
    1068:	89 83       	std	Y+1, r24	; 0x01
    106a:	89 81       	ldd	r24, Y+1	; 0x01
    106c:	9a 81       	ldd	r25, Y+2	; 0x02
    106e:	c0 d0       	rcall	.+384    	; 0x11f0 <_ZN15Circular_BufferILi73EEC1Ev>
    1070:	89 81       	ldd	r24, Y+1	; 0x01
    1072:	9a 81       	ldd	r25, Y+2	; 0x02
    1074:	88 56       	subi	r24, 0x68	; 104
    1076:	9f 4f       	sbci	r25, 0xFF	; 255
    1078:	bb d0       	rcall	.+374    	; 0x11f0 <_ZN15Circular_BufferILi73EEC1Ev>
    107a:	85 ec       	ldi	r24, 0xC5	; 197
    107c:	90 e0       	ldi	r25, 0x00	; 0
	//SERIAL
	UBRR0H = UBRRH_VALUE;
    107e:	fc 01       	movw	r30, r24
    1080:	10 82       	st	Z, r1
    1082:	84 ec       	ldi	r24, 0xC4	; 196
    1084:	90 e0       	ldi	r25, 0x00	; 0
	UBRR0L = UBRRL_VALUE;
    1086:	27 e6       	ldi	r18, 0x67	; 103
    1088:	fc 01       	movw	r30, r24
    108a:	20 83       	st	Z, r18
    108c:	82 ec       	ldi	r24, 0xC2	; 194
    108e:	90 e0       	ldi	r25, 0x00	; 0
	UCSR0C = 0x06;
    1090:	26 e0       	ldi	r18, 0x06	; 6
    1092:	fc 01       	movw	r30, r24
    1094:	20 83       	st	Z, r18
    1096:	81 ec       	ldi	r24, 0xC1	; 193
    1098:	90 e0       	ldi	r25, 0x00	; 0
	UCSR0B = 0x98;
    109a:	28 e9       	ldi	r18, 0x98	; 152
    109c:	fc 01       	movw	r30, r24
    109e:	20 83       	st	Z, r18
    10a0:	0f 90       	pop	r0
    10a2:	0f 90       	pop	r0
	//LED
	//PINB = 0x23;
	//DDRB = 0x24;
	//PORTB = 0x80;
}
    10a4:	cf 91       	pop	r28
    10a6:	df 91       	pop	r29
    10a8:	08 95       	ret

000010aa <_ZN4Uart3putEh>:

void Uart::put(uint8_t c) {
    10aa:	df 93       	push	r29
    10ac:	cf 93       	push	r28
    10ae:	00 d0       	rcall	.+0      	; 0x10b0 <_ZN4Uart3putEh+0x6>
    10b0:	0f 92       	push	r0
    10b2:	cd b7       	in	r28, 0x3d	; 61
    10b4:	de b7       	in	r29, 0x3e	; 62
    10b6:	9a 83       	std	Y+2, r25	; 0x02
    10b8:	89 83       	std	Y+1, r24	; 0x01
    10ba:	6b 83       	std	Y+3, r22	; 0x03
    uart.tx.push(c);
    10bc:	8b 81       	ldd	r24, Y+3	; 0x03
    10be:	28 2f       	mov	r18, r24
    10c0:	30 e0       	ldi	r19, 0x00	; 0
    10c2:	84 ef       	ldi	r24, 0xF4	; 244
    10c4:	92 e0       	ldi	r25, 0x02	; 2
    10c6:	b9 01       	movw	r22, r18
    10c8:	e2 d0       	rcall	.+452    	; 0x128e <_ZN15Circular_BufferILi73EE4pushEj>
    10ca:	81 ec       	ldi	r24, 0xC1	; 193
    UCSR0B |= 0x20;
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	21 ec       	ldi	r18, 0xC1	; 193
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	f9 01       	movw	r30, r18
    10d4:	20 81       	ld	r18, Z
    10d6:	20 62       	ori	r18, 0x20	; 32
    10d8:	fc 01       	movw	r30, r24
    10da:	20 83       	st	Z, r18
    10dc:	0f 90       	pop	r0
}
    10de:	0f 90       	pop	r0
    10e0:	0f 90       	pop	r0
    10e2:	cf 91       	pop	r28
    10e4:	df 91       	pop	r29
    10e6:	08 95       	ret

000010e8 <_ZN4Uart20rx_interrupt_handlerEv>:

bool Uart::has_data() {
    return uart.rx.has_data();
}

void Uart::rx_interrupt_handler() {
    10e8:	df 93       	push	r29
    10ea:	cf 93       	push	r28
    10ec:	cd b7       	in	r28, 0x3d	; 61
    10ee:	de b7       	in	r29, 0x3e	; 62
    uart.rx.push(UDR0);
    10f0:	86 ec       	ldi	r24, 0xC6	; 198
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	fc 01       	movw	r30, r24
    10f6:	80 81       	ld	r24, Z
    10f8:	28 2f       	mov	r18, r24
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	8c e5       	ldi	r24, 0x5C	; 92
    10fe:	92 e0       	ldi	r25, 0x02	; 2
    1100:	b9 01       	movw	r22, r18
    1102:	c5 d0       	rcall	.+394    	; 0x128e <_ZN15Circular_BufferILi73EE4pushEj>
    1104:	cf 91       	pop	r28
	//TEST
//	PORTB &= ~_BV(PORTB5);	//LIGA LED
//	PORTB |= _BV(PORTB5);	//DESLIGA LED
}
    1106:	df 91       	pop	r29
    1108:	08 95       	ret

0000110a <_ZN4Uart23empty_interrupt_handlerEv>:

void Uart::empty_interrupt_handler(){
    110a:	0f 93       	push	r16
    110c:	1f 93       	push	r17
    110e:	df 93       	push	r29
    1110:	cf 93       	push	r28
    1112:	cd b7       	in	r28, 0x3d	; 61
    1114:	de b7       	in	r29, 0x3e	; 62
	//TEST
//	PORTB &= ~_BV(PORTB5);	//LIGA LED
//	PORTB |= _BV(PORTB5);	//DESLIGA LED
    if(uart.tx.has_data())
    1116:	84 ef       	ldi	r24, 0xF4	; 244
    1118:	92 e0       	ldi	r25, 0x02	; 2
    111a:	3b d1       	rcall	.+630    	; 0x1392 <_ZN15Circular_BufferILi73EE8has_dataEv>
    111c:	88 23       	and	r24, r24
    111e:	41 f0       	breq	.+16     	; 0x1130 <_ZN4Uart23empty_interrupt_handlerEv+0x26>
    1120:	06 ec       	ldi	r16, 0xC6	; 198
        UDR0 = uart.tx.pop();
    1122:	10 e0       	ldi	r17, 0x00	; 0
    1124:	84 ef       	ldi	r24, 0xF4	; 244
    1126:	92 e0       	ldi	r25, 0x02	; 2
    1128:	f3 d0       	rcall	.+486    	; 0x1310 <_ZN15Circular_BufferILi73EE3popEv>
    112a:	f8 01       	movw	r30, r16
    112c:	80 83       	st	Z, r24
    112e:	09 c0       	rjmp	.+18     	; 0x1142 <_ZN4Uart23empty_interrupt_handlerEv+0x38>
    1130:	81 ec       	ldi	r24, 0xC1	; 193
    1132:	90 e0       	ldi	r25, 0x00	; 0
    else UCSR0B &= ~0x20;
    1134:	21 ec       	ldi	r18, 0xC1	; 193
    1136:	30 e0       	ldi	r19, 0x00	; 0
    1138:	f9 01       	movw	r30, r18
    113a:	20 81       	ld	r18, Z
    113c:	2f 7d       	andi	r18, 0xDF	; 223
    113e:	fc 01       	movw	r30, r24
    1140:	20 83       	st	Z, r18
    1142:	cf 91       	pop	r28
    1144:	df 91       	pop	r29
}
    1146:	1f 91       	pop	r17
    1148:	0f 91       	pop	r16
    114a:	08 95       	ret

0000114c <__vector_18>:

ISR(USART_RX_vect ){
    114c:	1f 92       	push	r1
    114e:	0f 92       	push	r0
    1150:	0f b6       	in	r0, 0x3f	; 63
    1152:	0f 92       	push	r0
    1154:	11 24       	eor	r1, r1
    1156:	2f 93       	push	r18
    1158:	3f 93       	push	r19
    115a:	4f 93       	push	r20
    115c:	5f 93       	push	r21
    115e:	6f 93       	push	r22
    1160:	7f 93       	push	r23
    1162:	8f 93       	push	r24
    1164:	9f 93       	push	r25
    1166:	af 93       	push	r26
    1168:	bf 93       	push	r27
    116a:	ef 93       	push	r30
    116c:	ff 93       	push	r31
    116e:	df 93       	push	r29
    1170:	cf 93       	push	r28
    1172:	cd b7       	in	r28, 0x3d	; 61
    1174:	de b7       	in	r29, 0x3e	; 62
	Uart::rx_interrupt_handler();
    1176:	b8 df       	rcall	.-144    	; 0x10e8 <_ZN4Uart20rx_interrupt_handlerEv>
    1178:	cf 91       	pop	r28
}
    117a:	df 91       	pop	r29
    117c:	ff 91       	pop	r31
    117e:	ef 91       	pop	r30
    1180:	bf 91       	pop	r27
    1182:	af 91       	pop	r26
    1184:	9f 91       	pop	r25
    1186:	8f 91       	pop	r24
    1188:	7f 91       	pop	r23
    118a:	6f 91       	pop	r22
    118c:	5f 91       	pop	r21
    118e:	4f 91       	pop	r20
    1190:	3f 91       	pop	r19
    1192:	2f 91       	pop	r18
    1194:	0f 90       	pop	r0
    1196:	0f be       	out	0x3f, r0	; 63
    1198:	0f 90       	pop	r0
    119a:	1f 90       	pop	r1
    119c:	18 95       	reti

0000119e <__vector_19>:

ISR(USART_UDRE_vect ){
    119e:	1f 92       	push	r1
    11a0:	0f 92       	push	r0
    11a2:	0f b6       	in	r0, 0x3f	; 63
    11a4:	0f 92       	push	r0
    11a6:	11 24       	eor	r1, r1
    11a8:	2f 93       	push	r18
    11aa:	3f 93       	push	r19
    11ac:	4f 93       	push	r20
    11ae:	5f 93       	push	r21
    11b0:	6f 93       	push	r22
    11b2:	7f 93       	push	r23
    11b4:	8f 93       	push	r24
    11b6:	9f 93       	push	r25
    11b8:	af 93       	push	r26
    11ba:	bf 93       	push	r27
    11bc:	ef 93       	push	r30
    11be:	ff 93       	push	r31
    11c0:	df 93       	push	r29
    11c2:	cf 93       	push	r28
    11c4:	cd b7       	in	r28, 0x3d	; 61
    11c6:	de b7       	in	r29, 0x3e	; 62
	Uart::empty_interrupt_handler();
    11c8:	a0 df       	rcall	.-192    	; 0x110a <_ZN4Uart23empty_interrupt_handlerEv>
    11ca:	cf 91       	pop	r28
}
    11cc:	df 91       	pop	r29
    11ce:	ff 91       	pop	r31
    11d0:	ef 91       	pop	r30
    11d2:	bf 91       	pop	r27
    11d4:	af 91       	pop	r26
    11d6:	9f 91       	pop	r25
    11d8:	8f 91       	pop	r24
    11da:	7f 91       	pop	r23
    11dc:	6f 91       	pop	r22
    11de:	5f 91       	pop	r21
    11e0:	4f 91       	pop	r20
    11e2:	3f 91       	pop	r19
    11e4:	2f 91       	pop	r18
    11e6:	0f 90       	pop	r0
    11e8:	0f be       	out	0x3f, r0	; 63
    11ea:	0f 90       	pop	r0
    11ec:	1f 90       	pop	r1
    11ee:	18 95       	reti

000011f0 <_ZN15Circular_BufferILi73EEC1Ev>:
#include <avr/io.h>

template <int SIZE>
class Circular_Buffer {
public:
    Circular_Buffer() : head(0), tail(0) {};
    11f0:	df 93       	push	r29
    11f2:	cf 93       	push	r28
    11f4:	00 d0       	rcall	.+0      	; 0x11f6 <_ZN15Circular_BufferILi73EEC1Ev+0x6>
    11f6:	cd b7       	in	r28, 0x3d	; 61
    11f8:	de b7       	in	r29, 0x3e	; 62
    11fa:	9a 83       	std	Y+2, r25	; 0x02
    11fc:	89 83       	std	Y+1, r24	; 0x01
    11fe:	89 81       	ldd	r24, Y+1	; 0x01
    1200:	9a 81       	ldd	r25, Y+2	; 0x02
    1202:	22 e2       	ldi	r18, 0x22	; 34
    1204:	32 e0       	ldi	r19, 0x02	; 2
    1206:	fc 01       	movw	r30, r24
    1208:	31 83       	std	Z+1, r19	; 0x01
    120a:	20 83       	st	Z, r18
    120c:	89 81       	ldd	r24, Y+1	; 0x01
    120e:	9a 81       	ldd	r25, Y+2	; 0x02
    1210:	8c 56       	subi	r24, 0x6C	; 108
    1212:	9f 4f       	sbci	r25, 0xFF	; 255
    1214:	fc 01       	movw	r30, r24
    1216:	11 82       	std	Z+1, r1	; 0x01
    1218:	10 82       	st	Z, r1
    121a:	89 81       	ldd	r24, Y+1	; 0x01
    121c:	9a 81       	ldd	r25, Y+2	; 0x02
    121e:	8a 56       	subi	r24, 0x6A	; 106
    1220:	9f 4f       	sbci	r25, 0xFF	; 255
    1222:	fc 01       	movw	r30, r24
    1224:	11 82       	std	Z+1, r1	; 0x01
    1226:	10 82       	st	Z, r1
    1228:	0f 90       	pop	r0
    122a:	0f 90       	pop	r0
    122c:	cf 91       	pop	r28
    122e:	df 91       	pop	r29
    1230:	08 95       	ret

00001232 <_ZN15Circular_BufferILi73EED1Ev>:
	virtual ~Circular_Buffer() {}
    1232:	df 93       	push	r29
    1234:	cf 93       	push	r28
    1236:	00 d0       	rcall	.+0      	; 0x1238 <_ZN15Circular_BufferILi73EED1Ev+0x6>
    1238:	cd b7       	in	r28, 0x3d	; 61
    123a:	de b7       	in	r29, 0x3e	; 62
    123c:	9a 83       	std	Y+2, r25	; 0x02
    123e:	89 83       	std	Y+1, r24	; 0x01
    1240:	89 81       	ldd	r24, Y+1	; 0x01
    1242:	9a 81       	ldd	r25, Y+2	; 0x02
    1244:	22 e2       	ldi	r18, 0x22	; 34
    1246:	32 e0       	ldi	r19, 0x02	; 2
    1248:	fc 01       	movw	r30, r24
    124a:	31 83       	std	Z+1, r19	; 0x01
    124c:	20 83       	st	Z, r18
    124e:	82 e0       	ldi	r24, 0x02	; 2
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	81 70       	andi	r24, 0x01	; 1
    1254:	90 70       	andi	r25, 0x00	; 0
    1256:	88 23       	and	r24, r24
    1258:	19 f0       	breq	.+6      	; 0x1260 <_ZN15Circular_BufferILi73EED1Ev+0x2e>
    125a:	89 81       	ldd	r24, Y+1	; 0x01
    125c:	9a 81       	ldd	r25, Y+2	; 0x02
    125e:	1d dd       	rcall	.-1478   	; 0xc9a <_ZdlPv>
    1260:	0f 90       	pop	r0
    1262:	0f 90       	pop	r0
    1264:	cf 91       	pop	r28
    1266:	df 91       	pop	r29
    1268:	08 95       	ret

0000126a <_ZN15Circular_BufferILi73EED0Ev>:
    126a:	df 93       	push	r29
    126c:	cf 93       	push	r28
    126e:	00 d0       	rcall	.+0      	; 0x1270 <_ZN15Circular_BufferILi73EED0Ev+0x6>
    1270:	cd b7       	in	r28, 0x3d	; 61
    1272:	de b7       	in	r29, 0x3e	; 62
    1274:	9a 83       	std	Y+2, r25	; 0x02
    1276:	89 83       	std	Y+1, r24	; 0x01
    1278:	89 81       	ldd	r24, Y+1	; 0x01
    127a:	9a 81       	ldd	r25, Y+2	; 0x02
    127c:	da df       	rcall	.-76     	; 0x1232 <_ZN15Circular_BufferILi73EED1Ev>
    127e:	89 81       	ldd	r24, Y+1	; 0x01
    1280:	9a 81       	ldd	r25, Y+2	; 0x02
    1282:	0b dd       	rcall	.-1514   	; 0xc9a <_ZdlPv>
    1284:	0f 90       	pop	r0
    1286:	0f 90       	pop	r0
    1288:	cf 91       	pop	r28
    128a:	df 91       	pop	r29
    128c:	08 95       	ret

0000128e <_ZN15Circular_BufferILi73EE4pushEj>:

	void push(uint16_t data) {
    128e:	df 93       	push	r29
    1290:	cf 93       	push	r28
    1292:	00 d0       	rcall	.+0      	; 0x1294 <_ZN15Circular_BufferILi73EE4pushEj+0x6>
    1294:	00 d0       	rcall	.+0      	; 0x1296 <_ZN15Circular_BufferILi73EE4pushEj+0x8>
    1296:	cd b7       	in	r28, 0x3d	; 61
    1298:	de b7       	in	r29, 0x3e	; 62
    129a:	9a 83       	std	Y+2, r25	; 0x02
    129c:	89 83       	std	Y+1, r24	; 0x01
    129e:	7c 83       	std	Y+4, r23	; 0x04
    12a0:	6b 83       	std	Y+3, r22	; 0x03
	    buffer[head++] = data;
    12a2:	89 81       	ldd	r24, Y+1	; 0x01
    12a4:	9a 81       	ldd	r25, Y+2	; 0x02
    12a6:	8c 56       	subi	r24, 0x6C	; 108
    12a8:	9f 4f       	sbci	r25, 0xFF	; 255
    12aa:	fc 01       	movw	r30, r24
    12ac:	80 81       	ld	r24, Z
    12ae:	91 81       	ldd	r25, Z+1	; 0x01
    12b0:	49 81       	ldd	r20, Y+1	; 0x01
    12b2:	5a 81       	ldd	r21, Y+2	; 0x02
    12b4:	9c 01       	movw	r18, r24
    12b6:	2f 5f       	subi	r18, 0xFF	; 255
    12b8:	3f 4f       	sbci	r19, 0xFF	; 255
    12ba:	22 0f       	add	r18, r18
    12bc:	33 1f       	adc	r19, r19
    12be:	24 0f       	add	r18, r20
    12c0:	35 1f       	adc	r19, r21
    12c2:	4b 81       	ldd	r20, Y+3	; 0x03
    12c4:	5c 81       	ldd	r21, Y+4	; 0x04
    12c6:	f9 01       	movw	r30, r18
    12c8:	51 83       	std	Z+1, r21	; 0x01
    12ca:	40 83       	st	Z, r20
    12cc:	9c 01       	movw	r18, r24
    12ce:	2f 5f       	subi	r18, 0xFF	; 255
    12d0:	3f 4f       	sbci	r19, 0xFF	; 255
    12d2:	89 81       	ldd	r24, Y+1	; 0x01
    12d4:	9a 81       	ldd	r25, Y+2	; 0x02
    12d6:	8c 56       	subi	r24, 0x6C	; 108
    12d8:	9f 4f       	sbci	r25, 0xFF	; 255
    12da:	fc 01       	movw	r30, r24
    12dc:	31 83       	std	Z+1, r19	; 0x01
    12de:	20 83       	st	Z, r18
	    if(head == SIZE) head = 0;
    12e0:	89 81       	ldd	r24, Y+1	; 0x01
    12e2:	9a 81       	ldd	r25, Y+2	; 0x02
    12e4:	8c 56       	subi	r24, 0x6C	; 108
    12e6:	9f 4f       	sbci	r25, 0xFF	; 255
    12e8:	fc 01       	movw	r30, r24
    12ea:	80 81       	ld	r24, Z
    12ec:	91 81       	ldd	r25, Z+1	; 0x01
    12ee:	89 34       	cpi	r24, 0x49	; 73
    12f0:	91 05       	cpc	r25, r1
    12f2:	39 f4       	brne	.+14     	; 0x1302 <_ZN15Circular_BufferILi73EE4pushEj+0x74>
    12f4:	89 81       	ldd	r24, Y+1	; 0x01
    12f6:	9a 81       	ldd	r25, Y+2	; 0x02
    12f8:	8c 56       	subi	r24, 0x6C	; 108
    12fa:	9f 4f       	sbci	r25, 0xFF	; 255
    12fc:	fc 01       	movw	r30, r24
    12fe:	11 82       	std	Z+1, r1	; 0x01
    1300:	10 82       	st	Z, r1
	}
    1302:	0f 90       	pop	r0
    1304:	0f 90       	pop	r0
    1306:	0f 90       	pop	r0
    1308:	0f 90       	pop	r0
    130a:	cf 91       	pop	r28
    130c:	df 91       	pop	r29
    130e:	08 95       	ret

00001310 <_ZN15Circular_BufferILi73EE3popEv>:

	uint16_t pop() {
    1310:	df 93       	push	r29
    1312:	cf 93       	push	r28
    1314:	00 d0       	rcall	.+0      	; 0x1316 <_ZN15Circular_BufferILi73EE3popEv+0x6>
    1316:	00 d0       	rcall	.+0      	; 0x1318 <_ZN15Circular_BufferILi73EE3popEv+0x8>
    1318:	cd b7       	in	r28, 0x3d	; 61
    131a:	de b7       	in	r29, 0x3e	; 62
    131c:	9c 83       	std	Y+4, r25	; 0x04
    131e:	8b 83       	std	Y+3, r24	; 0x03
	    uint16_t ret = buffer[tail++];
    1320:	8b 81       	ldd	r24, Y+3	; 0x03
    1322:	9c 81       	ldd	r25, Y+4	; 0x04
    1324:	8a 56       	subi	r24, 0x6A	; 106
    1326:	9f 4f       	sbci	r25, 0xFF	; 255
    1328:	fc 01       	movw	r30, r24
    132a:	80 81       	ld	r24, Z
    132c:	91 81       	ldd	r25, Z+1	; 0x01
    132e:	4b 81       	ldd	r20, Y+3	; 0x03
    1330:	5c 81       	ldd	r21, Y+4	; 0x04
    1332:	9c 01       	movw	r18, r24
    1334:	2f 5f       	subi	r18, 0xFF	; 255
    1336:	3f 4f       	sbci	r19, 0xFF	; 255
    1338:	22 0f       	add	r18, r18
    133a:	33 1f       	adc	r19, r19
    133c:	24 0f       	add	r18, r20
    133e:	35 1f       	adc	r19, r21
    1340:	f9 01       	movw	r30, r18
    1342:	20 81       	ld	r18, Z
    1344:	31 81       	ldd	r19, Z+1	; 0x01
    1346:	3a 83       	std	Y+2, r19	; 0x02
    1348:	29 83       	std	Y+1, r18	; 0x01
    134a:	9c 01       	movw	r18, r24
    134c:	2f 5f       	subi	r18, 0xFF	; 255
    134e:	3f 4f       	sbci	r19, 0xFF	; 255
    1350:	8b 81       	ldd	r24, Y+3	; 0x03
    1352:	9c 81       	ldd	r25, Y+4	; 0x04
    1354:	8a 56       	subi	r24, 0x6A	; 106
    1356:	9f 4f       	sbci	r25, 0xFF	; 255
    1358:	fc 01       	movw	r30, r24
    135a:	31 83       	std	Z+1, r19	; 0x01
    135c:	20 83       	st	Z, r18
	    if(tail == SIZE) tail = 0;
    135e:	8b 81       	ldd	r24, Y+3	; 0x03
    1360:	9c 81       	ldd	r25, Y+4	; 0x04
    1362:	8a 56       	subi	r24, 0x6A	; 106
    1364:	9f 4f       	sbci	r25, 0xFF	; 255
    1366:	fc 01       	movw	r30, r24
    1368:	80 81       	ld	r24, Z
    136a:	91 81       	ldd	r25, Z+1	; 0x01
    136c:	89 34       	cpi	r24, 0x49	; 73
    136e:	91 05       	cpc	r25, r1
    1370:	39 f4       	brne	.+14     	; 0x1380 <_ZN15Circular_BufferILi73EE3popEv+0x70>
    1372:	8b 81       	ldd	r24, Y+3	; 0x03
    1374:	9c 81       	ldd	r25, Y+4	; 0x04
    1376:	8a 56       	subi	r24, 0x6A	; 106
    1378:	9f 4f       	sbci	r25, 0xFF	; 255
    137a:	fc 01       	movw	r30, r24
    137c:	11 82       	std	Z+1, r1	; 0x01
    137e:	10 82       	st	Z, r1
	    return ret;
    1380:	89 81       	ldd	r24, Y+1	; 0x01
    1382:	9a 81       	ldd	r25, Y+2	; 0x02
	}
    1384:	0f 90       	pop	r0
    1386:	0f 90       	pop	r0
    1388:	0f 90       	pop	r0
    138a:	0f 90       	pop	r0
    138c:	cf 91       	pop	r28
    138e:	df 91       	pop	r29
    1390:	08 95       	ret

00001392 <_ZN15Circular_BufferILi73EE8has_dataEv>:

	bool has_data() { return head != tail; }
    1392:	df 93       	push	r29
    1394:	cf 93       	push	r28
    1396:	00 d0       	rcall	.+0      	; 0x1398 <_ZN15Circular_BufferILi73EE8has_dataEv+0x6>
    1398:	cd b7       	in	r28, 0x3d	; 61
    139a:	de b7       	in	r29, 0x3e	; 62
    139c:	9a 83       	std	Y+2, r25	; 0x02
    139e:	89 83       	std	Y+1, r24	; 0x01
    13a0:	89 81       	ldd	r24, Y+1	; 0x01
    13a2:	9a 81       	ldd	r25, Y+2	; 0x02
    13a4:	8c 56       	subi	r24, 0x6C	; 108
    13a6:	9f 4f       	sbci	r25, 0xFF	; 255
    13a8:	fc 01       	movw	r30, r24
    13aa:	20 81       	ld	r18, Z
    13ac:	31 81       	ldd	r19, Z+1	; 0x01
    13ae:	89 81       	ldd	r24, Y+1	; 0x01
    13b0:	9a 81       	ldd	r25, Y+2	; 0x02
    13b2:	8a 56       	subi	r24, 0x6A	; 106
    13b4:	9f 4f       	sbci	r25, 0xFF	; 255
    13b6:	fc 01       	movw	r30, r24
    13b8:	80 81       	ld	r24, Z
    13ba:	91 81       	ldd	r25, Z+1	; 0x01
    13bc:	41 e0       	ldi	r20, 0x01	; 1
    13be:	28 17       	cp	r18, r24
    13c0:	39 07       	cpc	r19, r25
    13c2:	09 f4       	brne	.+2      	; 0x13c6 <_ZN15Circular_BufferILi73EE8has_dataEv+0x34>
    13c4:	40 e0       	ldi	r20, 0x00	; 0
    13c6:	84 2f       	mov	r24, r20
    13c8:	0f 90       	pop	r0
    13ca:	0f 90       	pop	r0
    13cc:	cf 91       	pop	r28
    13ce:	df 91       	pop	r29
    13d0:	08 95       	ret

000013d2 <_ZN4UartD1Ev>:
#ifndef UART_H_
#define UART_H_

#include "Circular_Buffer.h"

class Uart {
    13d2:	df 93       	push	r29
    13d4:	cf 93       	push	r28
    13d6:	00 d0       	rcall	.+0      	; 0x13d8 <_ZN4UartD1Ev+0x6>
    13d8:	cd b7       	in	r28, 0x3d	; 61
    13da:	de b7       	in	r29, 0x3e	; 62
    13dc:	9a 83       	std	Y+2, r25	; 0x02
    13de:	89 83       	std	Y+1, r24	; 0x01
    13e0:	89 81       	ldd	r24, Y+1	; 0x01
    13e2:	9a 81       	ldd	r25, Y+2	; 0x02
    13e4:	88 56       	subi	r24, 0x68	; 104
    13e6:	9f 4f       	sbci	r25, 0xFF	; 255
    13e8:	24 df       	rcall	.-440    	; 0x1232 <_ZN15Circular_BufferILi73EED1Ev>
    13ea:	89 81       	ldd	r24, Y+1	; 0x01
    13ec:	9a 81       	ldd	r25, Y+2	; 0x02
    13ee:	21 df       	rcall	.-446    	; 0x1232 <_ZN15Circular_BufferILi73EED1Ev>
    13f0:	0f 90       	pop	r0
    13f2:	0f 90       	pop	r0
    13f4:	cf 91       	pop	r28
    13f6:	df 91       	pop	r29
    13f8:	08 95       	ret

000013fa <_Z41__static_initialization_and_destruction_0ii>:
	sei();
}

void Uart::interruptoff(){
	cli();
}
    13fa:	df 93       	push	r29
    13fc:	cf 93       	push	r28
    13fe:	00 d0       	rcall	.+0      	; 0x1400 <_Z41__static_initialization_and_destruction_0ii+0x6>
    1400:	00 d0       	rcall	.+0      	; 0x1402 <_Z41__static_initialization_and_destruction_0ii+0x8>
    1402:	cd b7       	in	r28, 0x3d	; 61
    1404:	de b7       	in	r29, 0x3e	; 62
    1406:	9a 83       	std	Y+2, r25	; 0x02
    1408:	89 83       	std	Y+1, r24	; 0x01
    140a:	7c 83       	std	Y+4, r23	; 0x04
    140c:	6b 83       	std	Y+3, r22	; 0x03
    140e:	89 81       	ldd	r24, Y+1	; 0x01
    1410:	9a 81       	ldd	r25, Y+2	; 0x02
    1412:	81 30       	cpi	r24, 0x01	; 1
    1414:	91 05       	cpc	r25, r1
    1416:	49 f4       	brne	.+18     	; 0x142a <_Z41__static_initialization_and_destruction_0ii+0x30>
    1418:	8b 81       	ldd	r24, Y+3	; 0x03
    141a:	9c 81       	ldd	r25, Y+4	; 0x04
    141c:	2f ef       	ldi	r18, 0xFF	; 255
    141e:	8f 3f       	cpi	r24, 0xFF	; 255
    1420:	92 07       	cpc	r25, r18
    1422:	19 f4       	brne	.+6      	; 0x142a <_Z41__static_initialization_and_destruction_0ii+0x30>
#include "avr/io.h"
#include "avr/interrupt.h"
#define F_CPU 16000000UL
#define BAUD 9600
#include "util/setbaud.h"
Uart Uart::uart;
    1424:	8c e5       	ldi	r24, 0x5C	; 92
    1426:	92 e0       	ldi	r25, 0x02	; 2
    1428:	19 de       	rcall	.-974    	; 0x105c <_ZN4UartC1Ev>
    142a:	89 81       	ldd	r24, Y+1	; 0x01
    142c:	9a 81       	ldd	r25, Y+2	; 0x02
    142e:	00 97       	sbiw	r24, 0x00	; 0
    1430:	49 f4       	brne	.+18     	; 0x1444 <_Z41__static_initialization_and_destruction_0ii+0x4a>
    1432:	8b 81       	ldd	r24, Y+3	; 0x03
    1434:	9c 81       	ldd	r25, Y+4	; 0x04
    1436:	2f ef       	ldi	r18, 0xFF	; 255
    1438:	8f 3f       	cpi	r24, 0xFF	; 255
    143a:	92 07       	cpc	r25, r18
    143c:	19 f4       	brne	.+6      	; 0x1444 <_Z41__static_initialization_and_destruction_0ii+0x4a>
    143e:	8c e5       	ldi	r24, 0x5C	; 92
    1440:	92 e0       	ldi	r25, 0x02	; 2
    1442:	c7 df       	rcall	.-114    	; 0x13d2 <_ZN4UartD1Ev>
    1444:	0f 90       	pop	r0
    1446:	0f 90       	pop	r0
	sei();
}

void Uart::interruptoff(){
	cli();
}
    1448:	0f 90       	pop	r0
    144a:	0f 90       	pop	r0
    144c:	cf 91       	pop	r28
    144e:	df 91       	pop	r29
    1450:	08 95       	ret

00001452 <_GLOBAL__I__ZN4Uart4uartE>:
    1452:	df 93       	push	r29
    1454:	cf 93       	push	r28
    1456:	cd b7       	in	r28, 0x3d	; 61
    1458:	de b7       	in	r29, 0x3e	; 62
    145a:	81 e0       	ldi	r24, 0x01	; 1
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	6f ef       	ldi	r22, 0xFF	; 255
    1460:	7f ef       	ldi	r23, 0xFF	; 255
    1462:	cb df       	rcall	.-106    	; 0x13fa <_Z41__static_initialization_and_destruction_0ii>
    1464:	cf 91       	pop	r28
    1466:	df 91       	pop	r29
    1468:	08 95       	ret

0000146a <_GLOBAL__D__ZN4Uart4uartE>:
    146a:	df 93       	push	r29
    146c:	cf 93       	push	r28
    146e:	cd b7       	in	r28, 0x3d	; 61
    1470:	de b7       	in	r29, 0x3e	; 62
    1472:	80 e0       	ldi	r24, 0x00	; 0
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	6f ef       	ldi	r22, 0xFF	; 255
    1478:	7f ef       	ldi	r23, 0xFF	; 255
    147a:	bf df       	rcall	.-130    	; 0x13fa <_Z41__static_initialization_and_destruction_0ii>
    147c:	cf 91       	pop	r28
    147e:	df 91       	pop	r29
    1480:	08 95       	ret

00001482 <main>:
#include "util/atomic.h"
#include "Uart.h"
#include "Led.h"
#define TIME 100

int main(){
    1482:	0f 93       	push	r16
    1484:	1f 93       	push	r17
    1486:	df 93       	push	r29
    1488:	cf 93       	push	r28
    148a:	cd b7       	in	r28, 0x3d	; 61
    148c:	de b7       	in	r29, 0x3e	; 62
    148e:	c6 57       	subi	r28, 0x76	; 118
    1490:	d1 40       	sbci	r29, 0x01	; 1
    1492:	0f b6       	in	r0, 0x3f	; 63
    1494:	f8 94       	cli
    1496:	de bf       	out	0x3e, r29	; 62
    1498:	0f be       	out	0x3f, r0	; 63
    149a:	cd bf       	out	0x3d, r28	; 61
	Analog_Digital adc;
    149c:	ce 01       	movw	r24, r28
    149e:	41 96       	adiw	r24, 0x11	; 17
    14a0:	0b dc       	rcall	.-2026   	; 0xcb8 <_ZN14Analog_DigitalC1Ev>
    14a2:	ce 01       	movw	r24, r28
	Uart u;
    14a4:	89 5b       	subi	r24, 0xB9	; 185
    14a6:	9f 4f       	sbci	r25, 0xFF	; 255
    14a8:	d9 dd       	rcall	.-1102   	; 0x105c <_ZN4UartC1Ev>
    14aa:	78 94       	sei
    14ac:	1a 82       	std	Y+2, r1	; 0x02
	sei();
    14ae:	19 82       	std	Y+1, r1	; 0x01
	int val = 0;
    14b0:	ce 01       	movw	r24, r28
    14b2:	41 96       	adiw	r24, 0x11	; 17

	while(1){
		val = adc.rms(30);
    14b4:	6e e1       	ldi	r22, 0x1E	; 30
    14b6:	70 e0       	ldi	r23, 0x00	; 0
    14b8:	9f dc       	rcall	.-1730   	; 0xdf8 <_ZN14Analog_Digital3rmsEi>
    14ba:	dc 01       	movw	r26, r24
    14bc:	cb 01       	movw	r24, r22
    14be:	9a 83       	std	Y+2, r25	; 0x02
    14c0:	89 83       	std	Y+1, r24	; 0x01
    14c2:	29 81       	ldd	r18, Y+1	; 0x01
    14c4:	ce 01       	movw	r24, r28
    14c6:	89 5b       	subi	r24, 0xB9	; 185
		//if(u.has_data())
			u.put(val);
    14c8:	9f 4f       	sbci	r25, 0xFF	; 255
    14ca:	62 2f       	mov	r22, r18
    14cc:	ee dd       	rcall	.-1060   	; 0x10aa <_ZN4Uart3putEh>
    14ce:	80 e0       	ldi	r24, 0x00	; 0
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	a8 ec       	ldi	r26, 0xC8	; 200
    14d4:	b2 e4       	ldi	r27, 0x42	; 66
    14d6:	8b 83       	std	Y+3, r24	; 0x03
    14d8:	9c 83       	std	Y+4, r25	; 0x04
    14da:	ad 83       	std	Y+5, r26	; 0x05
    14dc:	be 83       	std	Y+6, r27	; 0x06
    14de:	6b 81       	ldd	r22, Y+3	; 0x03
    14e0:	7c 81       	ldd	r23, Y+4	; 0x04
    14e2:	8d 81       	ldd	r24, Y+5	; 0x05
    14e4:	9e 81       	ldd	r25, Y+6	; 0x06
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    14e6:	20 e0       	ldi	r18, 0x00	; 0
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	4a e7       	ldi	r20, 0x7A	; 122
    14ec:	55 e4       	ldi	r21, 0x45	; 69
    14ee:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
    14f2:	dc 01       	movw	r26, r24
    14f4:	cb 01       	movw	r24, r22
    14f6:	8f 83       	std	Y+7, r24	; 0x07
    14f8:	98 87       	std	Y+8, r25	; 0x08
    14fa:	a9 87       	std	Y+9, r26	; 0x09
    14fc:	ba 87       	std	Y+10, r27	; 0x0a
    14fe:	11 e0       	ldi	r17, 0x01	; 1
    1500:	6f 81       	ldd	r22, Y+7	; 0x07
    1502:	78 85       	ldd	r23, Y+8	; 0x08
    1504:	89 85       	ldd	r24, Y+9	; 0x09
	if (__tmp < 1.0)
    1506:	9a 85       	ldd	r25, Y+10	; 0x0a
    1508:	20 e0       	ldi	r18, 0x00	; 0
    150a:	30 e0       	ldi	r19, 0x00	; 0
    150c:	40 e8       	ldi	r20, 0x80	; 128
    150e:	5f e3       	ldi	r21, 0x3F	; 63
    1510:	ed d8       	rcall	.-3622   	; 0x6ec <__ltsf2>
    1512:	88 23       	and	r24, r24
    1514:	0c f0       	brlt	.+2      	; 0x1518 <main+0x96>
    1516:	10 e0       	ldi	r17, 0x00	; 0
    1518:	11 23       	and	r17, r17
    151a:	29 f0       	breq	.+10     	; 0x1526 <main+0xa4>
    151c:	81 e0       	ldi	r24, 0x01	; 1
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	9c 87       	std	Y+12, r25	; 0x0c
    1522:	8b 87       	std	Y+11, r24	; 0x0b
    1524:	49 c0       	rjmp	.+146    	; 0x15b8 <main+0x136>
		__ticks = 1;
    1526:	11 e0       	ldi	r17, 0x01	; 1
    1528:	6f 81       	ldd	r22, Y+7	; 0x07
    152a:	78 85       	ldd	r23, Y+8	; 0x08
    152c:	89 85       	ldd	r24, Y+9	; 0x09
    152e:	9a 85       	ldd	r25, Y+10	; 0x0a
	else if (__tmp > 65535)
    1530:	20 e0       	ldi	r18, 0x00	; 0
    1532:	3f ef       	ldi	r19, 0xFF	; 255
    1534:	4f e7       	ldi	r20, 0x7F	; 127
    1536:	57 e4       	ldi	r21, 0x47	; 71
    1538:	83 d8       	rcall	.-3834   	; 0x640 <__gtsf2>
    153a:	18 16       	cp	r1, r24
    153c:	0c f0       	brlt	.+2      	; 0x1540 <main+0xbe>
    153e:	10 e0       	ldi	r17, 0x00	; 0
    1540:	11 23       	and	r17, r17
    1542:	81 f1       	breq	.+96     	; 0x15a4 <main+0x122>
    1544:	6b 81       	ldd	r22, Y+3	; 0x03
    1546:	7c 81       	ldd	r23, Y+4	; 0x04
    1548:	8d 81       	ldd	r24, Y+5	; 0x05
    154a:	9e 81       	ldd	r25, Y+6	; 0x06
    154c:	20 e0       	ldi	r18, 0x00	; 0
    154e:	30 e0       	ldi	r19, 0x00	; 0
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1550:	40 e2       	ldi	r20, 0x20	; 32
    1552:	51 e4       	ldi	r21, 0x41	; 65
    1554:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
    1558:	dc 01       	movw	r26, r24
    155a:	cb 01       	movw	r24, r22
    155c:	bc 01       	movw	r22, r24
    155e:	cd 01       	movw	r24, r26
    1560:	0e 94 61 00 	call	0xc2	; 0xc2 <__fixunssfsi>
    1564:	dc 01       	movw	r26, r24
    1566:	cb 01       	movw	r24, r22
    1568:	9c 87       	std	Y+12, r25	; 0x0c
    156a:	8b 87       	std	Y+11, r24	; 0x0b
    156c:	12 c0       	rjmp	.+36     	; 0x1592 <main+0x110>
    156e:	80 e9       	ldi	r24, 0x90	; 144
    1570:	91 e0       	ldi	r25, 0x01	; 1
    1572:	9e 87       	std	Y+14, r25	; 0x0e
    1574:	8d 87       	std	Y+13, r24	; 0x0d
    1576:	8d 85       	ldd	r24, Y+13	; 0x0d
    1578:	9e 85       	ldd	r25, Y+14	; 0x0e
    157a:	8c 01       	movw	r16, r24
    157c:	c8 01       	movw	r24, r16
    157e:	01 97       	sbiw	r24, 0x01	; 1
    1580:	f1 f7       	brne	.-4      	; 0x157e <main+0xfc>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    1582:	8c 01       	movw	r16, r24
    1584:	1e 87       	std	Y+14, r17	; 0x0e
    1586:	0d 87       	std	Y+13, r16	; 0x0d
    1588:	8b 85       	ldd	r24, Y+11	; 0x0b
    158a:	9c 85       	ldd	r25, Y+12	; 0x0c
    158c:	01 97       	sbiw	r24, 0x01	; 1
    158e:	9c 87       	std	Y+12, r25	; 0x0c
    1590:	8b 87       	std	Y+11, r24	; 0x0b
    1592:	21 e0       	ldi	r18, 0x01	; 1
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1594:	8b 85       	ldd	r24, Y+11	; 0x0b
    1596:	9c 85       	ldd	r25, Y+12	; 0x0c
    1598:	00 97       	sbiw	r24, 0x00	; 0
    159a:	09 f4       	brne	.+2      	; 0x159e <main+0x11c>
    159c:	20 e0       	ldi	r18, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    159e:	22 23       	and	r18, r18
    15a0:	31 f7       	brne	.-52     	; 0x156e <main+0xec>
    15a2:	86 cf       	rjmp	.-244    	; 0x14b0 <main+0x2e>
    15a4:	6f 81       	ldd	r22, Y+7	; 0x07
    15a6:	78 85       	ldd	r23, Y+8	; 0x08
    15a8:	89 85       	ldd	r24, Y+9	; 0x09
    15aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    15ac:	0e 94 61 00 	call	0xc2	; 0xc2 <__fixunssfsi>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15b0:	dc 01       	movw	r26, r24
    15b2:	cb 01       	movw	r24, r22
    15b4:	9c 87       	std	Y+12, r25	; 0x0c
    15b6:	8b 87       	std	Y+11, r24	; 0x0b
    15b8:	8b 85       	ldd	r24, Y+11	; 0x0b
    15ba:	9c 85       	ldd	r25, Y+12	; 0x0c
    15bc:	98 8b       	std	Y+16, r25	; 0x10
    15be:	8f 87       	std	Y+15, r24	; 0x0f
    15c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    15c2:	98 89       	ldd	r25, Y+16	; 0x10
    15c4:	8c 01       	movw	r16, r24
    15c6:	c8 01       	movw	r24, r16
    15c8:	01 97       	sbiw	r24, 0x01	; 1
    15ca:	f1 f7       	brne	.-4      	; 0x15c8 <main+0x146>
    15cc:	8c 01       	movw	r16, r24
    15ce:	18 8b       	std	Y+16, r17	; 0x10
    15d0:	0f 87       	std	Y+15, r16	; 0x0f
    15d2:	6e cf       	rjmp	.-292    	; 0x14b0 <main+0x2e>

000015d4 <__udivmodsi4>:
    15d4:	a1 e2       	ldi	r26, 0x21	; 33
    15d6:	1a 2e       	mov	r1, r26
    15d8:	aa 1b       	sub	r26, r26
    15da:	bb 1b       	sub	r27, r27
    15dc:	fd 01       	movw	r30, r26
	Analog_Digital adc;
	Uart u;
	sei();
	int val = 0;

	while(1){
    15de:	0d c0       	rjmp	.+26     	; 0x15fa <__udivmodsi4_ep>

000015e0 <__udivmodsi4_loop>:
    15e0:	aa 1f       	adc	r26, r26
    15e2:	bb 1f       	adc	r27, r27
    15e4:	ee 1f       	adc	r30, r30
    15e6:	ff 1f       	adc	r31, r31
    15e8:	a2 17       	cp	r26, r18
    15ea:	b3 07       	cpc	r27, r19
    15ec:	e4 07       	cpc	r30, r20
    15ee:	f5 07       	cpc	r31, r21
    15f0:	20 f0       	brcs	.+8      	; 0x15fa <__udivmodsi4_ep>
    15f2:	a2 1b       	sub	r26, r18
    15f4:	b3 0b       	sbc	r27, r19
    15f6:	e4 0b       	sbc	r30, r20
    15f8:	f5 0b       	sbc	r31, r21

000015fa <__udivmodsi4_ep>:
    15fa:	66 1f       	adc	r22, r22
    15fc:	77 1f       	adc	r23, r23
    15fe:	88 1f       	adc	r24, r24
    1600:	99 1f       	adc	r25, r25
    1602:	1a 94       	dec	r1
    1604:	69 f7       	brne	.-38     	; 0x15e0 <__udivmodsi4_loop>
    1606:	60 95       	com	r22
    1608:	70 95       	com	r23
    160a:	80 95       	com	r24
    160c:	90 95       	com	r25
    160e:	9b 01       	movw	r18, r22
    1610:	ac 01       	movw	r20, r24
    1612:	bd 01       	movw	r22, r26
    1614:	cf 01       	movw	r24, r30
    1616:	08 95       	ret

00001618 <__prologue_saves__>:
    1618:	2f 92       	push	r2
    161a:	3f 92       	push	r3
    161c:	4f 92       	push	r4
    161e:	5f 92       	push	r5
    1620:	6f 92       	push	r6
    1622:	7f 92       	push	r7
    1624:	8f 92       	push	r8
    1626:	9f 92       	push	r9
    1628:	af 92       	push	r10
    162a:	bf 92       	push	r11
    162c:	cf 92       	push	r12
    162e:	df 92       	push	r13
    1630:	ef 92       	push	r14
    1632:	ff 92       	push	r15
    1634:	0f 93       	push	r16
    1636:	1f 93       	push	r17
    1638:	cf 93       	push	r28
    163a:	df 93       	push	r29
    163c:	cd b7       	in	r28, 0x3d	; 61
    163e:	de b7       	in	r29, 0x3e	; 62
    1640:	ca 1b       	sub	r28, r26
    1642:	db 0b       	sbc	r29, r27
    1644:	0f b6       	in	r0, 0x3f	; 63
    1646:	f8 94       	cli
    1648:	de bf       	out	0x3e, r29	; 62
    164a:	0f be       	out	0x3f, r0	; 63
    164c:	cd bf       	out	0x3d, r28	; 61
    164e:	09 94       	ijmp

00001650 <__epilogue_restores__>:
    1650:	2a 88       	ldd	r2, Y+18	; 0x12
    1652:	39 88       	ldd	r3, Y+17	; 0x11
    1654:	48 88       	ldd	r4, Y+16	; 0x10
    1656:	5f 84       	ldd	r5, Y+15	; 0x0f
    1658:	6e 84       	ldd	r6, Y+14	; 0x0e
    165a:	7d 84       	ldd	r7, Y+13	; 0x0d
    165c:	8c 84       	ldd	r8, Y+12	; 0x0c
    165e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1660:	aa 84       	ldd	r10, Y+10	; 0x0a
    1662:	b9 84       	ldd	r11, Y+9	; 0x09
    1664:	c8 84       	ldd	r12, Y+8	; 0x08
    1666:	df 80       	ldd	r13, Y+7	; 0x07
    1668:	ee 80       	ldd	r14, Y+6	; 0x06
    166a:	fd 80       	ldd	r15, Y+5	; 0x05
    166c:	0c 81       	ldd	r16, Y+4	; 0x04
    166e:	1b 81       	ldd	r17, Y+3	; 0x03
    1670:	aa 81       	ldd	r26, Y+2	; 0x02
    1672:	b9 81       	ldd	r27, Y+1	; 0x01
    1674:	ce 0f       	add	r28, r30
    1676:	d1 1d       	adc	r29, r1
    1678:	0f b6       	in	r0, 0x3f	; 63
    167a:	f8 94       	cli
    167c:	de bf       	out	0x3e, r29	; 62
    167e:	0f be       	out	0x3f, r0	; 63
    1680:	cd bf       	out	0x3d, r28	; 61
    1682:	ed 01       	movw	r28, r26
    1684:	08 95       	ret

00001686 <__tablejump2__>:
    1686:	ee 0f       	add	r30, r30
    1688:	ff 1f       	adc	r31, r31

0000168a <__tablejump__>:
    168a:	05 90       	lpm	r0, Z+
    168c:	f4 91       	lpm	r31, Z+
    168e:	e0 2d       	mov	r30, r0
    1690:	09 94       	ijmp
    1692:	11 f4       	brne	.+4      	; 0x1698 <__tablejump__+0xe>
    1694:	0e f4       	brtc	.+2      	; 0x1698 <__tablejump__+0xe>
    1696:	4d c0       	rjmp	.+154    	; 0x1732 <__fp_nan>
    1698:	3e c0       	rjmp	.+124    	; 0x1716 <__fp_mpack>

0000169a <sqrt>:
    169a:	5d d0       	rcall	.+186    	; 0x1756 <__fp_splitA>
    169c:	d0 f3       	brcs	.-12     	; 0x1692 <__tablejump__+0x8>
    169e:	99 23       	and	r25, r25
    16a0:	d9 f3       	breq	.-10     	; 0x1698 <__tablejump__+0xe>
    16a2:	ce f3       	brts	.-14     	; 0x1696 <__tablejump__+0xc>
    16a4:	9f 57       	subi	r25, 0x7F	; 127
    16a6:	55 0b       	sbc	r21, r21
    16a8:	87 ff       	sbrs	r24, 7
    16aa:	46 d0       	rcall	.+140    	; 0x1738 <__fp_norm2>
    16ac:	00 24       	eor	r0, r0
    16ae:	a0 e6       	ldi	r26, 0x60	; 96
    16b0:	40 ea       	ldi	r20, 0xA0	; 160
    16b2:	90 01       	movw	r18, r0
    16b4:	80 58       	subi	r24, 0x80	; 128
    16b6:	56 95       	lsr	r21
    16b8:	97 95       	ror	r25
    16ba:	28 f4       	brcc	.+10     	; 0x16c6 <sqrt+0x2c>
    16bc:	80 5c       	subi	r24, 0xC0	; 192
    16be:	66 0f       	add	r22, r22
    16c0:	77 1f       	adc	r23, r23
    16c2:	88 1f       	adc	r24, r24
    16c4:	20 f0       	brcs	.+8      	; 0x16ce <sqrt+0x34>
    16c6:	26 17       	cp	r18, r22
    16c8:	37 07       	cpc	r19, r23
    16ca:	48 07       	cpc	r20, r24
    16cc:	30 f4       	brcc	.+12     	; 0x16da <sqrt+0x40>
    16ce:	62 1b       	sub	r22, r18
    16d0:	73 0b       	sbc	r23, r19
    16d2:	84 0b       	sbc	r24, r20
    16d4:	20 29       	or	r18, r0
    16d6:	31 29       	or	r19, r1
    16d8:	4a 2b       	or	r20, r26
    16da:	a6 95       	lsr	r26
    16dc:	17 94       	ror	r1
    16de:	07 94       	ror	r0
    16e0:	20 25       	eor	r18, r0
    16e2:	31 25       	eor	r19, r1
    16e4:	4a 27       	eor	r20, r26
    16e6:	58 f7       	brcc	.-42     	; 0x16be <sqrt+0x24>
    16e8:	66 0f       	add	r22, r22
    16ea:	77 1f       	adc	r23, r23
    16ec:	88 1f       	adc	r24, r24
    16ee:	20 f0       	brcs	.+8      	; 0x16f8 <sqrt+0x5e>
    16f0:	26 17       	cp	r18, r22
    16f2:	37 07       	cpc	r19, r23
    16f4:	48 07       	cpc	r20, r24
    16f6:	30 f4       	brcc	.+12     	; 0x1704 <sqrt+0x6a>
    16f8:	62 0b       	sbc	r22, r18
    16fa:	73 0b       	sbc	r23, r19
    16fc:	84 0b       	sbc	r24, r20
    16fe:	20 0d       	add	r18, r0
    1700:	31 1d       	adc	r19, r1
    1702:	41 1d       	adc	r20, r1
    1704:	a0 95       	com	r26
    1706:	81 f7       	brne	.-32     	; 0x16e8 <sqrt+0x4e>
    1708:	b9 01       	movw	r22, r18
    170a:	84 2f       	mov	r24, r20
    170c:	91 58       	subi	r25, 0x81	; 129
    170e:	88 0f       	add	r24, r24
    1710:	96 95       	lsr	r25
    1712:	87 95       	ror	r24
    1714:	08 95       	ret

00001716 <__fp_mpack>:
    1716:	9f 3f       	cpi	r25, 0xFF	; 255
    1718:	31 f0       	breq	.+12     	; 0x1726 <__fp_mpack_finite+0xc>

0000171a <__fp_mpack_finite>:
    171a:	91 50       	subi	r25, 0x01	; 1
    171c:	20 f4       	brcc	.+8      	; 0x1726 <__fp_mpack_finite+0xc>
    171e:	87 95       	ror	r24
    1720:	77 95       	ror	r23
    1722:	67 95       	ror	r22
    1724:	b7 95       	ror	r27
    1726:	88 0f       	add	r24, r24
    1728:	91 1d       	adc	r25, r1
    172a:	96 95       	lsr	r25
    172c:	87 95       	ror	r24
    172e:	97 f9       	bld	r25, 7
    1730:	08 95       	ret

00001732 <__fp_nan>:
    1732:	9f ef       	ldi	r25, 0xFF	; 255
    1734:	80 ec       	ldi	r24, 0xC0	; 192
    1736:	08 95       	ret

00001738 <__fp_norm2>:
    1738:	91 50       	subi	r25, 0x01	; 1
    173a:	50 40       	sbci	r21, 0x00	; 0
    173c:	66 0f       	add	r22, r22
    173e:	77 1f       	adc	r23, r23
    1740:	88 1f       	adc	r24, r24
    1742:	d2 f7       	brpl	.-12     	; 0x1738 <__fp_norm2>
    1744:	08 95       	ret

00001746 <__fp_split3>:
    1746:	57 fd       	sbrc	r21, 7
    1748:	90 58       	subi	r25, 0x80	; 128
    174a:	44 0f       	add	r20, r20
    174c:	55 1f       	adc	r21, r21
    174e:	59 f0       	breq	.+22     	; 0x1766 <__fp_splitA+0x10>
    1750:	5f 3f       	cpi	r21, 0xFF	; 255
    1752:	71 f0       	breq	.+28     	; 0x1770 <__fp_splitA+0x1a>
    1754:	47 95       	ror	r20

00001756 <__fp_splitA>:
    1756:	88 0f       	add	r24, r24
    1758:	97 fb       	bst	r25, 7
    175a:	99 1f       	adc	r25, r25
    175c:	61 f0       	breq	.+24     	; 0x1776 <__fp_splitA+0x20>
    175e:	9f 3f       	cpi	r25, 0xFF	; 255
    1760:	79 f0       	breq	.+30     	; 0x1780 <__fp_splitA+0x2a>
    1762:	87 95       	ror	r24
    1764:	08 95       	ret
    1766:	12 16       	cp	r1, r18
    1768:	13 06       	cpc	r1, r19
    176a:	14 06       	cpc	r1, r20
    176c:	55 1f       	adc	r21, r21
    176e:	f2 cf       	rjmp	.-28     	; 0x1754 <__fp_split3+0xe>
    1770:	46 95       	lsr	r20
    1772:	f1 df       	rcall	.-30     	; 0x1756 <__fp_splitA>
    1774:	08 c0       	rjmp	.+16     	; 0x1786 <__fp_splitA+0x30>
    1776:	16 16       	cp	r1, r22
    1778:	17 06       	cpc	r1, r23
    177a:	18 06       	cpc	r1, r24
    177c:	99 1f       	adc	r25, r25
    177e:	f1 cf       	rjmp	.-30     	; 0x1762 <__fp_splitA+0xc>
    1780:	86 95       	lsr	r24
    1782:	71 05       	cpc	r23, r1
    1784:	61 05       	cpc	r22, r1
    1786:	08 94       	sec
    1788:	08 95       	ret

0000178a <malloc>:
    178a:	cf 93       	push	r28
    178c:	df 93       	push	r29
    178e:	82 30       	cpi	r24, 0x02	; 2
    1790:	91 05       	cpc	r25, r1
    1792:	10 f4       	brcc	.+4      	; 0x1798 <malloc+0xe>
    1794:	82 e0       	ldi	r24, 0x02	; 2
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	e0 91 8e 03 	lds	r30, 0x038E
    179c:	f0 91 8f 03 	lds	r31, 0x038F
    17a0:	40 e0       	ldi	r20, 0x00	; 0
    17a2:	50 e0       	ldi	r21, 0x00	; 0
    17a4:	20 e0       	ldi	r18, 0x00	; 0
    17a6:	30 e0       	ldi	r19, 0x00	; 0
    17a8:	26 c0       	rjmp	.+76     	; 0x17f6 <malloc+0x6c>
    17aa:	60 81       	ld	r22, Z
    17ac:	71 81       	ldd	r23, Z+1	; 0x01
    17ae:	68 17       	cp	r22, r24
    17b0:	79 07       	cpc	r23, r25
    17b2:	e0 f0       	brcs	.+56     	; 0x17ec <malloc+0x62>
    17b4:	68 17       	cp	r22, r24
    17b6:	79 07       	cpc	r23, r25
    17b8:	81 f4       	brne	.+32     	; 0x17da <malloc+0x50>
    17ba:	82 81       	ldd	r24, Z+2	; 0x02
    17bc:	93 81       	ldd	r25, Z+3	; 0x03
    17be:	21 15       	cp	r18, r1
    17c0:	31 05       	cpc	r19, r1
    17c2:	31 f0       	breq	.+12     	; 0x17d0 <malloc+0x46>
    17c4:	d9 01       	movw	r26, r18
    17c6:	13 96       	adiw	r26, 0x03	; 3
    17c8:	9c 93       	st	X, r25
    17ca:	8e 93       	st	-X, r24
    17cc:	12 97       	sbiw	r26, 0x02	; 2
    17ce:	2b c0       	rjmp	.+86     	; 0x1826 <malloc+0x9c>
    17d0:	90 93 8f 03 	sts	0x038F, r25
    17d4:	80 93 8e 03 	sts	0x038E, r24
    17d8:	26 c0       	rjmp	.+76     	; 0x1826 <malloc+0x9c>
    17da:	41 15       	cp	r20, r1
    17dc:	51 05       	cpc	r21, r1
    17de:	19 f0       	breq	.+6      	; 0x17e6 <malloc+0x5c>
    17e0:	64 17       	cp	r22, r20
    17e2:	75 07       	cpc	r23, r21
    17e4:	18 f4       	brcc	.+6      	; 0x17ec <malloc+0x62>
    17e6:	ab 01       	movw	r20, r22
    17e8:	e9 01       	movw	r28, r18
    17ea:	df 01       	movw	r26, r30
    17ec:	9f 01       	movw	r18, r30
    17ee:	72 81       	ldd	r23, Z+2	; 0x02
    17f0:	63 81       	ldd	r22, Z+3	; 0x03
    17f2:	e7 2f       	mov	r30, r23
    17f4:	f6 2f       	mov	r31, r22
    17f6:	30 97       	sbiw	r30, 0x00	; 0
    17f8:	c1 f6       	brne	.-80     	; 0x17aa <malloc+0x20>
    17fa:	41 15       	cp	r20, r1
    17fc:	51 05       	cpc	r21, r1
    17fe:	01 f1       	breq	.+64     	; 0x1840 <malloc+0xb6>
    1800:	48 1b       	sub	r20, r24
    1802:	59 0b       	sbc	r21, r25
    1804:	44 30       	cpi	r20, 0x04	; 4
    1806:	51 05       	cpc	r21, r1
    1808:	80 f4       	brcc	.+32     	; 0x182a <malloc+0xa0>
    180a:	12 96       	adiw	r26, 0x02	; 2
    180c:	8d 91       	ld	r24, X+
    180e:	9c 91       	ld	r25, X
    1810:	13 97       	sbiw	r26, 0x03	; 3
    1812:	20 97       	sbiw	r28, 0x00	; 0
    1814:	19 f0       	breq	.+6      	; 0x181c <malloc+0x92>
    1816:	9b 83       	std	Y+3, r25	; 0x03
    1818:	8a 83       	std	Y+2, r24	; 0x02
    181a:	04 c0       	rjmp	.+8      	; 0x1824 <malloc+0x9a>
    181c:	90 93 8f 03 	sts	0x038F, r25
    1820:	80 93 8e 03 	sts	0x038E, r24
    1824:	fd 01       	movw	r30, r26
    1826:	32 96       	adiw	r30, 0x02	; 2
    1828:	46 c0       	rjmp	.+140    	; 0x18b6 <malloc+0x12c>
    182a:	fd 01       	movw	r30, r26
    182c:	e4 0f       	add	r30, r20
    182e:	f5 1f       	adc	r31, r21
    1830:	81 93       	st	Z+, r24
    1832:	91 93       	st	Z+, r25
    1834:	42 50       	subi	r20, 0x02	; 2
    1836:	50 40       	sbci	r21, 0x00	; 0
    1838:	11 96       	adiw	r26, 0x01	; 1
    183a:	5c 93       	st	X, r21
    183c:	4e 93       	st	-X, r20
    183e:	3b c0       	rjmp	.+118    	; 0x18b6 <malloc+0x12c>
    1840:	20 91 8c 03 	lds	r18, 0x038C
    1844:	30 91 8d 03 	lds	r19, 0x038D
    1848:	21 15       	cp	r18, r1
    184a:	31 05       	cpc	r19, r1
    184c:	41 f4       	brne	.+16     	; 0x185e <malloc+0xd4>
    184e:	20 91 0a 02 	lds	r18, 0x020A
    1852:	30 91 0b 02 	lds	r19, 0x020B
    1856:	30 93 8d 03 	sts	0x038D, r19
    185a:	20 93 8c 03 	sts	0x038C, r18
    185e:	20 91 0c 02 	lds	r18, 0x020C
    1862:	30 91 0d 02 	lds	r19, 0x020D
    1866:	21 15       	cp	r18, r1
    1868:	31 05       	cpc	r19, r1
    186a:	41 f4       	brne	.+16     	; 0x187c <malloc+0xf2>
    186c:	2d b7       	in	r18, 0x3d	; 61
    186e:	3e b7       	in	r19, 0x3e	; 62
    1870:	40 91 08 02 	lds	r20, 0x0208
    1874:	50 91 09 02 	lds	r21, 0x0209
    1878:	24 1b       	sub	r18, r20
    187a:	35 0b       	sbc	r19, r21
    187c:	e0 91 8c 03 	lds	r30, 0x038C
    1880:	f0 91 8d 03 	lds	r31, 0x038D
    1884:	e2 17       	cp	r30, r18
    1886:	f3 07       	cpc	r31, r19
    1888:	a0 f4       	brcc	.+40     	; 0x18b2 <malloc+0x128>
    188a:	2e 1b       	sub	r18, r30
    188c:	3f 0b       	sbc	r19, r31
    188e:	28 17       	cp	r18, r24
    1890:	39 07       	cpc	r19, r25
    1892:	78 f0       	brcs	.+30     	; 0x18b2 <malloc+0x128>
    1894:	ac 01       	movw	r20, r24
    1896:	4e 5f       	subi	r20, 0xFE	; 254
    1898:	5f 4f       	sbci	r21, 0xFF	; 255
    189a:	24 17       	cp	r18, r20
    189c:	35 07       	cpc	r19, r21
    189e:	48 f0       	brcs	.+18     	; 0x18b2 <malloc+0x128>
    18a0:	4e 0f       	add	r20, r30
    18a2:	5f 1f       	adc	r21, r31
    18a4:	50 93 8d 03 	sts	0x038D, r21
    18a8:	40 93 8c 03 	sts	0x038C, r20
    18ac:	81 93       	st	Z+, r24
    18ae:	91 93       	st	Z+, r25
    18b0:	02 c0       	rjmp	.+4      	; 0x18b6 <malloc+0x12c>
    18b2:	e0 e0       	ldi	r30, 0x00	; 0
    18b4:	f0 e0       	ldi	r31, 0x00	; 0
    18b6:	cf 01       	movw	r24, r30
    18b8:	df 91       	pop	r29
    18ba:	cf 91       	pop	r28
    18bc:	08 95       	ret

000018be <free>:
    18be:	cf 93       	push	r28
    18c0:	df 93       	push	r29
    18c2:	00 97       	sbiw	r24, 0x00	; 0
    18c4:	09 f4       	brne	.+2      	; 0x18c8 <free+0xa>
    18c6:	91 c0       	rjmp	.+290    	; 0x19ea <free+0x12c>
    18c8:	fc 01       	movw	r30, r24
    18ca:	32 97       	sbiw	r30, 0x02	; 2
    18cc:	13 82       	std	Z+3, r1	; 0x03
    18ce:	12 82       	std	Z+2, r1	; 0x02
    18d0:	60 91 8e 03 	lds	r22, 0x038E
    18d4:	70 91 8f 03 	lds	r23, 0x038F
    18d8:	61 15       	cp	r22, r1
    18da:	71 05       	cpc	r23, r1
    18dc:	81 f4       	brne	.+32     	; 0x18fe <free+0x40>
    18de:	20 81       	ld	r18, Z
    18e0:	31 81       	ldd	r19, Z+1	; 0x01
    18e2:	28 0f       	add	r18, r24
    18e4:	39 1f       	adc	r19, r25
    18e6:	80 91 8c 03 	lds	r24, 0x038C
    18ea:	90 91 8d 03 	lds	r25, 0x038D
    18ee:	82 17       	cp	r24, r18
    18f0:	93 07       	cpc	r25, r19
    18f2:	99 f5       	brne	.+102    	; 0x195a <free+0x9c>
    18f4:	f0 93 8d 03 	sts	0x038D, r31
    18f8:	e0 93 8c 03 	sts	0x038C, r30
    18fc:	76 c0       	rjmp	.+236    	; 0x19ea <free+0x12c>
    18fe:	db 01       	movw	r26, r22
    1900:	80 e0       	ldi	r24, 0x00	; 0
    1902:	90 e0       	ldi	r25, 0x00	; 0
    1904:	02 c0       	rjmp	.+4      	; 0x190a <free+0x4c>
    1906:	cd 01       	movw	r24, r26
    1908:	d9 01       	movw	r26, r18
    190a:	ae 17       	cp	r26, r30
    190c:	bf 07       	cpc	r27, r31
    190e:	48 f4       	brcc	.+18     	; 0x1922 <free+0x64>
    1910:	12 96       	adiw	r26, 0x02	; 2
    1912:	2d 91       	ld	r18, X+
    1914:	3c 91       	ld	r19, X
    1916:	13 97       	sbiw	r26, 0x03	; 3
    1918:	21 15       	cp	r18, r1
    191a:	31 05       	cpc	r19, r1
    191c:	a1 f7       	brne	.-24     	; 0x1906 <free+0x48>
    191e:	cd 01       	movw	r24, r26
    1920:	21 c0       	rjmp	.+66     	; 0x1964 <free+0xa6>
    1922:	b3 83       	std	Z+3, r27	; 0x03
    1924:	a2 83       	std	Z+2, r26	; 0x02
    1926:	ef 01       	movw	r28, r30
    1928:	49 91       	ld	r20, Y+
    192a:	59 91       	ld	r21, Y+
    192c:	9e 01       	movw	r18, r28
    192e:	24 0f       	add	r18, r20
    1930:	35 1f       	adc	r19, r21
    1932:	a2 17       	cp	r26, r18
    1934:	b3 07       	cpc	r27, r19
    1936:	79 f4       	brne	.+30     	; 0x1956 <free+0x98>
    1938:	2d 91       	ld	r18, X+
    193a:	3c 91       	ld	r19, X
    193c:	11 97       	sbiw	r26, 0x01	; 1
    193e:	24 0f       	add	r18, r20
    1940:	35 1f       	adc	r19, r21
    1942:	2e 5f       	subi	r18, 0xFE	; 254
    1944:	3f 4f       	sbci	r19, 0xFF	; 255
    1946:	31 83       	std	Z+1, r19	; 0x01
    1948:	20 83       	st	Z, r18
    194a:	12 96       	adiw	r26, 0x02	; 2
    194c:	2d 91       	ld	r18, X+
    194e:	3c 91       	ld	r19, X
    1950:	13 97       	sbiw	r26, 0x03	; 3
    1952:	33 83       	std	Z+3, r19	; 0x03
    1954:	22 83       	std	Z+2, r18	; 0x02
    1956:	00 97       	sbiw	r24, 0x00	; 0
    1958:	29 f4       	brne	.+10     	; 0x1964 <free+0xa6>
    195a:	f0 93 8f 03 	sts	0x038F, r31
    195e:	e0 93 8e 03 	sts	0x038E, r30
    1962:	43 c0       	rjmp	.+134    	; 0x19ea <free+0x12c>
    1964:	dc 01       	movw	r26, r24
    1966:	13 96       	adiw	r26, 0x03	; 3
    1968:	fc 93       	st	X, r31
    196a:	ee 93       	st	-X, r30
    196c:	12 97       	sbiw	r26, 0x02	; 2
    196e:	4d 91       	ld	r20, X+
    1970:	5d 91       	ld	r21, X+
    1972:	a4 0f       	add	r26, r20
    1974:	b5 1f       	adc	r27, r21
    1976:	ea 17       	cp	r30, r26
    1978:	fb 07       	cpc	r31, r27
    197a:	69 f4       	brne	.+26     	; 0x1996 <free+0xd8>
    197c:	20 81       	ld	r18, Z
    197e:	31 81       	ldd	r19, Z+1	; 0x01
    1980:	24 0f       	add	r18, r20
    1982:	35 1f       	adc	r19, r21
    1984:	2e 5f       	subi	r18, 0xFE	; 254
    1986:	3f 4f       	sbci	r19, 0xFF	; 255
    1988:	ec 01       	movw	r28, r24
    198a:	39 83       	std	Y+1, r19	; 0x01
    198c:	28 83       	st	Y, r18
    198e:	22 81       	ldd	r18, Z+2	; 0x02
    1990:	33 81       	ldd	r19, Z+3	; 0x03
    1992:	3b 83       	std	Y+3, r19	; 0x03
    1994:	2a 83       	std	Y+2, r18	; 0x02
    1996:	e0 e0       	ldi	r30, 0x00	; 0
    1998:	f0 e0       	ldi	r31, 0x00	; 0
    199a:	02 c0       	rjmp	.+4      	; 0x19a0 <free+0xe2>
    199c:	fb 01       	movw	r30, r22
    199e:	bc 01       	movw	r22, r24
    19a0:	db 01       	movw	r26, r22
    19a2:	12 96       	adiw	r26, 0x02	; 2
    19a4:	8d 91       	ld	r24, X+
    19a6:	9c 91       	ld	r25, X
    19a8:	13 97       	sbiw	r26, 0x03	; 3
    19aa:	00 97       	sbiw	r24, 0x00	; 0
    19ac:	b9 f7       	brne	.-18     	; 0x199c <free+0xde>
    19ae:	9b 01       	movw	r18, r22
    19b0:	2e 5f       	subi	r18, 0xFE	; 254
    19b2:	3f 4f       	sbci	r19, 0xFF	; 255
    19b4:	8d 91       	ld	r24, X+
    19b6:	9c 91       	ld	r25, X
    19b8:	11 97       	sbiw	r26, 0x01	; 1
    19ba:	82 0f       	add	r24, r18
    19bc:	93 1f       	adc	r25, r19
    19be:	40 91 8c 03 	lds	r20, 0x038C
    19c2:	50 91 8d 03 	lds	r21, 0x038D
    19c6:	48 17       	cp	r20, r24
    19c8:	59 07       	cpc	r21, r25
    19ca:	79 f4       	brne	.+30     	; 0x19ea <free+0x12c>
    19cc:	30 97       	sbiw	r30, 0x00	; 0
    19ce:	29 f4       	brne	.+10     	; 0x19da <free+0x11c>
    19d0:	10 92 8f 03 	sts	0x038F, r1
    19d4:	10 92 8e 03 	sts	0x038E, r1
    19d8:	02 c0       	rjmp	.+4      	; 0x19de <free+0x120>
    19da:	13 82       	std	Z+3, r1	; 0x03
    19dc:	12 82       	std	Z+2, r1	; 0x02
    19de:	22 50       	subi	r18, 0x02	; 2
    19e0:	30 40       	sbci	r19, 0x00	; 0
    19e2:	30 93 8d 03 	sts	0x038D, r19
    19e6:	20 93 8c 03 	sts	0x038C, r18
    19ea:	df 91       	pop	r29
    19ec:	cf 91       	pop	r28
    19ee:	08 95       	ret

000019f0 <__do_global_dtors>:
    19f0:	10 e0       	ldi	r17, 0x00	; 0
    19f2:	cc e6       	ldi	r28, 0x6C	; 108
    19f4:	d0 e0       	ldi	r29, 0x00	; 0
    19f6:	03 c0       	rjmp	.+6      	; 0x19fe <__do_global_dtors+0xe>
    19f8:	fe 01       	movw	r30, r28
    19fa:	47 de       	rcall	.-882    	; 0x168a <__tablejump__>
    19fc:	22 96       	adiw	r28, 0x02	; 2
    19fe:	c0 37       	cpi	r28, 0x70	; 112
    1a00:	d1 07       	cpc	r29, r17
    1a02:	d1 f7       	brne	.-12     	; 0x19f8 <__do_global_dtors+0x8>
    1a04:	f8 94       	cli

00001a06 <__stop_program>:
    1a06:	ff cf       	rjmp	.-2      	; 0x1a06 <__stop_program>
